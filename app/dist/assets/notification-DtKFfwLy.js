import{_ as c,s as o,b as n,$ as r,a0 as e}from"./index-Cz3doEcl.js";import{B as h}from"./baseService-IKxxVQs3.js";import"./react-vendor-Bs7gn1Hv.js";import"./monaco-vendor-Dv-Uvxl1.js";class f extends h{state;constructor(){super("notification"),this.state=new c}get(t){return this.getState().data.find(o(t))}update(t,s){this.dispatch(i=>{const a=i.data.find(o(typeof t=="object"?t.id:t));a&&Object.assign(a,typeof t=="object"?t:s?.(a))})}remove(t){this.dispatch(s=>{const i=s.data.findIndex(o(t));i!==-1&&s.data.splice(i,1)}),this.close(t)}open(t){this.add(t),this.dispatch(s=>{s.toasts.push(t.id)})}close(t){this.dispatch(s=>{const i=s.toasts.indexOf(t);i!==-1&&s.toasts.splice(i,1)})}closeAll(){this.dispatch(t=>{t.toasts.length=0})}add(t){this.dispatch(s=>{const i=n(t).map(a=>({...a,status:r.WaitRead}));s.data.push(...i)})}addToolbar(t){this.dispatch(s=>{s.toolbar.push(...n(t))})}clear(){this.dispatch(t=>{t.data.length=0})}reset(){this.setState(new c)}onCloseNotification(t){this.subscribe(e.onCloseNotification,t)}onClick=t=>{this.subscribe(e.onClick,t)};onClickItem=t=>{this.subscribe(e.onClickItem,t)};onKeyPress=t=>{this.subscribe(e.onKeyPress,t)};onActionBarClick=t=>{this.subscribe(e.onActionBarClick,t)}}export{f as NotificationService};
//# sourceMappingURL=notification-DtKFfwLy.js.map
