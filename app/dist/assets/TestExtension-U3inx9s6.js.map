{"version":3,"file":"TestExtension-U3inx9s6.js","sources":["../../app/src/core/pluginSystem/types.ts","../../app/src/core/pluginSystem/PluginManager.ts","../../app/src/core/pluginSystem/ObsidianCompatiblePluginManager.ts","../../app/src/plugins/rss/RssPlugin.ts","../../app/src/plugins/rss/manifest.ts","../../app/src/plugins/obsidianExample/ObsidianExamplePlugin.ts","../../app/src/plugins/obsidianExample/manifest.ts","../../app/src/plugins/hello/HelloPlugin.ts","../../app/src/plugins/hello/manifest.ts","../../app/src/plugins/excalidraw/ExcalidrawPlugin.ts","../../app/src/plugins/excalidraw/manifest.ts","../../app/src/core/PluginSystemService.ts","../../src/extensions/TestExtension.tsx"],"sourcesContent":["export enum PluginStatus {\n  REGISTERED = 'registered',\n  ENABLED = 'enabled',\n  DISABLED = 'disabled',\n  ERROR = 'error'\n}\n\nexport interface IPluginManifest {\n  id: string;\n  name: string;\n  version: string;\n  description: string;\n  author: string;\n  dependencies?: string[];\n  pluginClass: any;\n  minAppVersion?: string;\n  isDesktopOnly?: boolean;\n}\n\nexport interface IPlugin {\n  id: string;\n  name: string;\n  version: string;\n  description: string;\n  author: string;\n  dependencies: string[];\n  status: PluginStatus;\n  manifest: IPluginManifest;\n  instance: any;\n  api: IPluginAPI | null;\n}\n\nexport interface IFileSystemAPI {\n  readFile: (path: string) => Promise<string>;\n  writeFile: (path: string, content: string) => Promise<void>;\n  deleteFile: (path: string) => Promise<void>;\n  listFiles: (path: string) => Promise<string[]>;\n  createFolder: (path: string) => Promise<void>;\n}\n\nexport interface IUiAPI {\n  addRibbonIcon: (icon: string, title: string, callback: () => void) => void;\n  addStatusBarItem: (element: HTMLElement) => void;\n  addSettingTab: (tab: any) => void;\n  registerView: (id: string, view: any) => void;\n  addActivityBarItem?: (item: {\n    id: string;\n    name: string;\n    icon: string;\n    sortIndex?: number;\n    alignment?: 'top' | 'bottom';\n    onClick: () => void;\n  }) => void;\n  addSidebarItem?: (item: {\n    id: string;\n    name: string;\n    render: () => HTMLElement;\n  }) => void;\n  setAuxiliaryBar?: (visible: boolean) => void;\n  addAuxiliaryBarItem?: (item: {\n    id: string;\n    name: string;\n    icon: string;\n    render: () => HTMLElement;\n  }) => void;\n  setCurrentAuxiliaryBar?: (id: string) => void;\n}\n\nexport interface IEventsAPI {\n  on: (event: string, callback: (...args: any[]) => void) => void;\n  off: (event: string, callback: (...args: any[]) => void) => void;\n  emit: (event: string, ...args: any[]) => void;\n}\n\nexport interface ISettingsAPI {\n  get: (key: string, defaultValue?: any) => any;\n  set: (key: string, value: any) => void;\n  getAll: () => any;\n}\n\nexport interface IAiAPI {\n  chat: (message: string) => Promise<string>;\n  summarize: (content: string) => Promise<string>;\n  translate: (content: string, targetLang: string) => Promise<string>;\n}\n\nexport interface IUtilsAPI {\n  debounce: (func: Function, wait: number) => Function;\n  throttle: (func: Function, wait: number) => Function;\n  generateId: () => string;\n}\n\nexport interface IPluginAPI {\n  // 文件系统 API\n  fileSystem: {\n    readFile: (path: string) => Promise<string>;\n    writeFile: (path: string, content: string) => Promise<void>;\n    deleteFile: (path: string) => Promise<void>;\n    listFiles: (path: string) => Promise<string[]>;\n    createFolder: (path: string) => Promise<void>;\n  };\n\n  // UI API\n  ui: IUiAPI;\n\n  // 事件 API\n  events: {\n    on: (event: string, callback: (...args: any[]) => void) => void;\n    off: (event: string, callback: (...args: any[]) => void) => void;\n    emit: (event: string, ...args: any[]) => void;\n  };\n\n  // 设置 API\n  settings: {\n    get: (key: string, defaultValue?: any) => any;\n    set: (key: string, value: any) => void;\n    getAll: () => any;\n  };\n\n  // AI API\n  ai: {\n    chat: (message: string) => Promise<string>;\n    summarize: (content: string) => Promise<string>;\n    translate: (content: string, targetLang: string) => Promise<string>;\n  };\n\n  // 工具 API\n  utils: {\n    debounce: (func: Function, wait: number) => Function;\n    throttle: (func: Function, wait: number) => Function;\n    generateId: () => string;\n  };\n\n  // Molecule 上下文\n  molecule?: any;\n}\n\nexport interface IPluginClass {\n  onload?: (api: IPluginAPI) => Promise<void> | void;\n  onunload?: () => Promise<void> | void;\n} ","import { IPlugin, IPluginManifest, IPluginAPI, PluginStatus } from './types';\n\n// 浏览器兼容的事件发射器\nclass EventEmitter {\n  private events: { [key: string]: Function[] } = {};\n\n  on(event: string, listener: Function) {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n  }\n\n  off(event: string, listener: Function) {\n    if (!this.events[event]) return;\n    const index = this.events[event].indexOf(listener);\n    if (index > -1) {\n      this.events[event].splice(index, 1);\n    }\n  }\n\n  emit(event: string, ...args: any[]) {\n    if (!this.events[event]) return;\n    this.events[event].forEach(listener => {\n      try {\n        listener(...args);\n      } catch (error) {\n        console.error('Event listener error:', error);\n      }\n    });\n  }\n}\n\nexport class PluginManager extends EventEmitter {\n  private plugins: Map<string, IPlugin> = new Map();\n  private pluginAPIs: Map<string, IPluginAPI> = new Map();\n  private enabledPlugins: Set<string> = new Set();\n  private pluginSettings: Map<string, any> = new Map();\n  private moleculeContext: any;\n\n  constructor(moleculeContext?: any) {\n    super();\n    this.moleculeContext = moleculeContext;\n  }\n\n  /**\n   * 注册插件\n   */\n  async registerPlugin(manifest: IPluginManifest, pluginClass: any): Promise<void> {\n    const pluginId = manifest.id;\n    \n    if (this.plugins.has(pluginId)) {\n      throw new Error(`Plugin ${pluginId} is already registered`);\n    }\n\n    const plugin: IPlugin = {\n      id: pluginId,\n      name: manifest.name,\n      version: manifest.version,\n      description: manifest.description,\n      author: manifest.author,\n      dependencies: manifest.dependencies || [],\n      status: PluginStatus.REGISTERED,\n      manifest,\n      instance: null,\n      api: null\n    };\n\n    this.plugins.set(pluginId, plugin);\n    this.emit('pluginRegistered', plugin);\n  }\n\n  /**\n   * 启用插件\n   */\n  async enablePlugin(pluginId: string): Promise<void> {\n    const plugin = this.plugins.get(pluginId);\n    if (!plugin) {\n      throw new Error(`Plugin ${pluginId} not found`);\n    }\n\n    if (this.enabledPlugins.has(pluginId)) {\n      return; // 已经启用\n    }\n\n    // 检查依赖\n    await this.checkDependencies(plugin);\n\n    try {\n      // 创建插件实例\n      const PluginClass = plugin.manifest.pluginClass;\n      const instance = new PluginClass();\n      \n      // 创建插件 API\n      const api = this.createPluginAPI(pluginId);\n      \n      // 初始化插件\n      if (instance.onload) {\n        await instance.onload(api);\n      }\n\n      plugin.instance = instance;\n      plugin.api = api;\n      plugin.status = PluginStatus.ENABLED;\n      \n      this.enabledPlugins.add(pluginId);\n      this.emit('pluginEnabled', plugin);\n      \n    } catch (error) {\n      plugin.status = PluginStatus.ERROR;\n      this.emit('pluginError', plugin, error);\n      throw error;\n    }\n  }\n\n  /**\n   * 禁用插件\n   */\n  async disablePlugin(pluginId: string): Promise<void> {\n    const plugin = this.plugins.get(pluginId);\n    if (!plugin || !this.enabledPlugins.has(pluginId)) {\n      return;\n    }\n\n    try {\n      // 调用插件的卸载方法\n      if (plugin.instance && plugin.instance.onunload) {\n        await plugin.instance.onunload();\n      }\n\n      plugin.instance = null;\n      plugin.api = null;\n      plugin.status = PluginStatus.REGISTERED;\n      \n      this.enabledPlugins.delete(pluginId);\n      this.emit('pluginDisabled', plugin);\n      \n    } catch (error) {\n      this.emit('pluginError', plugin, error);\n      throw error;\n    }\n  }\n\n  /**\n   * 创建插件 API\n   */\n  private createPluginAPI(pluginId: string): IPluginAPI {\n    const api: IPluginAPI = {\n      // 文件系统 API\n      fileSystem: {\n        readFile: (path: string) => this.readFile(path),\n        writeFile: (path: string, content: string) => this.writeFile(path, content),\n        deleteFile: (path: string) => this.deleteFile(path),\n        listFiles: (path: string) => this.listFiles(path),\n        createFolder: (path: string) => this.createFolder(path),\n      },\n\n      // UI API\n      ui: {\n        addRibbonIcon: (icon: string, title: string, callback: () => void) => \n          this.addRibbonIcon(pluginId, icon, title, callback),\n        addStatusBarItem: (element: HTMLElement) => \n          this.addStatusBarItem(pluginId, element),\n        addSettingTab: (tab: any) => this.addSettingTab(pluginId, tab),\n        registerView: (id: string, view: any) => this.registerView(pluginId, id, view),\n        addActivityBarItem: (item: {\n          id: string;\n          name: string;\n          icon: string;\n          sortIndex?: number;\n          alignment?: 'top' | 'bottom';\n          onClick: () => void;\n        }) => this.addActivityBarItem(pluginId, item),\n        addSidebarItem: (item: {\n          id: string;\n          name: string;\n          render: () => HTMLElement;\n        }) => this.addSidebarItem(pluginId, item),\n        setAuxiliaryBar: (visible: boolean) => this.setAuxiliaryBar(visible),\n        addAuxiliaryBarItem: (item: {\n          id: string;\n          name: string;\n          icon: string;\n          render: () => HTMLElement;\n        }) => this.addAuxiliaryBarItem(item),\n        setCurrentAuxiliaryBar: (id: string) => this.setCurrentAuxiliaryBar(id),\n      },\n\n      // 事件 API\n      events: {\n        on: (event: string, callback: (...args: any[]) => void) => this.on(event, callback),\n        off: (event: string, callback: (...args: any[]) => void) => this.off(event, callback),\n        emit: (event: string, ...args: any[]) => this.emit(event, ...args),\n      },\n\n      // 设置 API\n      settings: {\n        get: (key: string, defaultValue?: any) => this.getSetting(pluginId, key, defaultValue),\n        set: (key: string, value: any) => this.setSetting(pluginId, key, value),\n        getAll: () => this.getAllSettings(pluginId),\n      },\n\n      // AI API\n      ai: {\n        chat: (message: string) => this.aiChat(message),\n        summarize: (content: string) => this.aiSummarize(content),\n        translate: (content: string, targetLang: string) => this.aiTranslate(content, targetLang),\n      },\n\n      // 工具 API\n      utils: {\n        debounce: (func: Function, wait: number) => this.debounce(func, wait),\n        throttle: (func: Function, wait: number) => this.throttle(func, wait),\n        generateId: () => this.generateId(),\n      },\n\n      // Molecule 上下文\n      molecule: this.moleculeContext,\n    };\n\n    this.pluginAPIs.set(pluginId, api);\n    return api;\n  }\n\n  /**\n   * 检查插件依赖\n   */\n  private async checkDependencies(plugin: IPlugin): Promise<void> {\n    for (const dep of plugin.dependencies) {\n      if (!this.enabledPlugins.has(dep)) {\n        throw new Error(`Plugin ${plugin.id} depends on ${dep} which is not enabled`);\n      }\n    }\n  }\n\n  // 文件系统方法\n  private async readFile(path: string): Promise<string> {\n    // 实现文件读取逻辑\n    return '';\n  }\n\n  private async writeFile(path: string, content: string): Promise<void> {\n    // 实现文件写入逻辑\n  }\n\n  private async deleteFile(path: string): Promise<void> {\n    // 实现文件删除逻辑\n  }\n\n  private async listFiles(path: string): Promise<string[]> {\n    // 实现文件列表逻辑\n    return [];\n  }\n\n  private async createFolder(path: string): Promise<void> {\n    // 实现文件夹创建逻辑\n  }\n\n  // UI 方法\n  private addRibbonIcon(pluginId: string, icon: string, title: string, callback: () => void): void {\n    // 实现添加图标逻辑\n  }\n\n  private addStatusBarItem(pluginId: string, element: HTMLElement): void {\n    // 实现添加状态栏项目逻辑\n  }\n\n  private addSettingTab(pluginId: string, tab: any): void {\n    // 实现添加设置标签页逻辑\n  }\n\n  private registerView(pluginId: string, id: string, view: any): void {\n    // 实现注册视图逻辑\n  }\n\n  private addActivityBarItem(pluginId: string, item: {\n    id: string;\n    name: string;\n    icon: string;\n    sortIndex?: number;\n    alignment?: 'top' | 'bottom';\n    onClick: () => void;\n  }): void {\n    console.log('Adding activity bar item:', item);\n    if (this.moleculeContext && this.moleculeContext.activityBar) {\n      this.moleculeContext.activityBar.add({\n        id: item.id,\n        name: item.name,\n        icon: item.icon,\n        sortIndex: item.sortIndex,\n        alignment: item.alignment || 'top',\n        onClick: item.onClick\n      });\n    }\n  }\n\n  private addSidebarItem(pluginId: string, item: {\n    id: string;\n    name: string;\n    render: () => HTMLElement;\n  }): void {\n    console.log('Adding sidebar item:', item);\n    if (this.moleculeContext && this.moleculeContext.sidebar) {\n      this.moleculeContext.sidebar.add({\n        id: item.id,\n        name: item.name,\n        render: item.render\n      });\n    }\n  }\n\n  private setAuxiliaryBar(visible: boolean): void {\n    console.log(`Setting auxiliary bar visibility: ${visible}`);\n    if (this.moleculeContext && this.moleculeContext.layout) {\n      this.moleculeContext.layout.setAuxiliaryBar(visible);\n    }\n  }\n\n  private addAuxiliaryBarItem(item: {\n    id: string;\n    name: string;\n    icon: string;\n    render: () => HTMLElement;\n  }): void {\n    console.log('Adding auxiliary bar item:', item);\n    if (this.moleculeContext && this.moleculeContext.auxiliaryBar) {\n      this.moleculeContext.auxiliaryBar.add({\n        id: item.id,\n        name: item.name,\n        icon: item.icon,\n        render: item.render\n      });\n    }\n  }\n\n  private setCurrentAuxiliaryBar(id: string): void {\n    console.log(`Setting current auxiliary bar: ${id}`);\n    if (this.moleculeContext && this.moleculeContext.auxiliaryBar) {\n      this.moleculeContext.auxiliaryBar.setCurrent(id);\n    }\n  }\n\n  // 设置方法\n  private getSetting(pluginId: string, key: string, defaultValue?: any): any {\n    const settings = this.pluginSettings.get(pluginId) || {};\n    return settings[key] !== undefined ? settings[key] : defaultValue;\n  }\n\n  private setSetting(pluginId: string, key: string, value: any): void {\n    const settings = this.pluginSettings.get(pluginId) || {};\n    settings[key] = value;\n    this.pluginSettings.set(pluginId, settings);\n  }\n\n  private getAllSettings(pluginId: string): any {\n    return this.pluginSettings.get(pluginId) || {};\n  }\n\n  // AI 方法\n  private async aiChat(message: string): Promise<string> {\n    // 实现 AI 聊天逻辑\n    return '';\n  }\n\n  private async aiSummarize(content: string): Promise<string> {\n    // 实现 AI 总结逻辑\n    return '';\n  }\n\n  private async aiTranslate(content: string, targetLang: string): Promise<string> {\n    // 实现 AI 翻译逻辑\n    return '';\n  }\n\n  // 工具方法\n  private debounce(func: Function, wait: number): Function {\n    let timeout: NodeJS.Timeout;\n    return function executedFunction(...args: any[]) {\n      const later = () => {\n        clearTimeout(timeout);\n        func(...args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  private throttle(func: Function, wait: number): Function {\n    let inThrottle: boolean;\n    return function executedFunction(this: any, ...args: any[]) {\n      if (!inThrottle) {\n        func.apply(this, args);\n        inThrottle = true;\n        setTimeout(() => inThrottle = false, wait);\n      }\n    };\n  }\n\n  private generateId(): string {\n    return Math.random().toString(36).substr(2, 9);\n  }\n\n  /**\n   * 获取所有插件\n   */\n  getAllPlugins(): IPlugin[] {\n    return Array.from(this.plugins.values());\n  }\n\n  /**\n   * 获取启用的插件\n   */\n  getEnabledPlugins(): IPlugin[] {\n    return Array.from(this.enabledPlugins).map(id => this.plugins.get(id)!);\n  }\n\n  /**\n   * 获取插件状态\n   */\n  getPluginStatus(pluginId: string): PluginStatus | undefined {\n    return this.plugins.get(pluginId)?.status;\n  }\n\n  /**\n   * 获取指定插件\n   */\n  getPlugin(pluginId: string): IPlugin | undefined {\n    return this.plugins.get(pluginId);\n  }\n}","import { IPlugin, IPluginManifest, IPluginAPI, PluginStatus } from './types';\nimport React from 'react';\n\n// 浏览器兼容的事件发射器\nclass EventEmitter {\n  protected events: { [key: string]: Function[] } = {};\n\n  on(event: string, listener: Function) {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n  }\n\n  off(event: string, listener: Function) {\n    if (!this.events[event]) return;\n    const index = this.events[event].indexOf(listener);\n    if (index > -1) {\n      this.events[event].splice(index, 1);\n    }\n  }\n\n  emit(event: string, ...args: any[]) {\n    if (!this.events[event]) return;\n    this.events[event].forEach(listener => {\n      try {\n        listener(...args);\n      } catch (error) {\n        console.error('Event listener error:', error);\n      }\n    });\n  }\n}\n\n// Obsidian 兼容的组件基类\nexport abstract class Component extends EventEmitter {\n  protected registeredEvents: Array<{ element: Element; type: string; listener: EventListener }> = [];\n  protected registeredIntervals: Array<NodeJS.Timeout> = [];\n\n  registerEvent(event: any): void {\n    // 注册事件，插件卸载时自动清理\n    this.registeredEvents.push(event);\n  }\n\n  registerDomEvent(element: Element, type: string, listener: Function): void {\n    const eventListener = listener as EventListener;\n    element.addEventListener(type, eventListener);\n    this.registeredEvents.push({ element, type, listener: eventListener });\n  }\n\n  registerInterval(interval: NodeJS.Timeout): void {\n    this.registeredIntervals.push(interval);\n  }\n\n  dispose(): void {\n    // 清理所有注册的事件\n    this.registeredEvents.forEach(({ element, type, listener }) => {\n      element.removeEventListener(type, listener);\n    });\n    this.registeredEvents = [];\n\n    // 清理所有定时器\n    this.registeredIntervals.forEach(interval => clearInterval(interval));\n    this.registeredIntervals = [];\n\n    // 清理事件监听器\n    this.events = {};\n  }\n}\n\n// 扩展 HTMLElement 接口以支持 Obsidian 风格的方法\ndeclare global {\n  interface HTMLElement {\n    setText(text: string): void;\n    empty(): void;\n    createDiv(options?: { cls?: string; text?: string }): HTMLDivElement;\n    createEl<K extends keyof HTMLElementTagNameMap>(\n      tag: K, \n      options?: { cls?: string; text?: string; attr?: Record<string, string>; type?: string }\n    ): HTMLElementTagNameMap[K];\n    setCssStyles(styles: Partial<CSSStyleDeclaration>): void;\n  }\n}\n\n// 为 HTMLElement 添加 Obsidian 风格的方法\nHTMLElement.prototype.setText = function(text: string) {\n  this.textContent = text;\n};\n\nHTMLElement.prototype.empty = function() {\n  this.innerHTML = '';\n};\n\nHTMLElement.prototype.createDiv = function(options?: { cls?: string; text?: string }) {\n  const div = document.createElement('div');\n  if (options?.cls) {\n    div.className = options.cls;\n  }\n  if (options?.text) {\n    div.textContent = options.text;\n  }\n  this.appendChild(div);\n  return div;\n};\n\nHTMLElement.prototype.createEl = function<K extends keyof HTMLElementTagNameMap>(\n  tag: K, \n  options?: { cls?: string; text?: string; attr?: Record<string, string>; type?: string }\n): HTMLElementTagNameMap[K] {\n  const element = document.createElement(tag);\n  if (options?.cls) {\n    element.className = options.cls;\n  }\n  if (options?.text) {\n    element.textContent = options.text;\n  }\n  if (options?.type) {\n    (element as HTMLInputElement).type = options.type;\n  }\n  if (options?.attr) {\n    Object.entries(options.attr).forEach(([key, value]) => {\n      element.setAttribute(key, value);\n    });\n  }\n  this.appendChild(element);\n  return element;\n};\n\nHTMLElement.prototype.setCssStyles = function(styles: Partial<CSSStyleDeclaration>) {\n  Object.assign(this.style, styles);\n};\n\n// Obsidian 兼容的插件基类\nexport abstract class Plugin extends Component {\n  public app: App;\n  public manifest: IPluginManifest;\n\n  constructor(app: App, manifest: IPluginManifest) {\n    super();\n    this.app = app;\n    this.manifest = manifest;\n  }\n\n  abstract onload(): Promise<void> | void;\n  onunload?(): Promise<void> | void;\n\n  // Obsidian 兼容的 API 方法\n  addRibbonIcon(icon: string, title: string, callback: (evt: MouseEvent) => any): HTMLElement {\n    return this.app.ui.addRibbonIcon(icon, title, callback);\n  }\n\n  addStatusBarItem(): HTMLElement {\n    return this.app.ui.addStatusBarItem();\n  }\n\n  addCommand(command: Command): Command {\n    return this.app.commands.addCommand(command);\n  }\n\n  removeCommand(commandId: string): void {\n    this.app.commands.removeCommand(commandId);\n  }\n\n  addSettingTab(settingTab: PluginSettingTab): void {\n    this.app.settings.addSettingTab(settingTab);\n  }\n\n  registerView(type: string, viewCreator: ViewCreator): void {\n    this.app.workspace.registerView(type, viewCreator);\n  }\n\n  registerMarkdownPostProcessor(postProcessor: MarkdownPostProcessor, sortOrder?: number): MarkdownPostProcessor {\n    return this.app.editor.registerMarkdownPostProcessor(postProcessor, sortOrder);\n  }\n\n  registerMarkdownCodeBlockProcessor(\n    language: string, \n    handler: (source: string, el: HTMLElement, ctx: MarkdownPostProcessorContext) => Promise<any> | void, \n    sortOrder?: number\n  ): MarkdownPostProcessor {\n    return this.app.editor.registerMarkdownCodeBlockProcessor(language, handler, sortOrder);\n  }\n\n  loadData(): Promise<any> {\n    return this.app.storage.loadData(this.manifest.id);\n  }\n\n  saveData(data: any): Promise<void> {\n    return this.app.storage.saveData(this.manifest.id, data);\n  }\n}\n\n// Obsidian 兼容的 App 接口\nexport interface App {\n  keymap: Keymap;\n  scope: Scope;\n  workspace: Workspace;\n  vault: Vault;\n  metadataCache: MetadataCache;\n  fileManager: FileManager;\n  ui: UI;\n  commands: Commands;\n  settings: Settings;\n  storage: Storage;\n  editor: Editor;\n  lastEvent: UserEvent | null;\n  loadLocalStorage(key: string): any | null;\n  saveLocalStorage(key: string, data: unknown | null): void;\n  molecule?: any; // 添加 Molecule 框架支持\n}\n\n// 核心服务接口\nexport interface Vault {\n  read(file: TFile): Promise<string>;\n  write(file: TFile, data: string): Promise<void>;\n  create(path: string, data: string): Promise<TFile>;\n  delete(file: TFile): Promise<void>;\n  rename(file: TFile, newPath: string): Promise<void>;\n  getAbstractFileByPath(path: string): TAbstractFile | null;\n  getFiles(): TFile[];\n  getMarkdownFiles(): TFile[];\n  createFolder(path: string): Promise<TFolder>;\n  exists(path: string): boolean;\n}\n\nexport interface Workspace {\n  onLayoutReady(callback: () => void): void;\n  onFileOpen(callback: (file: TFile) => void): void;\n  onFileClose(callback: (file: TFile) => void): void;\n  onActiveLeafChange(callback: (leaf: WorkspaceLeaf) => void): void;\n  getActiveFile(): TFile | null;\n  getActiveLeaf(): WorkspaceLeaf | null;\n  getLeavesOfType(type: string): WorkspaceLeaf[];\n  openLinkText(linktext: string, source: string, newLeaf?: boolean): Promise<void>;\n  openFile(file: TFile, newLeaf?: boolean): Promise<void>;\n  registerView(type: string, viewCreator: ViewCreator): void;\n  registerHoverLinkSource(id: string, info: HoverLinkSource): void;\n  registerExtensions(extensions: string[], viewType: string): void;\n}\n\nexport interface MetadataCache {\n  getFileCache(file: TFile): CachedMetadata | null;\n  getFirstLinkpathDest(linkpath: string, sourcePath: string): TFile | null;\n  getBacklinksForFile(file: TFile): Record<string, Reference[]> | null;\n  getForwardLinksForFile(file: TFile): Record<string, Reference[]> | null;\n  onChanged(callback: (file: TFile, data: string, cache: CachedMetadata) => void): void;\n}\n\nexport interface FileManager {\n  createNewMarkdownFile(folder?: TFolder, filename?: string): Promise<TFile>;\n  deleteFile(file: TFile): Promise<void>;\n  renameFile(file: TFile, newPath: string): Promise<void>;\n  copyFile(file: TFile, newPath: string): Promise<TFile>;\n}\n\nexport interface UI {\n  addRibbonIcon(icon: string, title: string, callback: (evt: MouseEvent) => any): HTMLElement;\n  addStatusBarItem(): HTMLElement;\n  addSettingTab(tab: PluginSettingTab): void;\n}\n\nexport interface Commands {\n  addCommand(command: Command): Command;\n  removeCommand(commandId: string): void;\n  executeCommandById(commandId: string): boolean;\n}\n\nexport interface Settings {\n  addSettingTab(tab: PluginSettingTab): void;\n  getSetting(key: string): any;\n  setSetting(key: string, value: any): void;\n}\n\nexport interface Storage {\n  loadData(pluginId: string): Promise<any>;\n  saveData(pluginId: string, data: any): Promise<void>;\n}\n\nexport interface Editor {\n  registerMarkdownPostProcessor(postProcessor: MarkdownPostProcessor, sortOrder?: number): MarkdownPostProcessor;\n  registerMarkdownCodeBlockProcessor(\n    language: string, \n    handler: (source: string, el: HTMLElement, ctx: MarkdownPostProcessorContext) => Promise<any> | void, \n    sortOrder?: number\n  ): MarkdownPostProcessor;\n  registerEditorExtension(extension: any): void;\n}\n\n// 类型定义\nexport interface TFile {\n  path: string;\n  name: string;\n  basename: string;\n  extension: string;\n  vault: Vault;\n  parent: TFolder | null;\n  stat: FileStats;\n}\n\nexport interface TFolder {\n  path: string;\n  name: string;\n  vault: Vault;\n  parent: TFolder | null;\n  children: TAbstractFile[];\n}\n\nexport type TAbstractFile = TFile | TFolder;\n\nexport interface FileStats {\n  ctime: number;\n  mtime: number;\n  size: number;\n}\n\nexport interface WorkspaceLeaf {\n  id: string;\n  view: View;\n  getViewState(): any;\n  setViewState(state: any): void;\n  openFile(file: TFile): Promise<void>;\n  detach(): void;\n}\n\nexport interface View {\n  getViewType(): string;\n  getDisplayText(): string;\n  onload(): void;\n  onunload(): void;\n}\n\nexport interface ViewCreator {\n  new(leaf: WorkspaceLeaf): View;\n}\n\nexport interface Command {\n  id: string;\n  name: string;\n  callback?: () => any;\n  hotkeys?: Hotkey[];\n  checkCallback?: (checking: boolean) => boolean | void;\n}\n\nexport interface Hotkey {\n  modifiers: string[];\n  key: string;\n}\n\nexport interface PluginSettingTab {\n  id: string;\n  name: string;\n  tab: HTMLElement;\n}\n\nexport interface MarkdownPostProcessor {\n  type: 'markdown';\n  sortOrder?: number;\n  process(element: HTMLElement, context: MarkdownPostProcessorContext): void;\n}\n\nexport interface MarkdownPostProcessorContext {\n  sourcePath: string;\n  frontmatter: any;\n  docId: string;\n}\n\nexport interface HoverLinkSource {\n  display: string;\n  defaultMod: boolean;\n}\n\nexport interface CachedMetadata {\n  frontmatter?: any;\n  headings?: HeadingCache[];\n  links?: LinkCache[];\n  embeds?: EmbedCache[];\n  tags?: TagCache[];\n  sections?: SectionCache[];\n  listItems?: ListItemCache[];\n  blocks?: Record<string, BlockCache>;\n}\n\nexport interface HeadingCache {\n  level: number;\n  heading: string;\n  position: Position;\n}\n\nexport interface LinkCache {\n  link: string;\n  original: string;\n  position: Position;\n  displayText?: string;\n  subpath?: string;\n}\n\nexport interface EmbedCache {\n  link: string;\n  original: string;\n  position: Position;\n  subpath?: string;\n}\n\nexport interface TagCache {\n  tag: string;\n  position: Position;\n}\n\nexport interface SectionCache {\n  id: string;\n  type: string;\n  position: Position;\n}\n\nexport interface ListItemCache {\n  position: Position;\n  task?: string;\n  listType?: string;\n}\n\nexport interface BlockCache {\n  id: string;\n  position: Position;\n  type: string;\n}\n\nexport interface Position {\n  start: Loc;\n  end: Loc;\n}\n\nexport interface Loc {\n  line: number;\n  col: number;\n  offset: number;\n}\n\nexport interface Reference {\n  link: string;\n  displayText?: string;\n  original: string;\n  position: Position;\n}\n\nexport interface UserEvent {\n  type: string;\n  ctrlKey: boolean;\n  metaKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n}\n\nexport interface Keymap {\n  getRootScope(): Scope;\n}\n\nexport interface Scope {\n  keys: Record<string, any>;\n  parent: Scope | null;\n}\n\n// 增强版插件管理器\nexport class ObsidianCompatiblePluginManager extends EventEmitter {\n  private plugins: Map<string, IPlugin> = new Map();\n  private pluginAPIs: Map<string, IPluginAPI> = new Map();\n  private enabledPlugins: Set<string> = new Set();\n  private pluginSettings: Map<string, any> = new Map();\n  private moleculeContext: any;\n  private app: App;\n\n  constructor(moleculeContext?: any) {\n    super();\n    this.moleculeContext = moleculeContext;\n    this.app = this.createApp();\n  }\n\n  /**\n   * 创建 Obsidian 兼容的 App 实例\n   */\n  private createApp(): App {\n    return {\n      keymap: this.createKeymap(),\n      scope: this.createScope(),\n      workspace: this.createWorkspace(),\n      vault: this.createVault(),\n      metadataCache: this.createMetadataCache(),\n      fileManager: this.createFileManager(),\n      ui: this.createUI(),\n      commands: this.createCommands(),\n      settings: this.createSettings(),\n      storage: this.createStorage(),\n      editor: this.createEditor(),\n      lastEvent: null,\n      loadLocalStorage: (key: string) => this.loadLocalStorage(key),\n      saveLocalStorage: (key: string, data: unknown | null) => this.saveLocalStorage(key, data),\n      molecule: this.moleculeContext // 添加 Molecule 上下文\n    };\n  }\n\n  /**\n   * 注册 Obsidian 兼容的插件\n   */\n  async registerObsidianPlugin(manifest: IPluginManifest, PluginClass: new (app: App, manifest: IPluginManifest) => Plugin): Promise<void> {\n    const pluginId = manifest.id;\n    \n    if (this.plugins.has(pluginId)) {\n      throw new Error(`Plugin ${pluginId} is already registered`);\n    }\n\n    try {\n      // 创建插件实例\n      const pluginInstance = new PluginClass(this.app, manifest);\n      \n      const plugin: IPlugin = {\n        id: pluginId,\n        name: manifest.name,\n        version: manifest.version,\n        description: manifest.description,\n        author: manifest.author,\n        dependencies: manifest.dependencies || [],\n        status: PluginStatus.REGISTERED,\n        manifest,\n        instance: pluginInstance,\n        api: null\n      };\n\n      this.plugins.set(pluginId, plugin);\n      this.emit('pluginRegistered', plugin);\n      \n      console.log(`Obsidian compatible plugin ${pluginId} registered successfully`);\n    } catch (error) {\n      console.error(`Failed to register plugin ${pluginId}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * 启用 Obsidian 兼容的插件\n   */\n  async enableObsidianPlugin(pluginId: string): Promise<void> {\n    const plugin = this.plugins.get(pluginId);\n    if (!plugin) {\n      throw new Error(`Plugin ${pluginId} not found`);\n    }\n\n    if (this.enabledPlugins.has(pluginId)) {\n      return; // 已经启用\n    }\n\n    // 检查依赖\n    await this.checkDependencies(plugin);\n\n    try {\n      const pluginInstance = plugin.instance as Plugin;\n      \n      // 调用插件的 onload 方法\n      if (pluginInstance.onload) {\n        await pluginInstance.onload();\n      }\n\n      plugin.status = PluginStatus.ENABLED;\n      this.enabledPlugins.add(pluginId);\n      this.emit('pluginEnabled', plugin);\n      \n      console.log(`Obsidian compatible plugin ${pluginId} enabled successfully`);\n    } catch (error) {\n      plugin.status = PluginStatus.ERROR;\n      this.emit('pluginError', plugin, error);\n      console.error(`Failed to enable plugin ${pluginId}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * 禁用 Obsidian 兼容的插件\n   */\n  async disableObsidianPlugin(pluginId: string): Promise<void> {\n    const plugin = this.plugins.get(pluginId);\n    if (!plugin || !this.enabledPlugins.has(pluginId)) {\n      return;\n    }\n\n    try {\n      const pluginInstance = plugin.instance as Plugin;\n      \n      // 调用插件的 onunload 方法\n      if (pluginInstance.onunload) {\n        await pluginInstance.onunload();\n      }\n\n      // 调用 dispose 方法清理资源\n      pluginInstance.dispose();\n\n      plugin.status = PluginStatus.REGISTERED;\n      this.enabledPlugins.delete(pluginId);\n      this.emit('pluginDisabled', plugin);\n      \n      console.log(`Obsidian compatible plugin ${pluginId} disabled successfully`);\n    } catch (error) {\n      this.emit('pluginError', plugin, error);\n      console.error(`Failed to disable plugin ${pluginId}:`, error);\n      throw error;\n    }\n  }\n\n  // 创建各个服务的实现\n  private createKeymap(): Keymap {\n    return {\n      getRootScope: () => this.createScope()\n    };\n  }\n\n  private createScope(): Scope {\n    return {\n      keys: {},\n      parent: null\n    };\n  }\n\n  private createWorkspace(): Workspace {\n    return {\n      onLayoutReady: (callback: () => void) => {\n        // 模拟布局就绪事件\n        setTimeout(callback, 100);\n      },\n      onFileOpen: (callback: (file: TFile) => void) => {\n        this.on('file:open', callback);\n      },\n      onFileClose: (callback: (file: TFile) => void) => {\n        this.on('file:close', callback);\n      },\n      onActiveLeafChange: (callback: (leaf: WorkspaceLeaf) => void) => {\n        this.on('leaf:active', callback);\n      },\n      getActiveFile: () => null,\n      getActiveLeaf: () => null,\n      getLeavesOfType: (type: string) => [],\n      openLinkText: async (linktext: string, source: string, newLeaf?: boolean) => {\n        // 实现链接打开逻辑\n      },\n      openFile: async (file: TFile, newLeaf?: boolean) => {\n        // 实现文件打开逻辑\n      },\n      registerView: (type: string, viewCreator: ViewCreator) => {\n        // 实现视图注册逻辑\n      },\n      registerHoverLinkSource: (id: string, info: HoverLinkSource) => {\n        // 实现悬停链接源注册逻辑\n      },\n      registerExtensions: (extensions: string[], viewType: string) => {\n        // 实现扩展注册逻辑\n      }\n    };\n  }\n\n  private createVault(): Vault {\n    return {\n      read: async (file: TFile) => {\n        // 实现文件读取逻辑\n        return '';\n      },\n      write: async (file: TFile, data: string) => {\n        // 实现文件写入逻辑\n      },\n      create: async (path: string, data: string) => {\n        // 实现文件创建逻辑\n        return {} as TFile;\n      },\n      delete: async (file: TFile) => {\n        // 实现文件删除逻辑\n      },\n      rename: async (file: TFile, newPath: string) => {\n        // 实现文件重命名逻辑\n      },\n      getAbstractFileByPath: (path: string) => null,\n      getFiles: () => [],\n      getMarkdownFiles: () => [],\n      createFolder: async (path: string) => {\n        // 实现文件夹创建逻辑\n        return {} as TFolder;\n      },\n      exists: (path: string) => false\n    };\n  }\n\n  private createMetadataCache(): MetadataCache {\n    return {\n      getFileCache: (file: TFile) => null,\n      getFirstLinkpathDest: (linkpath: string, sourcePath: string) => null,\n      getBacklinksForFile: (file: TFile) => null,\n      getForwardLinksForFile: (file: TFile) => null,\n      onChanged: (callback: (file: TFile, data: string, cache: CachedMetadata) => void) => {\n        this.on('metadata:changed', callback);\n      }\n    };\n  }\n\n  private createFileManager(): FileManager {\n    return {\n      createNewMarkdownFile: async (folder?: TFolder, filename?: string) => {\n        // 实现新文件创建逻辑\n        return {} as TFile;\n      },\n      deleteFile: async (file: TFile) => {\n        // 实现文件删除逻辑\n      },\n      renameFile: async (file: TFile, newPath: string) => {\n        // 实现文件重命名逻辑\n      },\n      copyFile: async (file: TFile, newPath: string) => {\n        // 实现文件复制逻辑\n        return {} as TFile;\n      }\n    };\n  }\n\n  private createUI(): UI {\n    return {\n      addRibbonIcon: (icon: string, title: string, callback: (evt: MouseEvent) => any) => {\n        // 实现图标添加逻辑 - 使用 Molecule 活动栏 API\n        if (this.moleculeContext && this.moleculeContext.activityBar) {\n          try {\n            // 生成唯一的ID\n            const iconId = `obsidian-ribbon-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n            \n            // 添加到 Molecule 活动栏 - 使用正确的API格式\n            this.moleculeContext.activityBar.add({\n              id: iconId,\n              name: title,\n              alignment: 'top',\n              sortIndex: 10,\n              icon: icon,\n              onClick: () => {\n                console.log(`Hello Plugin: Activity bar item clicked: ${title}`);\n                try {\n                  callback({} as any);\n                } catch (error) {\n                  console.error('Error in onClick callback:', error);\n                }\n              }\n            });\n            \n            // 返回一个模拟的元素用于API兼容性\n            const element = document.createElement('div');\n            element.innerHTML = icon;\n            element.title = title;\n            element.id = iconId;\n            element.style.display = 'none'; // 隐藏这个元素，因为真正的图标在活动栏中\n            document.body.appendChild(element);\n            \n            console.log(`✅ Ribbon icon added to activity bar: ${title} (${iconId})`);\n            return element;\n          } catch (error) {\n            console.error('Failed to add ribbon icon to activity bar:', error);\n            // 回退到简单的DOM元素\n            const element = document.createElement('div');\n            element.innerHTML = icon;\n            element.title = title;\n            element.onclick = callback;\n            return element;\n          }\n        } else {\n          console.warn('Molecule activityBar API not available, using fallback');\n          // 回退到简单的DOM元素\n          const element = document.createElement('div');\n          element.innerHTML = icon;\n          element.title = title;\n          element.onclick = callback;\n          return element;\n        }\n      },\n      addStatusBarItem: () => {\n        // 实现状态栏项目添加逻辑 - 使用 Molecule 状态栏 API\n        if (this.moleculeContext && this.moleculeContext.statusBar) {\n          try {\n            // 生成唯一的ID\n            const itemId = `obsidian-status-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n            \n            // 添加到 Molecule 状态栏 - 返回一个简单的React组件\n            this.moleculeContext.statusBar.add({\n              id: itemId,\n              name: 'Obsidian Plugin Status',\n              render: () => {\n                // 返回一个简单的React元素而不是DOM元素\n                return React.createElement('div', {\n                  id: itemId,\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    padding: '0 8px',\n                    fontSize: '12px',\n                    color: 'var(--statusBar-foreground)'\n                  }\n                }, 'Plugin Status');\n              }\n            });\n            \n            console.log(`✅ Status bar item added: ${itemId}`);\n            \n            // 返回一个占位符元素，用于Obsidian插件API兼容性\n            const placeholder = document.createElement('div');\n            placeholder.style.display = 'none';\n            return placeholder;\n          } catch (error) {\n            console.error('Failed to add status bar item:', error);\n            // 回退到隐藏的DOM元素\n            const placeholder = document.createElement('div');\n            placeholder.style.display = 'none';\n            return placeholder;\n          }\n        } else {\n          console.warn('Molecule statusBar API not available, using fallback');\n          // 回退到隐藏的DOM元素\n          const placeholder = document.createElement('div');\n          placeholder.style.display = 'none';\n          return placeholder;\n        }\n      },\n      addSettingTab: (tab: PluginSettingTab) => {\n        // 实现设置标签页添加逻辑\n      }\n    };\n  }\n\n  private createCommands(): Commands {\n    return {\n      addCommand: (command: Command) => {\n        // 实现命令添加逻辑\n        return command;\n      },\n      removeCommand: (commandId: string) => {\n        // 实现命令移除逻辑\n      },\n      executeCommandById: (commandId: string) => {\n        // 实现命令执行逻辑\n        return false;\n      }\n    };\n  }\n\n  private createSettings(): Settings {\n    return {\n      addSettingTab: (tab: PluginSettingTab) => {\n        // 实现设置标签页添加逻辑\n      },\n      getSetting: (key: string) => {\n        // 实现设置获取逻辑\n        return null;\n      },\n      setSetting: (key: string, value: any) => {\n        // 实现设置保存逻辑\n      }\n    };\n  }\n\n  private createStorage(): Storage {\n    return {\n      loadData: async (pluginId: string) => {\n        // 实现数据加载逻辑\n        return this.pluginSettings.get(pluginId) || {};\n      },\n      saveData: async (pluginId: string, data: any) => {\n        // 实现数据保存逻辑\n        this.pluginSettings.set(pluginId, data);\n      }\n    };\n  }\n\n  private createEditor(): Editor {\n    return {\n      registerMarkdownPostProcessor: (postProcessor: MarkdownPostProcessor, sortOrder?: number) => {\n        // 实现 Markdown 后处理器注册逻辑\n        return postProcessor;\n      },\n      registerMarkdownCodeBlockProcessor: (\n        language: string, \n        handler: (source: string, el: HTMLElement, ctx: MarkdownPostProcessorContext) => Promise<any> | void, \n        sortOrder?: number\n      ) => {\n        // 实现代码块处理器注册逻辑\n        return {} as MarkdownPostProcessor;\n      },\n      registerEditorExtension: (extension: any) => {\n        // 实现编辑器扩展注册逻辑\n      }\n    };\n  }\n\n  private loadLocalStorage(key: string): any | null {\n    try {\n      const data = localStorage.getItem(key);\n      return data ? JSON.parse(data) : null;\n    } catch (error) {\n      console.error('Failed to load from localStorage:', error);\n      return null;\n    }\n  }\n\n  private saveLocalStorage(key: string, data: unknown | null): void {\n    try {\n      if (data === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(data));\n      }\n    } catch (error) {\n      console.error('Failed to save to localStorage:', error);\n    }\n  }\n\n  /**\n   * 检查插件依赖\n   */\n  private async checkDependencies(plugin: IPlugin): Promise<void> {\n    for (const dep of plugin.dependencies) {\n      if (!this.enabledPlugins.has(dep)) {\n        throw new Error(`Plugin ${plugin.id} depends on ${dep} which is not enabled`);\n      }\n    }\n  }\n\n  /**\n   * 获取所有插件\n   */\n  getAllPlugins(): IPlugin[] {\n    return Array.from(this.plugins.values());\n  }\n\n  /**\n   * 获取启用的插件\n   */\n  getEnabledPlugins(): IPlugin[] {\n    return Array.from(this.enabledPlugins).map(id => this.plugins.get(id)!);\n  }\n\n  /**\n   * 获取插件状态\n   */\n  getPluginStatus(pluginId: string): PluginStatus | undefined {\n    return this.plugins.get(pluginId)?.status;\n  }\n\n  /**\n   * 获取指定插件\n   */\n  getPlugin(pluginId: string): IPlugin | undefined {\n    return this.plugins.get(pluginId);\n  }\n\n  /**\n   * 获取 App 实例\n   */\n  getApp(): App {\n    return this.app;\n  }\n}\n","import { IPluginAPI, IPluginClass } from '../../core/pluginSystem/types';\nimport React from 'react'; // Added for React.createElement\n\nexport class RssPlugin implements IPluginClass {\n  private api: IPluginAPI | null = null;\n\n  async onload(api: IPluginAPI) {\n    this.api = api;\n    \n    console.log('RSS Plugin loaded successfully!');\n    \n    // 初始化 RSS 数据\n    this.initializeRssData();\n    \n    // 等待 Molecule 完全加载后添加活动栏图标\n    setTimeout(() => {\n      this.addRssActivityBarItem();\n    }, 2000);\n  }\n\n  private rssFeeds = [\n    {\n      id: 'techcrunch',\n      name: 'TechCrunch',\n      url: 'https://techcrunch.com/feed/',\n      icon: '📱',\n      description: '科技新闻和创业资讯'\n    },\n    {\n      id: 'hackernews',\n      name: 'Hacker News',\n      url: 'https://news.ycombinator.com/rss',\n      icon: '💻',\n      description: '程序员社区热门话题'\n    },\n    {\n      id: 'github',\n      name: 'GitHub Trending',\n      url: 'https://github.com/trending.atom',\n      icon: '🐙',\n      description: 'GitHub 热门项目'\n    }\n  ];\n\n  private feedItems: { [feedId: string]: any[] } = {};\n\n  private initializeRssData() {\n    // 初始化模拟数据\n    this.feedItems = {\n      techcrunch: [\n        {\n          id: 'tc1',\n          title: 'AI 技术突破：新的语言模型性能提升 50%',\n          link: 'https://techcrunch.com/ai-breakthrough',\n          description: '最新的人工智能研究显示，新的语言模型在多个基准测试中性能提升了 50%...',\n          pubDate: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\n          feedId: 'techcrunch'\n        },\n        {\n          id: 'tc2',\n          title: '电动汽车市场增长超预期',\n          link: 'https://techcrunch.com/ev-market-growth',\n          description: '全球电动汽车销量在今年第一季度增长了 35%，超出分析师预期...',\n          pubDate: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString(),\n          feedId: 'techcrunch'\n        }\n      ],\n      hackernews: [\n        {\n          id: 'hn1',\n          title: 'Rust 语言在系统编程中的优势',\n          link: 'https://news.ycombinator.com/rust-systems',\n          description: 'Rust 语言通过内存安全保证，在系统编程领域展现出独特优势...',\n          pubDate: new Date(Date.now() - 1 * 60 * 60 * 1000).toISOString(),\n          feedId: 'hackernews'\n        },\n        {\n          id: 'hn2',\n          title: 'WebAssembly 的未来发展',\n          link: 'https://news.ycombinator.com/wasm-future',\n          description: 'WebAssembly 技术正在改变 Web 应用的开发方式...',\n          pubDate: new Date(Date.now() - 3 * 60 * 60 * 1000).toISOString(),\n          feedId: 'hackernews'\n        }\n      ],\n      github: [\n        {\n          id: 'gh1',\n          title: 'awesome-react: React 资源集合',\n          link: 'https://github.com/enaqx/awesome-react',\n          description: '一个精心策划的 React 资源列表，包含教程、组件库、工具等...',\n          pubDate: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(),\n          feedId: 'github'\n        },\n        {\n          id: 'gh2',\n          title: 'typescript-cheatsheet: TypeScript 速查表',\n          link: 'https://github.com/typescript-cheatsheets/react',\n          description: 'React 开发者的 TypeScript 速查表，包含常用模式和最佳实践...',\n          pubDate: new Date(Date.now() - 8 * 60 * 60 * 1000).toISOString(),\n          feedId: 'github'\n        }\n      ]\n    };\n  }\n\n  private addRssActivityBarItem() {\n    console.log('RSS Plugin: Starting to add activity bar item');\n    console.log('RSS Plugin: API available:', !!this.api);\n    console.log('RSS Plugin: UI API available:', !!this.api?.ui);\n    console.log('RSS Plugin: addActivityBarItem available:', !!this.api?.ui?.addActivityBarItem);\n    \n    // 使用 Molecule API 添加 ActivityBar 图标\n    if (this.api && this.api.ui && this.api.ui.addActivityBarItem) {\n      try {\n        console.log('RSS Plugin: Using Molecule API to add activity bar item');\n        this.api.ui.addActivityBarItem({\n          id: 'rss-plugin',\n          name: 'RSS 阅读器',\n          icon: 'rss', // 使用 Molecule 支持的图标名称\n          sortIndex: 1, // 在第一个位置\n          alignment: 'top', // 添加到顶部区域\n          onClick: () => {\n            console.log('RSS Plugin: Activity bar item clicked');\n            this.showRssSidebar();\n          }\n        });\n        console.log('RSS Plugin: Activity bar item added via Molecule API');\n        \n        // 监听 Molecule 的 ActivityBar 点击事件\n        if (this.api.molecule && this.api.molecule.activityBar) {\n          this.api.molecule.activityBar.onClick((item: any) => {\n            console.log('RSS Plugin: ActivityBar click event received:', item);\n            if (item && item.id === 'rss-plugin') {\n              console.log('RSS Plugin: RSS item clicked, showing sidebar');\n              this.showRssSidebar();\n            }\n          });\n        }\n      } catch (error) {\n        console.error('RSS Plugin: Failed to add activity bar item via API:', error);\n        // 回退到 DOM 操作\n        this.addRssActivityBarItemViaDOM();\n      }\n    } else {\n      console.log('RSS Plugin: Molecule UI API not available, using DOM fallback');\n      this.addRssActivityBarItemViaDOM();\n    }\n  }\n\n  private addRssActivityBarItemViaDOM() {\n    // 查找活动栏并添加 RSS 图标\n    const activityBar = document.querySelector('[data-testid=\"activityBar\"]') || \n                       document.querySelector('.activityBar') ||\n                       document.querySelector('[class*=\"activity\"]') ||\n                       document.querySelector('[class*=\"ActivityBar\"]') ||\n                       document.querySelector('[class*=\"activityBar\"]') ||\n                       document.querySelector('.mo-activityBar__container');\n    \n    if (activityBar) {\n      console.log('RSS Plugin: Found activity bar:', activityBar);\n      \n      const rssIcon = document.createElement('div');\n      rssIcon.innerHTML = '📡';\n      rssIcon.title = 'RSS 阅读器';\n      rssIcon.style.cssText = `\n        width: 48px;\n        height: 48px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        cursor: pointer;\n        font-size: 20px;\n        transition: background-color 0.2s;\n        border-radius: 4px;\n        margin: 4px 0;\n        color: var(--activityBar-inactiveForeground, #cccccc);\n      `;\n      \n      rssIcon.onmouseover = () => {\n        rssIcon.style.backgroundColor = 'rgba(255, 255, 255, 0.1)';\n      };\n      \n      rssIcon.onmouseout = () => {\n        rssIcon.style.backgroundColor = 'transparent';\n      };\n      \n      rssIcon.onclick = () => {\n        console.log('RSS Plugin: RSS icon clicked via DOM');\n        this.showRssSidebar();\n      };\n      \n      // 插入到第一个位置\n      const firstItem = activityBar.querySelector('[class*=\"item\"], [class*=\"icon\"]');\n      if (firstItem) {\n        activityBar.insertBefore(rssIcon, firstItem);\n      } else {\n        activityBar.appendChild(rssIcon);\n      }\n      \n      console.log('RSS Plugin: RSS activity bar item added at position 1 via DOM');\n    } else {\n      console.log('RSS Plugin: Activity bar not found, retrying...');\n      setTimeout(() => this.addRssActivityBarItemViaDOM(), 1000);\n    }\n  }\n\n  async onunload() {\n    console.log('RSS Plugin unloaded');\n  }\n\n  private showRssSidebar() {\n    console.log('RSS Plugin: showRssSidebar called');\n    \n    // 直接使用 Molecule 的 Sidebar API\n    if (this.api && this.api.molecule && this.api.molecule.sidebar) {\n      try {\n        console.log('RSS Plugin: Using Molecule sidebar API directly');\n        this.api.molecule.sidebar.add({\n          id: 'rss-sidebar',\n          name: 'RSS 阅读器',\n          render: () => {\n            console.log('RSS Plugin: Rendering RSS sidebar content');\n            // 创建包含实际 RSS 内容的 React 元素\n            const content = React.createElement('div', {\n              style: {\n                height: '100%',\n                display: 'flex',\n                flexDirection: 'column',\n                backgroundColor: '#252526',\n                color: '#cccccc'\n              }\n            }, [\n              // 标题栏\n              React.createElement('div', {\n                key: 'header',\n                style: {\n                  padding: '12px 16px',\n                  borderBottom: '1px solid #3c3c3c',\n                  fontWeight: 'bold',\n                  fontSize: '14px'\n                }\n              }, '📡 RSS 订阅源'),\n              \n              // 订阅源列表\n              React.createElement('div', {\n                key: 'feeds',\n                style: {\n                  flex: 1,\n                  overflowY: 'auto',\n                  padding: '8px 0'\n                }\n              }, this.rssFeeds.map(feed => \n                React.createElement('div', {\n                  key: feed.id,\n                  style: {\n                    padding: '8px 16px',\n                    cursor: 'pointer',\n                    transition: 'background-color 0.2s',\n                    borderBottom: '1px solid #3c3c3c'\n                  },\n                  onMouseOver: (e: any) => {\n                    e.target.style.backgroundColor = '#2a2d2e';\n                  },\n                  onMouseOut: (e: any) => {\n                    e.target.style.backgroundColor = 'transparent';\n                  },\n                  onClick: () => {\n                    this.showFeedItemsInSidebar(feed);\n                  }\n                }, [\n                  React.createElement('div', {\n                    key: 'content',\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '8px'\n                    }\n                  }, [\n                    React.createElement('span', {\n                      key: 'icon',\n                      style: { fontSize: '16px' }\n                    }, feed.icon),\n                    React.createElement('div', {\n                      key: 'info',\n                      style: { flex: 1 }\n                    }, [\n                      React.createElement('div', {\n                        key: 'name',\n                        style: {\n                          fontWeight: '500',\n                          marginBottom: '2px'\n                        }\n                      }, feed.name),\n                      React.createElement('div', {\n                        key: 'desc',\n                        style: {\n                          fontSize: '12px',\n                          color: '#cccccc80'\n                        }\n                      }, feed.description)\n                    ])\n                  ])\n                ])\n              ))\n            ]);\n            console.log('RSS Plugin: RSS sidebar content created successfully');\n            return content;\n          }\n        });\n        console.log('RSS Plugin: Sidebar added via Molecule API directly');\n        \n        // 设置 RSS Sidebar 为当前活动的\n        this.api.molecule.sidebar.setCurrent('rss-sidebar');\n        console.log('RSS Plugin: Set RSS sidebar as current');\n      } catch (error) {\n        console.error('RSS Plugin: Failed to add sidebar via Molecule API:', error);\n        this.showRssSidebarViaDOM();\n      }\n    } else {\n      console.log('RSS Plugin: Molecule sidebar API not available, using DOM fallback');\n      console.log('RSS Plugin: API available:', !!this.api);\n      console.log('RSS Plugin: Molecule available:', !!this.api?.molecule);\n      console.log('RSS Plugin: Sidebar available:', !!this.api?.molecule?.sidebar);\n      this.showRssSidebarViaDOM();\n    }\n  }\n\n  private showRssSidebarViaDOM() {\n    // 创建 RSS 侧边栏内容\n    const sidebarContent = this.createRssSidebar();\n    \n    // 查找侧边栏容器\n    const sidebar = document.querySelector('[data-testid=\"sidebar\"]') || \n                   document.querySelector('.sidebar') ||\n                   document.querySelector('[class*=\"sidebar\"]') ||\n                   document.querySelector('.mo-sidebar__content');\n    \n    if (sidebar) {\n      // 清空侧边栏并添加 RSS 内容\n      sidebar.innerHTML = '';\n      sidebar.appendChild(sidebarContent);\n      console.log('RSS Plugin: RSS sidebar displayed via DOM');\n    } else {\n      console.log('RSS Plugin: Sidebar not found');\n    }\n  }\n\n  private createRssSidebar() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      background-color: var(--vscode-sideBar-background, #252526);\n      color: var(--vscode-sideBar-foreground, #cccccc);\n    `;\n\n    // 标题栏\n    const header = document.createElement('div');\n    header.style.cssText = `\n      padding: 12px 16px;\n      border-bottom: 1px solid var(--vscode-sideBar-border, #3c3c3c);\n      font-weight: bold;\n      font-size: 14px;\n    `;\n    header.innerHTML = '📡 RSS 订阅源';\n    container.appendChild(header);\n\n    // 订阅源列表\n    const feedsContainer = document.createElement('div');\n    feedsContainer.style.cssText = `\n      flex: 1;\n      overflow-y: auto;\n      padding: 8px 0;\n    `;\n\n    this.rssFeeds.forEach(feed => {\n      const feedElement = this.createFeedElement(feed);\n      feedsContainer.appendChild(feedElement);\n    });\n\n    container.appendChild(feedsContainer);\n    return container;\n  }\n\n  private createFeedElement(feed: any) {\n    const feedDiv = document.createElement('div');\n    feedDiv.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: background-color 0.2s;\n      border-bottom: 1px solid var(--vscode-sideBar-border, #3c3c3c);\n    `;\n\n    feedDiv.onmouseover = () => {\n      feedDiv.style.backgroundColor = 'var(--vscode-list-hoverBackground, #2a2d2e)';\n    };\n\n    feedDiv.onmouseout = () => {\n      feedDiv.style.backgroundColor = 'transparent';\n    };\n\n    feedDiv.onclick = () => {\n      this.showFeedItems(feed);\n    };\n\n    feedDiv.innerHTML = `\n      <div style=\"display: flex; align-items: center; gap: 8px;\">\n        <span style=\"font-size: 16px;\">${feed.icon}</span>\n        <div style=\"flex: 1;\">\n          <div style=\"font-weight: 500; margin-bottom: 2px;\">${feed.name}</div>\n          <div style=\"font-size: 12px; color: var(--vscode-descriptionForeground, #cccccc80);\">\n            ${feed.description}\n          </div>\n        </div>\n      </div>\n    `;\n\n    return feedDiv;\n  }\n\n  private showFeedItemsInSidebar(feed: any) {\n    const items = this.feedItems[feed.id] || [];\n    \n    // 使用 Molecule API 更新侧边栏内容\n    if (this.api && this.api.molecule && this.api.molecule.sidebar) {\n      try {\n        this.api.molecule.sidebar.add({\n          id: 'rss-feed-items',\n          name: feed.name,\n          render: () => {\n            return React.createElement('div', {\n              style: {\n                height: '100%',\n                display: 'flex',\n                flexDirection: 'column',\n                backgroundColor: '#252526',\n                color: '#cccccc'\n              }\n            }, [\n              // 标题栏\n              React.createElement('div', {\n                key: 'header',\n                style: {\n                  padding: '12px 16px',\n                  borderBottom: '1px solid #3c3c3c',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '8px'\n                }\n              }, [\n                React.createElement('span', {\n                  key: 'icon',\n                  style: { fontSize: '16px' }\n                }, feed.icon),\n                React.createElement('span', {\n                  key: 'name',\n                  style: {\n                    fontWeight: 'bold',\n                    fontSize: '14px'\n                  }\n                }, feed.name),\n                React.createElement('button', {\n                  key: 'back',\n                  style: {\n                    marginLeft: 'auto',\n                    background: 'none',\n                    border: 'none',\n                    color: '#cccccc',\n                    cursor: 'pointer',\n                    padding: '4px 8px'\n                  },\n                  onClick: () => {\n                    this.showRssSidebar();\n                  }\n                }, '← 返回')\n              ]),\n              \n              // 文章列表\n              React.createElement('div', {\n                key: 'items',\n                style: {\n                  flex: 1,\n                  overflowY: 'auto',\n                  padding: '8px 0'\n                }\n              }, items.map(item => \n                React.createElement('div', {\n                  key: item.id,\n                  style: {\n                    padding: '12px 16px',\n                    cursor: 'pointer',\n                    transition: 'background-color 0.2s',\n                    borderBottom: '1px solid #3c3c3c'\n                  },\n                  onMouseOver: (e: any) => {\n                    e.target.style.backgroundColor = '#2a2d2e';\n                  },\n                  onMouseOut: (e: any) => {\n                    e.target.style.backgroundColor = 'transparent';\n                  },\n                  onClick: () => {\n                    this.openArticleInEditor(item);\n                  }\n                }, [\n                  React.createElement('div', {\n                    key: 'content',\n                    style: { marginBottom: '8px' }\n                  }, [\n                    React.createElement('div', {\n                      key: 'title',\n                      style: {\n                        fontWeight: '500',\n                        lineHeight: '1.4',\n                        marginBottom: '4px'\n                      }\n                    }, item.title),\n                    React.createElement('div', {\n                      key: 'desc',\n                      style: {\n                        fontSize: '12px',\n                        color: '#cccccc80',\n                        lineHeight: '1.3'\n                      }\n                    }, item.description)\n                  ]),\n                  React.createElement('div', {\n                    key: 'date',\n                    style: {\n                      fontSize: '11px',\n                      color: '#cccccc60'\n                    }\n                  }, new Date(item.pubDate).toLocaleString('zh-CN', {\n                    month: 'short',\n                    day: 'numeric',\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  }))\n                ])\n              ))\n            ]);\n          }\n        });\n        \n        this.api.molecule.sidebar.setCurrent('rss-feed-items');\n      } catch (error) {\n        console.error('Failed to show feed items in sidebar:', error);\n        this.showFeedItems(feed); // 回退到 DOM 方法\n      }\n    } else {\n      this.showFeedItems(feed); // 回退到 DOM 方法\n    }\n  }\n\n  private showFeedItems(feed: any) {\n    const items = this.feedItems[feed.id] || [];\n    \n    // 创建文章列表容器\n    const container = document.createElement('div');\n    container.style.cssText = `\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      background-color: var(--vscode-sideBar-background, #252526);\n      color: var(--vscode-sideBar-foreground, #cccccc);\n    `;\n\n    // 标题栏\n    const header = document.createElement('div');\n    header.style.cssText = `\n      padding: 12px 16px;\n      border-bottom: 1px solid var(--vscode-sideBar-border, #3c3c3c);\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    `;\n    header.innerHTML = `\n      <span style=\"font-size: 16px;\">${feed.icon}</span>\n      <span style=\"font-weight: bold; font-size: 14px;\">${feed.name}</span>\n      <button onclick=\"this.goBack()\" style=\"\n        margin-left: auto;\n        background: none;\n        border: none;\n        color: var(--vscode-foreground, #cccccc);\n        cursor: pointer;\n        padding: 4px 8px;\n      \">← 返回</button>\n    `;\n    container.appendChild(header);\n\n    // 文章列表\n    const itemsContainer = document.createElement('div');\n    itemsContainer.style.cssText = `\n      flex: 1;\n      overflow-y: auto;\n      padding: 8px 0;\n    `;\n\n    items.forEach(item => {\n      const itemElement = this.createArticleElement(item);\n      itemsContainer.appendChild(itemElement);\n    });\n\n    container.appendChild(itemsContainer);\n\n    // 绑定返回按钮事件\n    (window as any).goBack = () => {\n      this.showRssSidebar();\n    };\n\n    // 更新侧边栏\n    const sidebar = document.querySelector('[data-testid=\"sidebar\"]') || \n                   document.querySelector('.sidebar') ||\n                   document.querySelector('[class*=\"sidebar\"]');\n    \n    if (sidebar) {\n      sidebar.innerHTML = '';\n      sidebar.appendChild(container);\n    }\n  }\n\n  private createArticleElement(article: any) {\n    const articleDiv = document.createElement('div');\n    articleDiv.style.cssText = `\n      padding: 12px 16px;\n      cursor: pointer;\n      transition: background-color 0.2s;\n      border-bottom: 1px solid var(--vscode-sideBar-border, #3c3c3c);\n    `;\n\n    articleDiv.onmouseover = () => {\n      articleDiv.style.backgroundColor = 'var(--vscode-list-hoverBackground, #2a2d2e)';\n    };\n\n    articleDiv.onmouseout = () => {\n      articleDiv.style.backgroundColor = 'transparent';\n    };\n\n    articleDiv.onclick = () => {\n      this.openArticleInEditor(article);\n    };\n\n    const pubDate = new Date(article.pubDate).toLocaleString('zh-CN', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n\n    articleDiv.innerHTML = `\n      <div style=\"margin-bottom: 8px;\">\n        <div style=\"font-weight: 500; line-height: 1.4; margin-bottom: 4px;\">\n          ${article.title}\n        </div>\n        <div style=\"font-size: 12px; color: var(--vscode-descriptionForeground, #cccccc80); line-height: 1.3;\">\n          ${article.description}\n        </div>\n      </div>\n      <div style=\"font-size: 11px; color: var(--vscode-descriptionForeground, #cccccc60);\">\n        ${pubDate}\n      </div>\n    `;\n\n    return articleDiv;\n  }\n\n  private openArticleInEditor(article: any) {\n    // 创建文章内容\n    const content = `# ${article.title}\n\n**发布时间**: ${new Date(article.pubDate).toLocaleString('zh-CN')}\n**来源**: ${this.rssFeeds.find(f => f.id === article.feedId)?.name}\n**链接**: [查看原文](${article.link})\n\n---\n\n${article.description}\n\n## 完整内容\n\n这里是文章的完整内容。在实际应用中，这里会显示从 RSS 源获取的完整文章内容。\n\n### 主要观点\n\n- 这是一个示例文章\n- 展示了 RSS 阅读器的功能\n- 支持在编辑器中查看内容\n\n### 相关链接\n\n- [原文链接](${article.link})\n- [更多相关文章](#)\n\n---\n\n*本文通过 RSS 阅读器插件自动获取*\n`;\n\n    const tabId = `rss-${article.id}`;\n    const tabName = `${article.title}.md`;\n\n    // 检查是否已经存在相同标题的标签页\n    if (this.api && this.api.molecule && this.api.molecule.editor) {\n      try {\n        // 检查标签页是否已存在\n        const editorState = this.api.molecule.editor.getState();\n        const existingTab = editorState.groups?.flatMap((group: any) => group.data || [])\n          .find((tab: any) => tab.id === tabId);\n        \n        if (existingTab) {\n          console.log('Article tab already exists, switching to it:', article.title);\n          \n          // 找到包含该标签页的组\n          const group = editorState.groups?.find((group: any) => \n            group.data?.some((tab: any) => tab.id === tabId)\n          );\n          \n          if (group) {\n            // 如果标签页已存在，切换到该标签页\n            this.api.molecule.editor.setCurrent(tabId, group.id);\n            \n            // 通知 AI 助手更新当前文章\n            console.log('Emitting ai:updateArticle event with article:', article);\n            this.api.events.emit('ai:updateArticle', article);\n            \n            return;\n          }\n        }\n        \n        console.log('Opening article directly in Molecule editor:', article.title);\n        \n        // 直接使用 Molecule 编辑器 API 打开文章\n        this.api.molecule.editor.open({\n          id: tabId,\n          name: tabName,\n          value: content,\n          language: 'markdown',\n          icon: 'file'\n        });\n\n        // 通知 AI 助手更新当前文章\n        console.log('Emitting ai:updateArticle event with article:', article);\n        this.api.events.emit('ai:updateArticle', article);\n        \n        console.log('Article opened successfully in editor:', article.title);\n      } catch (error) {\n        console.error('Failed to open article in editor:', error);\n        \n        // 回退到事件系统\n        try {\n          const eventData = {\n            id: tabId,\n            name: tabName,\n            content: content,\n            language: 'markdown',\n            article: article\n          };\n          \n          console.log('Falling back to event system, emitting rss:openArticle event');\n          this.api.events.emit('rss:openArticle', eventData);\n        } catch (eventError) {\n          console.error('Failed to emit event as well:', eventError);\n        }\n      }\n    } else if (this.api) {\n      console.log('Molecule editor API not available, using event system');\n      // 回退到事件系统\n      try {\n        const eventData = {\n          id: tabId,\n          name: tabName,\n          content: content,\n          language: 'markdown',\n          article: article\n        };\n        \n        console.log('Emitting rss:openArticle event with data:', eventData);\n        this.api.events.emit('rss:openArticle', eventData);\n      } catch (error) {\n        console.error('Failed to emit event:', error);\n      }\n    } else {\n      console.error('No API available to open article');\n    }\n  }\n\n  private createRssPanel() {\n    const div = document.createElement('div');\n    div.innerHTML = `\n      <div style=\"padding: 20px;\">\n        <h3>📡 RSS 阅读器</h3>\n        <p>这是一个简单的 RSS 插件示例</p>\n        \n        <div style=\"margin: 20px 0;\">\n          <input \n            type=\"text\" \n            id=\"rss-url\" \n            placeholder=\"输入 RSS 地址\" \n            style=\"width: 300px; padding: 8px; margin-right: 10px;\"\n            value=\"https://rss.cnn.com/rss/edition.rss\"\n          />\n          <button onclick=\"this.loadRss()\" style=\"padding: 8px 16px;\">加载</button>\n        </div>\n        \n        <div id=\"rss-content\" style=\"border: 1px solid #ccc; padding: 15px; min-height: 200px;\">\n          <p>点击\"加载\"按钮来获取 RSS 内容</p>\n        </div>\n        \n        <div style=\"margin-top: 20px;\">\n          <button onclick=\"this.addSampleFeeds()\" style=\"padding: 8px 16px; margin-right: 10px;\">\n            添加示例源\n          </button>\n          <button onclick=\"this.clearFeeds()\" style=\"padding: 8px 16px;\">\n            清空\n          </button>\n        </div>\n      </div>\n    `;\n\n    // 绑定事件处理函数\n    (window as any).loadRss = () => this.loadRss();\n    (window as any).addSampleFeeds = () => this.addSampleFeeds();\n    (window as any).clearFeeds = () => this.clearFeeds();\n\n    return div;\n  }\n\n  private async loadRss() {\n    const urlInput = document.getElementById('rss-url') as HTMLInputElement;\n    const contentDiv = document.getElementById('rss-content');\n    \n    if (!urlInput || !contentDiv) return;\n    \n    const url = urlInput.value.trim();\n    if (!url) {\n      contentDiv.innerHTML = '<p style=\"color: red;\">请输入 RSS 地址</p>';\n      return;\n    }\n\n    contentDiv.innerHTML = '<p>正在加载 RSS 内容...</p>';\n\n    try {\n      // 简单的 RSS 获取（实际项目中应该使用 CORS 代理或后端 API）\n      const response = await fetch(`https://api.rss2json.com/v1/api.json?rss_url=${encodeURIComponent(url)}`);\n      const data = await response.json();\n      \n      if (data.status === 'ok') {\n        this.displayRssContent(data.items);\n      } else {\n        contentDiv.innerHTML = '<p style=\"color: red;\">无法加载 RSS 内容</p>';\n      }\n    } catch (error) {\n      contentDiv.innerHTML = `\n        <p style=\"color: red;\">加载失败: ${error}</p>\n        <p>注意：由于 CORS 限制，这里使用了 RSS2JSON 服务作为示例</p>\n      `;\n    }\n  }\n\n  private displayRssContent(items: any[]) {\n    const contentDiv = document.getElementById('rss-content');\n    if (!contentDiv) return;\n\n    if (items.length === 0) {\n      contentDiv.innerHTML = '<p>没有找到 RSS 内容</p>';\n      return;\n    }\n\n    const html = items.slice(0, 5).map(item => `\n      <div style=\"border-bottom: 1px solid #eee; padding: 10px 0;\">\n        <h4 style=\"margin: 0 0 5px 0;\">\n          <a href=\"${item.link}\" target=\"_blank\" style=\"color: #007acc; text-decoration: none;\">\n            ${item.title}\n          </a>\n        </h4>\n        <p style=\"margin: 0; color: #666; font-size: 12px;\">\n          ${new Date(item.pubDate).toLocaleDateString()}\n        </p>\n        <p style=\"margin: 5px 0 0 0; color: #333;\">\n          ${item.description ? item.description.substring(0, 150) + '...' : ''}\n        </p>\n      </div>\n    `).join('');\n\n    contentDiv.innerHTML = html;\n  }\n\n  private addSampleFeeds() {\n    const urlInput = document.getElementById('rss-url') as HTMLInputElement;\n    if (!urlInput) return;\n\n    const sampleFeeds = [\n      'https://rss.cnn.com/rss/edition.rss',\n      'https://feeds.bbci.co.uk/news/rss.xml',\n      'https://rss.nytimes.com/services/xml/rss/nyt/Technology.xml'\n    ];\n\n    const randomFeed = sampleFeeds[Math.floor(Math.random() * sampleFeeds.length)];\n    urlInput.value = randomFeed || '';\n  }\n\n  private clearFeeds() {\n    const contentDiv = document.getElementById('rss-content');\n    if (contentDiv) {\n      contentDiv.innerHTML = '<p>内容已清空</p>';\n    }\n  }\n}","import { IPluginManifest } from '../../core/pluginSystem/types';\nimport { RssPlugin } from './RssPlugin';\n\nexport const RssPluginManifest: IPluginManifest = {\n  id: 'rss-plugin',\n  name: 'RSS 阅读器',\n  version: '1.0.0',\n  description: '一个简单的 RSS 阅读器插件，可以订阅和阅读 RSS 源',\n  author: 'Molecule Notes Team',\n  dependencies: [],\n  pluginClass: RssPlugin,\n  minAppVersion: '1.0.0',\n  isDesktopOnly: false\n};\n","import { Plugin, App, TFile, MarkdownPostProcessor, MarkdownPostProcessorContext } from '../../core/pluginSystem/ObsidianCompatiblePluginManager';\n\nexport class ObsidianExamplePlugin extends Plugin {\n  private statusBarItem: HTMLElement | null = null;\n  private ribbonIcon: HTMLElement | null = null;\n\n  async onload() {\n    console.log('Obsidian Example Plugin loaded!');\n\n    // 添加状态栏项目\n    this.statusBarItem = this.addStatusBarItem();\n    this.statusBarItem.setText('📝 Obsidian Example Plugin');\n\n    // 添加命令\n    this.addCommand({\n      id: 'obsidian-example-hello',\n      name: 'Say Hello',\n      callback: () => {\n        console.log('Hello from Obsidian Example Plugin!');\n        this.showNotice('Hello from Obsidian Example Plugin!');\n      }\n    });\n\n    // 添加设置标签页\n    this.addSettingTab(new ObsidianExampleSettingTab(this.app, this));\n\n    // 注册 Markdown 后处理器\n    this.registerMarkdownPostProcessor({\n      type: 'markdown',\n      process: (element: HTMLElement, context: MarkdownPostProcessorContext) => {\n        this.processMarkdown(element, context);\n      }\n    });\n\n    // 注册代码块处理器\n    this.registerMarkdownCodeBlockProcessor('obsidian-example', \n      (source: string, el: HTMLElement, ctx: MarkdownPostProcessorContext) => {\n        this.processCodeBlock(source, el, ctx);\n      }\n    );\n\n    // 监听文件打开事件\n    this.registerEvent(\n      this.app.workspace.onFileOpen((file: TFile) => {\n        console.log('File opened:', file.path);\n        this.updateStatusBar(`当前文件: ${file.name}`);\n      })\n    );\n\n    // 保存一些插件数据\n    await this.saveData({\n      lastLoadTime: new Date().toISOString(),\n      loadCount: (await this.loadData())?.loadCount || 0 + 1\n    });\n\n    console.log('Obsidian Example Plugin initialization completed');\n  }\n\n  override async onunload() {\n    console.log('Obsidian Example Plugin unloading...');\n\n    // 清理状态栏项目\n    if (this.statusBarItem) {\n      this.statusBarItem.remove();\n    }\n\n    // 清理图标\n    if (this.ribbonIcon) {\n      this.ribbonIcon.remove();\n    }\n\n    console.log('Obsidian Example Plugin unloaded');\n  }\n\n  private processMarkdown(element: HTMLElement, context: MarkdownPostProcessorContext) {\n    // 查找所有标题元素\n    const headings = element.querySelectorAll('h1, h2, h3, h4, h5, h6');\n    headings.forEach((heading, index) => {\n      const span = document.createElement('span');\n      span.textContent = ` [${index + 1}]`;\n      span.style.color = '#007acc';\n      span.style.fontSize = '0.8em';\n      heading.appendChild(span);\n    });\n  }\n\n  private processCodeBlock(source: string, el: HTMLElement, ctx: MarkdownPostProcessorContext) {\n    // 清空容器\n    el.empty();\n\n    // 创建代码块容器\n    const container = el.createDiv({ cls: 'obsidian-example-code-block' });\n    \n    // 添加标题\n    const title = container.createDiv({ cls: 'code-block-title' });\n    title.setText('Obsidian Example Code Block');\n    \n    // 添加内容\n    const content = container.createDiv({ cls: 'code-block-content' });\n    content.setText(source);\n    \n    // 添加处理按钮\n    const button = container.createEl('button', { text: 'Process Code' });\n    button.onclick = () => {\n      this.processCode(source);\n    };\n\n    // 添加样式\n    container.setCssStyles({\n      border: '1px solid #3c3c3c',\n      borderRadius: '4px',\n      padding: '12px',\n      margin: '8px 0',\n      backgroundColor: '#1e1e1e'\n    });\n\n    title.setCssStyles({\n      fontWeight: 'bold',\n      marginBottom: '8px',\n      color: '#007acc'\n    });\n\n    content.setCssStyles({\n      fontFamily: 'monospace',\n      backgroundColor: '#2d2d30',\n      padding: '8px',\n      borderRadius: '2px',\n      marginBottom: '8px'\n    });\n\n    button.setCssStyles({\n      backgroundColor: '#007acc',\n      color: 'white',\n      border: 'none',\n      padding: '4px 8px',\n      borderRadius: '2px',\n      cursor: 'pointer'\n    });\n  }\n\n  private processCode(source: string) {\n    console.log('Processing code:', source);\n    this.showNotice(`处理了 ${source.length} 个字符的代码`);\n  }\n\n  private updateStatusBar(text: string) {\n    if (this.statusBarItem) {\n      this.statusBarItem.setText(text);\n    }\n  }\n\n  public showNotice(message: string) {\n    // 创建通知元素\n    const notice = document.createElement('div');\n    notice.textContent = message;\n    notice.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: #007acc;\n      color: white;\n      padding: 12px 16px;\n      border-radius: 4px;\n      z-index: 10000;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.3);\n    `;\n\n    document.body.appendChild(notice);\n\n    // 3秒后自动移除\n    setTimeout(() => {\n      if (notice.parentNode) {\n        notice.parentNode.removeChild(notice);\n      }\n    }, 3000);\n  }\n}\n\n// 设置标签页类\nclass ObsidianExampleSettingTab {\n  private app: App;\n  private plugin: ObsidianExamplePlugin;\n  public id: string = 'obsidian-example-settings';\n  public name: string = 'Obsidian Example';\n  public tab: HTMLElement;\n\n  constructor(app: App, plugin: ObsidianExamplePlugin) {\n    this.app = app;\n    this.plugin = plugin;\n    this.tab = this.createSettingsTab();\n  }\n\n  private createSettingsTab(): HTMLElement {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      padding: 20px;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    `;\n\n    // 标题\n    const title = container.createEl('h2', { text: 'Obsidian Example Plugin Settings' });\n    title.style.marginBottom = '20px';\n\n    // 设置项\n    const settingContainer = container.createDiv();\n    settingContainer.style.marginBottom = '16px';\n\n    // 示例设置\n    const settingLabel = settingContainer.createEl('label', { text: '示例设置:' });\n    settingLabel.style.display = 'block';\n    settingLabel.style.marginBottom = '8px';\n\n    const settingInput = settingContainer.createEl('input', { type: 'text' });\n    settingInput.placeholder = '输入设置值';\n    settingInput.style.cssText = `\n      width: 100%;\n      padding: 8px;\n      border: 1px solid #3c3c3c;\n      border-radius: 4px;\n      background: #1e1e1e;\n      color: #cccccc;\n    `;\n\n    // 按钮\n    const buttonContainer = container.createDiv();\n    buttonContainer.style.marginTop = '20px';\n\n    const testButton = buttonContainer.createEl('button', { text: '测试功能' });\n    testButton.style.cssText = `\n      background: #007acc;\n      color: white;\n      border: none;\n      padding: 8px 16px;\n      border-radius: 4px;\n      cursor: pointer;\n      margin-right: 8px;\n    `;\n    testButton.onclick = () => {\n      this.plugin.showNotice('测试功能已执行！');\n    };\n\n    const resetButton = buttonContainer.createEl('button', { text: '重置设置' });\n    resetButton.style.cssText = `\n      background: #d73a49;\n      color: white;\n      border: none;\n      padding: 8px 16px;\n      border-radius: 4px;\n      cursor: pointer;\n    `;\n    resetButton.onclick = () => {\n      settingInput.value = '';\n      this.plugin.showNotice('设置已重置！');\n    };\n\n    return container;\n  }\n}\n","import { IPluginManifest } from '../../core/pluginSystem/types';\nimport { ObsidianExamplePlugin } from './ObsidianExamplePlugin';\n\nexport const obsidianExampleManifest: IPluginManifest = {\n  id: 'obsidian-example-plugin',\n  name: 'Obsidian Example Plugin',\n  version: '1.0.0',\n  description: '一个展示 Obsidian 兼容插件系统的示例插件',\n  author: 'Molecule Team',\n  dependencies: [],\n  pluginClass: ObsidianExamplePlugin,\n  minAppVersion: '1.0.0',\n  isDesktopOnly: false\n};\n","import { IPluginAPI, IPluginClass } from '../../core/pluginSystem/types';\nimport React from 'react';\n\nexport class HelloPlugin implements IPluginClass {\n  private api: IPluginAPI | null = null;\n\n  async onload(api: IPluginAPI) {\n    this.api = api;\n    console.log('Hello Plugin loaded successfully!');\n    \n    // 延迟添加 UI 元素，确保 Molecule 完全加载\n    setTimeout(() => {\n      this.addHelloActivityBarItem();\n    }, 2000);\n  }\n\n  async onunload() {\n    console.log('Hello Plugin unloaded');\n    // 清理资源\n  }\n\n  private addHelloActivityBarItem() {\n    console.log('Hello Plugin: Starting to add activity bar item');\n    console.log('Hello Plugin: API available:', !!this.api);\n    console.log('Hello Plugin: UI API available:', !!this.api?.ui);\n    console.log('Hello Plugin: addActivityBarItem available:', !!this.api?.ui?.addActivityBarItem);\n    \n    // 优先使用 Molecule API\n    if (this.api && this.api.ui && this.api.ui.addActivityBarItem) {\n      try {\n        console.log('Hello Plugin: Using Molecule API to add activity bar item');\n        this.api.ui.addActivityBarItem({\n          id: 'hello-plugin',\n          name: 'Hello Plugin',\n          icon: 'lightbulb', // 使用 Molecule 支持的图标名称\n          sortIndex: 4,\n          alignment: 'top',\n          onClick: () => {\n            console.log('Hello Plugin: Activity bar item clicked');\n            this.showHelloSidebar();\n          }\n        });\n        console.log('Hello Plugin: Activity bar item added via Molecule API');\n        \n        // 监听 Molecule 的 ActivityBar 点击事件\n        if (this.api.molecule && this.api.molecule.activityBar) {\n          this.api.molecule.activityBar.onClick((item: any) => {\n            console.log('Hello Plugin: ActivityBar click event received:', item);\n            if (item && item.id === 'hello-plugin') {\n              console.log('Hello Plugin: Hello item clicked, showing sidebar');\n              this.showHelloSidebar();\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Hello Plugin: Failed to add activity bar item via API:', error);\n        // 回退到 DOM 操作\n        this.addHelloActivityBarItemViaDOM();\n      }\n    } else {\n      console.log('Hello Plugin: Molecule UI API not available, using DOM fallback');\n      this.addHelloActivityBarItemViaDOM();\n    }\n  }\n\n  private addHelloActivityBarItemViaDOM() {\n    // 查找活动栏\n    const activityBar = document.querySelector('[data-testid=\"activityBar\"]') || \n                       document.querySelector('.activityBar') ||\n                       document.querySelector('[class*=\"activity\"]') ||\n                       document.querySelector('[class*=\"ActivityBar\"]') ||\n                       document.querySelector('[class*=\"activityBar\"]') ||\n                       document.querySelector('.mo-activityBar__container');\n    \n    if (activityBar) {\n      console.log('Hello Plugin: Found activity bar:', activityBar);\n      \n      const icon = document.createElement('div');\n      icon.innerHTML = '💡'; // 使用 emoji 作为图标\n      icon.title = 'Hello Plugin';\n      icon.style.cssText = `\n        width: 48px;\n        height: 48px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        cursor: pointer;\n        font-size: 20px;\n        transition: background-color 0.2s;\n        border-radius: 4px;\n        margin: 4px 0;\n        color: var(--activityBar-inactiveForeground, #cccccc);\n      `;\n      \n      icon.onmouseover = () => {\n        icon.style.backgroundColor = 'rgba(255, 255, 255, 0.1)';\n      };\n      \n      icon.onmouseout = () => {\n        icon.style.backgroundColor = 'transparent';\n      };\n      \n      icon.onclick = () => {\n        console.log('Hello Plugin: Icon clicked via DOM');\n        this.showHelloSidebar();\n      };\n      \n      // 插入到合适位置\n      const firstItem = activityBar.querySelector('[class*=\"item\"], [class*=\"icon\"]');\n      if (firstItem) {\n        activityBar.insertBefore(icon, firstItem);\n      } else {\n        activityBar.appendChild(icon);\n      }\n      \n      console.log('Hello Plugin: Activity bar item added via DOM');\n    } else {\n      console.log('Hello Plugin: Activity bar not found, retrying...');\n      setTimeout(() => this.addHelloActivityBarItemViaDOM(), 1000);\n    }\n  }\n\n  private showHelloSidebar() {\n    console.log('Hello Plugin: showHelloSidebar called');\n    \n    // 使用 Molecule API 在侧边栏显示内容\n    if (this.api && this.api.molecule && this.api.molecule.sidebar) {\n      try {\n        console.log('Hello Plugin: Using Molecule sidebar API directly');\n        this.api.molecule.sidebar.add({\n          id: 'hello-sidebar',\n          name: 'Hello World',\n          render: () => {\n            console.log('Hello Plugin: Rendering Hello sidebar content');\n            \n            // 创建包含 Hello World 内容的 React 元素\n            const content = React.createElement('div', {\n              style: {\n                height: '100%',\n                display: 'flex',\n                flexDirection: 'column',\n                backgroundColor: '#252526',\n                color: '#cccccc',\n                fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\n              }\n            }, [\n              // 标题栏\n              React.createElement('div', {\n                key: 'header',\n                style: {\n                  padding: '16px 20px',\n                  borderBottom: '1px solid #3c3c3c',\n                  textAlign: 'center'\n                }\n              }, [\n                React.createElement('h2', {\n                  key: 'title',\n                  style: {\n                    color: '#007acc',\n                    margin: '0 0 8px 0',\n                    fontSize: '24px'\n                  }\n                }, '👋 Hello World'),\n                React.createElement('div', {\n                  key: 'subtitle',\n                  style: {\n                    fontSize: '14px',\n                    color: '#cccccc80'\n                  }\n                }, '这是一个简单的 Hello 插件示例！')\n              ]),\n              \n              // 功能说明\n              React.createElement('div', {\n                key: 'features',\n                style: {\n                  flex: 1,\n                  padding: '20px',\n                  overflowY: 'auto'\n                }\n              }, [\n                React.createElement('div', {\n                  key: 'features-header',\n                  style: {\n                    marginBottom: '16px',\n                    padding: '12px 16px',\n                    backgroundColor: '#1e1e1e',\n                    borderRadius: '6px',\n                    borderLeft: '4px solid #007acc'\n                  }\n                }, [\n                  React.createElement('h3', {\n                    key: 'features-title',\n                    style: {\n                      margin: '0 0 12px 0',\n                      color: '#007acc',\n                      fontSize: '16px'\n                    }\n                  }, '插件功能：'),\n                  React.createElement('ul', {\n                    key: 'features-list',\n                    style: {\n                      margin: 0,\n                      paddingLeft: '20px',\n                      lineHeight: '1.6'\n                    }\n                  }, [\n                    React.createElement('li', { key: 'feature1' }, '✅ 点击图标显示 Hello World'),\n                    React.createElement('li', { key: 'feature2' }, '✅ 在侧边栏显示内容'),\n                    React.createElement('li', { key: 'feature3' }, '✅ 在编辑器中创建文件'),\n                    React.createElement('li', { key: 'feature4' }, '✅ 状态栏集成'),\n                    React.createElement('li', { key: 'feature5' }, '✅ 命令系统支持')\n                  ])\n                ]),\n                \n                // 技术信息\n                React.createElement('div', {\n                  key: 'tech-info',\n                  style: {\n                    marginTop: '20px',\n                    padding: '12px 16px',\n                    backgroundColor: '#1e1e1e',\n                    borderRadius: '6px',\n                    fontSize: '12px',\n                    color: '#cccccc80'\n                  }\n                }, [\n                  React.createElement('div', { key: 'tech1' }, '🔧 技术实现：'),\n                  React.createElement('div', { key: 'tech2' }, '• 继承 IPluginClass 接口'),\n                  React.createElement('div', { key: 'tech3' }, '• 使用 Molecule API'),\n                  React.createElement('div', { key: 'tech4' }, '• React 组件渲染'),\n                  React.createElement('div', { key: 'tech5' }, '• 错误处理和回退')\n                ])\n              ]),\n              \n              // 时间戳\n              React.createElement('div', {\n                key: 'timestamp',\n                style: {\n                  padding: '12px 20px',\n                  borderTop: '1px solid #3c3c3c',\n                  fontSize: '12px',\n                  color: '#888',\n                  textAlign: 'center'\n                }\n              }, `加载时间: ${new Date().toLocaleString('zh-CN')}`)\n            ]);\n            \n            console.log('Hello Plugin: Hello sidebar content created successfully');\n            return content;\n          }\n        });\n\n        // 设置为当前活动的侧边栏\n        this.api.molecule.sidebar.setCurrent('hello-sidebar');\n        \n        console.log('Hello Plugin: Sidebar displayed successfully');\n        \n        // 显示通知\n        this.showNotice('Hello World! 👋');\n        \n        // 在编辑器中显示 Hello World\n        this.showHelloInEditor();\n      } catch (error) {\n        console.error('Hello Plugin: Failed to show sidebar:', error);\n        this.showNotice('侧边栏显示失败，请检查控制台错误');\n      }\n    } else {\n      console.log('Hello Plugin: Molecule sidebar API not available');\n      this.showNotice('侧边栏API不可用');\n    }\n  }\n\n  private showHelloInEditor() {\n    // 创建 Hello World 内容\n    const content = `# 👋 Hello World!\n\n欢迎使用 Hello 插件！\n\n## 功能特性\n\n- ✅ **状态栏集成**: 在状态栏显示插件状态\n- ✅ **图标点击**: 点击功能区图标触发功能\n- ✅ **侧边栏显示**: 在侧边栏显示插件内容\n- ✅ **编辑器集成**: 在编辑器中创建和显示内容\n- ✅ **命令支持**: 支持通过命令面板调用\n\n## 插件信息\n\n- **插件名称**: Hello Plugin\n- **版本**: 1.0.0\n- **作者**: Molecule Team\n- **加载时间**: ${new Date().toLocaleString('zh-CN')}\n\n## 使用方法\n\n1. 点击左侧活动栏的 💡 图标\n2. 或使用命令面板执行 \"Show Hello World\"\n3. 查看侧边栏和编辑器中的内容\n\n## 技术实现\n\n这个插件展示了如何：\n\n- 继承 \\`IPluginClass\\` 接口\n- 实现 \\`onload\\` 和 \\`onunload\\` 方法\n- 使用 Molecule API 添加 UI 元素\n- 集成 Molecule 框架功能\n\n---\n\n*这是一个用于验证插件开发流程的示例插件*\n`;\n\n    const tabId = 'hello-world';\n    const tabName = 'Hello World.md';\n\n    // 使用 Molecule 编辑器 API 打开文件\n    if (this.api && this.api.molecule && this.api.molecule.editor) {\n      try {\n        // 检查标签页是否已存在\n        const editorState = this.api.molecule.editor.getState();\n        const existingTab = editorState.groups?.flatMap((group: any) => group.data || [])\n          .find((tab: any) => tab.id === tabId);\n        \n        if (existingTab) {\n          console.log('Hello Plugin: Hello World tab already exists, switching to it');\n          \n          // 找到包含该标签页的组\n          const group = editorState.groups?.find((group: any) => \n            group.data?.some((tab: any) => tab.id === tabId)\n          );\n          \n          if (group) {\n            // 切换到已存在的标签页\n            this.api.molecule.editor.setCurrent(tabId, group.id);\n            return;\n          }\n        }\n        \n        console.log('Hello Plugin: Opening Hello World in editor');\n        \n        // 创建新的标签页\n        this.api.molecule.editor.open({\n          id: tabId,\n          name: tabName,\n          value: content,\n          language: 'markdown',\n          icon: 'file'\n        });\n\n        console.log('Hello Plugin: Hello World opened successfully in editor');\n      } catch (error) {\n        console.error('Hello Plugin: Failed to open Hello World in editor:', error);\n        this.showNotice('编辑器打开失败，请检查控制台错误');\n      }\n    } else {\n      console.log('Hello Plugin: Molecule editor API not available');\n      this.showNotice('编辑器API不可用');\n    }\n  }\n\n  private showNotice(message: string) {\n    // 创建通知元素\n    const notice = document.createElement('div');\n    notice.textContent = message;\n    notice.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: var(--notification-background, #007acc);\n      color: var(--notification-foreground, white);\n      padding: 12px 16px;\n      border-radius: 4px;\n      z-index: 10000;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.3);\n      animation: slideIn 0.3s ease-out;\n    `;\n\n    // 添加动画样式\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes slideIn {\n        from {\n          transform: translateX(100%);\n          opacity: 0;\n        }\n        to {\n          transform: translateX(0);\n          opacity: 1;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n\n    document.body.appendChild(notice);\n\n    // 3秒后自动移除\n    setTimeout(() => {\n      if (notice.parentNode) {\n        notice.parentNode.removeChild(notice);\n      }\n      if (style.parentNode) {\n        style.parentNode.removeChild(style);\n      }\n    }, 3000);\n  }\n}\n","import { IPluginManifest } from '../../core/pluginSystem/types';\nimport { HelloPlugin } from './HelloPlugin';\n\nexport const helloPluginManifest: IPluginManifest = {\n  id: 'hello-plugin',\n  name: 'Hello Plugin',\n  version: '1.0.0',\n  description: '一个简单的 Hello World 插件，用于验证插件开发流程',\n  author: 'Molecule Team',\n  dependencies: [],\n  pluginClass: HelloPlugin,\n  minAppVersion: '1.0.0',\n  isDesktopOnly: false\n};\n","import { IPluginAPI, IPluginClass } from '../../core/pluginSystem/types';\nimport React from 'react';\n\nexport class ExcalidrawPlugin implements IPluginClass {\n  private api: IPluginAPI | null = null;\n  private canvasStates: Map<string, any> = new Map(); // 存储每个画布的状态\n\n  async onload(api: IPluginAPI) {\n    this.api = api;\n    console.log('Excalidraw Plugin loaded successfully!');\n    \n    setTimeout(() => {\n      this.addExcalidrawActivityBarItem();\n    }, 2000);\n  }\n\n  async onunload() {\n    console.log('Excalidraw Plugin unloaded');\n  }\n\n  private addExcalidrawActivityBarItem() {\n    console.log('Excalidraw Plugin: Starting to add activity bar item');\n    console.log('Excalidraw Plugin: API available:', !!this.api);\n    console.log('Excalidraw Plugin: UI API available:', !!this.api?.ui);\n    console.log('Excalidraw Plugin: addActivityBarItem available:', !!this.api?.ui?.addActivityBarItem);\n    \n    // 优先使用 Molecule API\n    if (this.api && this.api.ui && this.api.ui.addActivityBarItem) {\n      try {\n        console.log('Excalidraw Plugin: Using Molecule API to add activity bar item');\n        this.api.ui.addActivityBarItem({\n          id: 'excalidraw-plugin',\n          name: 'Excalidraw 白板',\n          icon: 'pencil',\n          sortIndex: 5,\n          alignment: 'top',\n          onClick: () => {\n            console.log('Excalidraw Plugin: Activity bar item clicked');\n            this.showExcalidrawSidebar();\n          }\n        });\n        console.log('Excalidraw Plugin: Activity bar item added via Molecule API');\n        \n        // 监听 Molecule 的 ActivityBar 点击事件\n        if (this.api.molecule && this.api.molecule.activityBar) {\n          this.api.molecule.activityBar.onClick((item: any) => {\n            console.log('Excalidraw Plugin: ActivityBar click event received:', item);\n            if (item && item.id === 'excalidraw-plugin') {\n              console.log('Excalidraw Plugin: Excalidraw item clicked, showing sidebar');\n              this.showExcalidrawSidebar();\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Excalidraw Plugin: Failed to add activity bar item via API:', error);\n        this.addExcalidrawActivityBarItemViaDOM();\n      }\n    } else {\n      console.log('Excalidraw Plugin: Molecule UI API not available, using DOM fallback');\n      this.addExcalidrawActivityBarItemViaDOM();\n    }\n  }\n\n  private addExcalidrawActivityBarItemViaDOM() {\n    const activityBar = document.querySelector('.mo-activityBar__container');\n    if (activityBar) {\n      const icon = document.createElement('div');\n      icon.innerHTML = '✏️';\n      icon.title = 'Excalidraw 白板';\n      icon.style.cssText = `\n        width: 48px; height: 48px; display: flex; align-items: center; justify-content: center;\n        cursor: pointer; font-size: 20px; transition: background-color 0.2s; border-radius: 4px;\n        margin: 4px 0; color: var(--activityBar-inactiveForeground, #cccccc);\n      `;\n      icon.onclick = () => this.showExcalidrawSidebar();\n      activityBar.appendChild(icon);\n    }\n  }\n\n  private showExcalidrawSidebar() {\n    console.log('Excalidraw Plugin: showExcalidrawSidebar called');\n    \n    if (this.api && this.api.molecule && this.api.molecule.sidebar) {\n      try {\n        console.log('Excalidraw Plugin: Using Molecule sidebar API directly');\n        this.api.molecule.sidebar.add({\n          id: 'excalidraw-sidebar',\n          name: 'Excalidraw 白板',\n          render: () => {\n            return React.createElement('div', {\n              style: {\n                height: '100%',\n                display: 'flex',\n                flexDirection: 'column',\n                backgroundColor: '#252526',\n                color: '#cccccc',\n                fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\n              }\n            }, [\n              // 标题栏\n              React.createElement('div', {\n                key: 'header',\n                style: {\n                  padding: '20px',\n                  borderBottom: '1px solid #3c3c3c',\n                  textAlign: 'center'\n                }\n              }, [\n                React.createElement('h1', {\n                  key: 'title',\n                  style: {\n                    color: '#007acc',\n                    margin: '0 0 8px 0',\n                    fontSize: '28px',\n                    fontWeight: 'bold'\n                  }\n                }, '✏️ Excalidraw'),\n                React.createElement('div', {\n                  key: 'subtitle',\n                  style: {\n                    fontSize: '14px',\n                    color: '#cccccc80',\n                    marginBottom: '16px'\n                  }\n                }, '无限画布，无限创意'),\n                // 创建新画布按钮\n                React.createElement('button', {\n                  key: 'create-button',\n                  style: {\n                    width: '100%',\n                    padding: '12px 16px',\n                    backgroundColor: '#007acc',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '6px',\n                    fontSize: '14px',\n                    fontWeight: 'bold',\n                    cursor: 'pointer',\n                    transition: 'background-color 0.2s'\n                  },\n                  onClick: () => this.createNewCanvas()\n                }, '🆕 创建新画布')\n              ]),\n              \n              // 功能说明\n              React.createElement('div', {\n                key: 'features',\n                style: {\n                  flex: 1,\n                  padding: '20px',\n                  overflowY: 'auto'\n                }\n              }, [\n                React.createElement('div', {\n                  key: 'features-header',\n                  style: {\n                    fontSize: '16px',\n                    fontWeight: 'bold',\n                    marginBottom: '16px',\n                    color: '#007acc'\n                  }\n                }, '✨ 功能特性'),\n                React.createElement('div', {\n                  key: 'features-list',\n                  style: {\n                    fontSize: '13px',\n                    lineHeight: '1.6',\n                    color: '#cccccc80'\n                  }\n                }, [\n                  React.createElement('div', { key: 'feature1' }, '• 无限画布，自由创作'),\n                  React.createElement('div', { key: 'feature2' }, '• 多种绘图工具'),\n                  React.createElement('div', { key: 'feature3' }, '• 实时绘制预览'),\n                  React.createElement('div', { key: 'feature4' }, '• 简洁直观的界面'),\n                  React.createElement('div', { key: 'feature5' }, '• 支持图形、文字、箭头'),\n                  React.createElement('div', { key: 'feature6' }, '• 笔记和图片元素')\n                ])\n              ])\n            ]);\n          }\n        });\n\n        this.api.molecule.sidebar.setCurrent('excalidraw-sidebar');\n        this.showNotice('Excalidraw 白板已启动！✏️');\n        \n      } catch (error) {\n        this.showNotice('侧边栏显示失败');\n      }\n    }\n  }\n\n  private createNewCanvas() {\n    const canvasId = `excalidraw-${Date.now()}`;\n    const canvasName = `画布_${new Date().toLocaleString('zh-CN', { \n      month: '2-digit', \n      day: '2-digit', \n      hour: '2-digit', \n      minute: '2-digit' \n    })}`;\n    \n    if (this.api && this.api.molecule && this.api.molecule.editor) {\n      try {\n        // 使用自定义编辑器打开画布，使用 render 属性创建自定义组件\n        this.api.molecule.editor.open({\n          id: canvasId,\n          name: canvasName,\n          value: 'Excalidraw Canvas', // 简单的值，实际内容由 render 函数提供\n          language: 'typescript',\n          icon: 'file',\n          breadcrumb: [\n            { id: 'app', name: 'app' },\n            { id: 'plugins', name: 'plugins' },\n            { id: 'excalidraw', name: 'excalidraw' },\n            { id: 'canvas', name: canvasName, icon: 'file' },\n          ],\n          // 使用 render 属性创建自定义的 Excalidraw 组件\n          render: ({ value }: { value: any }) => this.createExcalidrawComponent(canvasId)\n        });\n        \n        console.log('Excalidraw Plugin: Canvas opened with custom render component');\n        this.showNotice('新画布已创建！🎨 现在可以在画布上绘图了');\n        \n      } catch (error) {\n        console.error('Excalidraw Plugin: Failed to open canvas:', error);\n        this.showNotice('画布创建失败');\n      }\n    }\n  }\n\n  private createExcalidrawComponent(canvasId: string) {\n    console.log('Excalidraw Plugin: Creating Excalidraw component for canvas:', canvasId);\n    \n    // 初始化画布状态\n    if (!this.canvasStates.has(canvasId)) {\n      this.canvasStates.set(canvasId, {\n        currentTool: 'pen',\n        isDrawing: false,\n        startX: 0,\n        startY: 0,\n        elements: [],\n        currentElement: null\n      });\n    }\n    \n    const state = this.canvasStates.get(canvasId);\n    \n    // 创建一个包含完整 Excalidraw 功能的 React 组件\n    return React.createElement('div', {\n      style: {\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: '#f5f5f5',\n        fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\n      }\n    }, [\n      // 工具栏\n      React.createElement('div', {\n        key: 'toolbar',\n        style: {\n          height: '60px',\n          backgroundColor: '#2a2d2e',\n          borderBottom: '1px solid #3c3c3c',\n          display: 'flex',\n          alignItems: 'center',\n          padding: '0 16px',\n          gap: '8px'\n        }\n      }, [\n        React.createElement('button', {\n          key: 'pen',\n          style: this.getToolButtonStyle(state.currentTool === 'pen'),\n          onClick: () => this.selectTool(canvasId, 'pen')\n        }, '✏️ 画笔'),\n        React.createElement('button', {\n          key: 'line',\n          style: this.getToolButtonStyle(state.currentTool === 'line'),\n          onClick: () => this.selectTool(canvasId, 'line')\n        }, '📏 直线'),\n        React.createElement('button', {\n          key: 'rectangle',\n          style: this.getToolButtonStyle(state.currentTool === 'rectangle'),\n          onClick: () => this.selectTool(canvasId, 'rectangle')\n        }, '⬜ 矩形'),\n        React.createElement('button', {\n          key: 'circle',\n          style: this.getToolButtonStyle(state.currentTool === 'circle'),\n          onClick: () => this.selectTool(canvasId, 'circle')\n        }, '⭕ 圆形'),\n        React.createElement('button', {\n          key: 'text',\n          style: this.getToolButtonStyle(state.currentTool === 'text'),\n          onClick: () => this.selectTool(canvasId, 'text')\n        }, '💬 文本'),\n        React.createElement('button', {\n          key: 'arrow',\n          style: this.getToolButtonStyle(state.currentTool === 'arrow'),\n          onClick: () => this.selectTool(canvasId, 'arrow')\n        }, '➡️ 箭头'),\n        React.createElement('div', { key: 'spacer', style: { flex: 1 } }),\n        React.createElement('button', {\n          key: 'clear',\n          style: {\n            backgroundColor: '#d73a49',\n            color: 'white',\n            border: 'none',\n            padding: '8px 16px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '14px'\n          },\n          onClick: () => this.clearCanvas(canvasId)\n        }, '🧹 清除画布')\n      ]),\n      \n      // 画布区域\n      React.createElement('div', {\n        key: 'canvas-container',\n        style: {\n          flex: 1,\n          position: 'relative',\n          backgroundColor: '#ffffff',\n          overflow: 'hidden'\n        }\n      }, [\n        React.createElement('div', {\n          key: 'canvas',\n          id: `excalidraw-canvas-${canvasId}`,\n          style: {\n            width: '100%',\n            height: '100%',\n            cursor: state.currentTool === 'text' ? 'text' : 'crosshair',\n            position: 'relative',\n            backgroundImage: `\n              linear-gradient(rgba(0,0,0,0.1) 1px, transparent 1px),\n              linear-gradient(90deg, rgba(0,0,0,0.1) 1px, transparent 1px)\n            `,\n            backgroundSize: '20px 20px'\n          },\n          onMouseDown: (e: any) => this.handleCanvasMouseDown(e, canvasId),\n          onMouseMove: (e: any) => this.handleCanvasMouseMove(e, canvasId),\n          onMouseUp: (e: any) => this.handleCanvasMouseUp(e, canvasId)\n        }),\n        \n        // 状态栏\n        React.createElement('div', {\n          key: 'status-bar',\n          style: {\n            position: 'absolute',\n            bottom: '0',\n            left: '0',\n            right: '0',\n            height: '30px',\n            backgroundColor: '#2a2d2e',\n            color: '#cccccc',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '0 16px',\n            fontSize: '12px',\n            borderTop: '1px solid #3c3c3c'\n          }\n        }, [\n          React.createElement('div', {\n            key: 'coordinates',\n            id: `coordinates-${canvasId}`\n          }, '坐标: 0, 0'),\n          React.createElement('div', {\n            key: 'tool-info',\n            id: `tool-info-${canvasId}`,\n            style: { flex: 1, marginLeft: '16px' }\n          }, `当前工具: ${this.getToolName(state.currentTool)}`)\n        ])\n      ])\n    ]);\n  }\n\n  private getToolButtonStyle(isActive: boolean) {\n    return {\n      width: '40px',\n      height: '40px',\n      border: `1px solid ${isActive ? '#007acc' : '#3c3c3c'}`,\n      borderRadius: '6px',\n      background: isActive ? '#007acc' : '#2a2d2e',\n      color: isActive ? 'white' : '#cccccc',\n      cursor: 'pointer',\n      fontSize: '16px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      transition: 'all 0.2s'\n    };\n  }\n\n  private selectTool(canvasId: string, tool: string) {\n    console.log('Excalidraw Plugin: Tool selected:', tool, 'for canvas:', canvasId);\n    const state = this.canvasStates.get(canvasId);\n    if (state) {\n      state.currentTool = tool;\n      this.canvasStates.set(canvasId, state);\n      \n      // 更新工具信息显示\n      const toolInfo = document.getElementById(`tool-info-${canvasId}`);\n      if (toolInfo) {\n        toolInfo.textContent = `当前工具: ${this.getToolName(tool)}`;\n      }\n      \n      // 更新光标\n      const canvas = document.getElementById(`excalidraw-canvas-${canvasId}`);\n      if (canvas) {\n        canvas.style.cursor = tool === 'text' ? 'text' : 'crosshair';\n      }\n      \n      // 强制重新渲染组件\n      this.forceRerender(canvasId);\n    }\n  }\n\n  private getToolName(tool: string): string {\n    const toolNames: { [key: string]: string } = {\n      pen: '画笔',\n      line: '直线',\n      rectangle: '矩形',\n      circle: '圆形',\n      text: '文本',\n      arrow: '箭头'\n    };\n    return toolNames[tool] || tool;\n  }\n\n  private forceRerender(canvasId: string) {\n    // 这里可以添加强制重新渲染的逻辑\n    // 由于我们使用的是 React.createElement，可能需要通过其他方式触发重新渲染\n    console.log('Excalidraw Plugin: Force rerender for canvas:', canvasId);\n  }\n\n  private clearCanvas(canvasId: string) {\n    console.log('Excalidraw Plugin: Clearing canvas:', canvasId);\n    const canvas = document.getElementById(`excalidraw-canvas-${canvasId}`);\n    if (canvas) {\n      // 清除所有绘图元素\n      const elements = canvas.querySelectorAll('.drawing-element');\n      elements.forEach(element => element.remove());\n      \n      // 清除预览\n      this.clearPreview(canvasId);\n      \n      // 重置状态\n      const state = this.canvasStates.get(canvasId);\n      if (state) {\n        state.elements = [];\n        state.isDrawing = false;\n        this.canvasStates.set(canvasId, state);\n      }\n    }\n  }\n\n  private handleCanvasMouseDown(e: React.MouseEvent, canvasId: string) {\n    console.log('Excalidraw Plugin: Mouse down on canvas:', canvasId);\n    const state = this.canvasStates.get(canvasId);\n    if (!state) return;\n\n    const canvas = document.getElementById(`excalidraw-canvas-${canvasId}`);\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const x = Math.round(e.clientX - rect.left);\n    const y = Math.round(e.clientY - rect.top);\n\n    state.isDrawing = true;\n    state.startX = x;\n    state.startY = y;\n\n    if (state.currentTool === 'text') {\n      this.createTextElement(canvasId, x, y);\n    }\n\n    this.canvasStates.set(canvasId, state);\n  }\n\n  private handleCanvasMouseMove(e: React.MouseEvent, canvasId: string) {\n    const canvas = document.getElementById(`excalidraw-canvas-${canvasId}`);\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const x = Math.round(e.clientX - rect.left);\n    const y = Math.round(e.clientY - rect.top);\n\n    // 更新坐标显示\n    const coordinates = document.getElementById(`coordinates-${canvasId}`);\n    if (coordinates) {\n      coordinates.textContent = `坐标: ${x}, ${y}`;\n    }\n\n    const state = this.canvasStates.get(canvasId);\n    if (!state || !state.isDrawing) return;\n\n    // 实时绘制预览\n    this.updateDrawingPreview(canvasId, x, y);\n  }\n\n  private handleCanvasMouseUp(e: React.MouseEvent, canvasId: string) {\n    console.log('Excalidraw Plugin: Mouse up on canvas:', canvasId);\n    const state = this.canvasStates.get(canvasId);\n    if (!state || !state.isDrawing) return;\n\n    const canvas = document.getElementById(`excalidraw-canvas-${canvasId}`);\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const endX = Math.round(e.clientX - rect.left);\n    const endY = Math.round(e.clientY - rect.top);\n\n    // 创建绘图元素\n    this.createElement(canvasId, state.startX, state.startY, endX, endY);\n\n    state.isDrawing = false;\n    this.canvasStates.set(canvasId, state);\n\n    // 清除预览\n    this.clearPreview(canvasId);\n  }\n\n  private createElement(canvasId: string, startX: number, startY: number, endX: number, endY: number) {\n    const state = this.canvasStates.get(canvasId);\n    if (!state) return;\n\n    const canvas = document.getElementById(`excalidraw-canvas-${canvasId}`);\n    if (!canvas) return;\n\n    const element = document.createElement('div');\n    element.className = 'drawing-element';\n    element.style.position = 'absolute';\n    element.style.pointerEvents = 'none';\n\n    switch (state.currentTool) {\n      case 'pen':\n        this.createPenStroke(canvas, startX, startY, endX, endY);\n        break;\n      case 'line':\n        this.createLine(canvas, element, startX, startY, endX, endY);\n        break;\n      case 'rectangle':\n        this.createRectangle(canvas, element, startX, startY, endX, endY);\n        break;\n      case 'circle':\n        this.createCircle(canvas, element, startX, startY, endX, endY);\n        break;\n      case 'arrow':\n        this.createArrow(canvas, element, startX, startY, endX, endY);\n        break;\n    }\n\n    if (element.style.width || element.style.height) {\n      canvas.appendChild(element);\n      state.elements.push(element);\n      this.canvasStates.set(canvasId, state);\n    }\n  }\n\n  private createPenStroke(canvas: HTMLElement, startX: number, startY: number, endX: number, endY: number) {\n    const line = document.createElement('div');\n    line.className = 'drawing-element';\n    line.style.position = 'absolute';\n    line.style.pointerEvents = 'none';\n    line.style.background = '#007acc';\n    line.style.height = '2px';\n    line.style.transformOrigin = 'left center';\n\n    const length = Math.sqrt(Math.pow(endX - startX, 2) + Math.pow(endY - startY, 2));\n    const angle = Math.atan2(endY - startY, endX - startX);\n\n    line.style.left = startX + 'px';\n    line.style.top = startY + 'px';\n    line.style.width = length + 'px';\n    line.style.transform = `rotate(${angle}rad)`;\n\n    canvas.appendChild(line);\n  }\n\n  private createLine(canvas: HTMLElement, element: HTMLElement, startX: number, startY: number, endX: number, endY: number) {\n    const length = Math.sqrt(Math.pow(endX - startX, 2) + Math.pow(endY - startY, 2));\n    const angle = Math.atan2(endY - startY, endX - startX);\n\n    element.style.left = startX + 'px';\n    element.style.top = startY + 'px';\n    element.style.width = length + 'px';\n    element.style.height = '2px';\n    element.style.background = '#007acc';\n    element.style.transformOrigin = 'left center';\n    element.style.transform = `rotate(${angle}rad)`;\n  }\n\n  private createRectangle(canvas: HTMLElement, element: HTMLElement, startX: number, startY: number, endX: number, endY: number) {\n    const width = Math.abs(endX - startX);\n    const height = Math.abs(endY - startY);\n    const left = Math.min(startX, endX);\n    const top = Math.min(startY, endY);\n\n    element.style.left = left + 'px';\n    element.style.top = top + 'px';\n    element.style.width = width + 'px';\n    element.style.height = height + 'px';\n    element.style.border = '2px solid #007acc';\n    element.style.background = 'rgba(0, 122, 204, 0.1)';\n  }\n\n  private createCircle(canvas: HTMLElement, element: HTMLElement, startX: number, startY: number, endX: number, endY: number) {\n    const radius = Math.sqrt(Math.pow(endX - startX, 2) + Math.pow(endY - startY, 2));\n\n    element.style.left = (startX - radius) + 'px';\n    element.style.top = (startY - radius) + 'px';\n    element.style.width = (radius * 2) + 'px';\n    element.style.height = (radius * 2) + 'px';\n    element.style.border = '2px solid #007acc';\n    element.style.background = 'rgba(0, 122, 204, 0.1)';\n    element.style.borderRadius = '50%';\n  }\n\n  private createArrow(canvas: HTMLElement, element: HTMLElement, startX: number, startY: number, endX: number, endY: number) {\n    this.createLine(canvas, element, startX, startY, endX, endY);\n    element.style.borderRight = '8px solid transparent';\n    element.style.borderLeft = '8px solid transparent';\n    element.style.borderTop = '8px solid #007acc';\n    element.style.width = '0';\n    element.style.height = '0';\n    element.style.left = endX + 'px';\n    element.style.top = endY + 'px';\n    element.style.transform = `rotate(${Math.atan2(endY - startY, endX - startX)}rad)`;\n  }\n\n  private createTextElement(canvasId: string, x: number, y: number) {\n    const canvas = document.getElementById(`excalidraw-canvas-${canvasId}`);\n    if (!canvas) return;\n\n    const textArea = document.createElement('textarea');\n    textArea.className = 'drawing-element';\n    textArea.style.position = 'absolute';\n    textArea.style.left = x + 'px';\n    textArea.style.top = y + 'px';\n    textArea.style.border = 'none';\n    textArea.style.background = 'transparent';\n    textArea.style.color = '#333';\n    textArea.style.fontSize = '14px';\n    textArea.style.padding = '4px';\n    textArea.style.minWidth = '20px';\n    textArea.style.minHeight = '20px';\n    textArea.style.resize = 'none';\n    textArea.style.outline = 'none';\n    textArea.style.fontFamily = 'inherit';\n    textArea.placeholder = '输入文本...';\n\n    textArea.addEventListener('blur', () => {\n      if (!textArea.value.trim()) {\n        textArea.remove();\n      }\n    });\n\n    textArea.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter' && !e.shiftKey) {\n        e.preventDefault();\n        textArea.blur();\n      }\n    });\n\n    canvas.appendChild(textArea);\n    textArea.focus();\n  }\n\n  private updateDrawingPreview(canvasId: string, currentX: number, currentY: number) {\n    this.clearPreview(canvasId);\n    \n    const state = this.canvasStates.get(canvasId);\n    if (!state || state.currentTool === 'pen') return;\n\n    const canvas = document.getElementById(`excalidraw-canvas-${canvasId}`);\n    if (!canvas) return;\n\n    const preview = document.createElement('div');\n    preview.className = 'drawing-element';\n    preview.style.position = 'absolute';\n    preview.style.pointerEvents = 'none';\n    preview.style.opacity = '0.5';\n\n    switch (state.currentTool) {\n      case 'line':\n        this.createLine(canvas, preview, state.startX, state.startY, currentX, currentY);\n        break;\n      case 'rectangle':\n        this.createRectangle(canvas, preview, state.startX, state.startY, currentX, currentY);\n        break;\n      case 'circle':\n        this.createCircle(canvas, preview, state.startX, state.startY, currentX, currentY);\n        break;\n      case 'arrow':\n        this.createArrow(canvas, preview, state.startX, state.startY, currentX, currentY);\n        break;\n    }\n\n    if (preview.style.width || preview.style.height) {\n      preview.id = `drawing-preview-${canvasId}`;\n      canvas.appendChild(preview);\n    }\n  }\n\n  private clearPreview(canvasId: string) {\n    const preview = document.getElementById(`drawing-preview-${canvasId}`);\n    if (preview) {\n      preview.remove();\n    }\n  }\n\n  private generateCanvasHTML(): string {\n    return `<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Excalidraw 画布</title>\n    <style>\n        body { margin: 0; padding: 0; font-family: -apple-system, sans-serif; background: #f5f5f5; }\n        .container { display: flex; height: 100vh; }\n        .toolbar { width: 60px; background: #2a2d2e; padding: 16px 8px; display: flex; flex-direction: column; gap: 8px; }\n        .tool-button { width: 40px; height: 40px; border: 1px solid #3c3c3c; border-radius: 6px; background: #2a2d2e; color: #cccccc; cursor: pointer; font-size: 16px; display: flex; align-items: center; justify-content: center; }\n        .tool-button:hover { background: #3c3c3c; border-color: #007acc; }\n        .tool-button.active { background: #007acc; border-color: #007acc; color: white; }\n        .canvas-area { flex: 1; background: #ffffff; position: relative; }\n        .canvas { width: 100%; height: 100%; cursor: crosshair; position: relative; }\n        .canvas-grid { position: absolute; top: 0; left: 0; width: 100%; height: 100%; background-image: linear-gradient(rgba(0,0,0,0.1) 1px, transparent 1px), linear-gradient(90deg, rgba(0,0,0,0.1) 1px, transparent 1px); background-size: 20px 20px; pointer-events: none; }\n        .drawing-element { position: absolute; pointer-events: none; }\n        .line { background: #007acc; height: 2px; transform-origin: left center; }\n        .shape { border: 2px solid #007acc; background: rgba(0, 122, 204, 0.1); }\n        .status-bar { position: absolute; bottom: 0; left: 0; right: 0; height: 30px; background: #2a2d2e; color: #cccccc; display: flex; align-items: center; padding: 0 16px; font-size: 12px; border-top: 1px solid #3c3c3c; }\n        .clear-button { background: #d73a49; color: white; border: none; padding: 4px 8px; border-radius: 4px; cursor: pointer; font-size: 12px; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"toolbar\">\n            <button class=\"tool-button active\" title=\"画笔\" data-tool=\"pen\">✏️</button>\n            <button class=\"tool-button\" title=\"直线\" data-tool=\"line\">📏</button>\n            <button class=\"tool-button\" title=\"矩形\" data-tool=\"rectangle\">⬜</button>\n            <button class=\"tool-button\" title=\"圆形\" data-tool=\"circle\">⭕</button>\n            <button class=\"tool-button\" title=\"文本\" data-tool=\"text\">💬</button>\n            <button class=\"tool-button\" title=\"箭头\" data-tool=\"arrow\">➡️</button>\n        </div>\n        <div class=\"canvas-area\">\n            <div class=\"canvas\" id=\"excalidraw-canvas\">\n                <div class=\"canvas-grid\"></div>\n            </div>\n            <div class=\"status-bar\">\n                <div id=\"coordinates\">坐标: 0, 0</div>\n                <div id=\"tool-info\" style=\"flex: 1; margin-left: 16px;\">当前工具: 画笔</div>\n                <button class=\"clear-button\" id=\"clear-button\">清除画布</button>\n            </div>\n        </div>\n    </div>\n    <script>\n        class ExcalidrawCanvas {\n            constructor() {\n                this.canvas = document.getElementById('excalidraw-canvas');\n                this.toolButtons = document.querySelectorAll('.tool-button');\n                this.coordinates = document.getElementById('coordinates');\n                this.toolInfo = document.getElementById('tool-info');\n                this.clearButton = document.getElementById('clear-button');\n                \n                this.currentTool = 'pen';\n                this.isDrawing = false;\n                this.startX = 0;\n                this.startY = 0;\n                this.elements = [];\n                \n                this.initializeEventListeners();\n            }\n            \n            initializeEventListeners() {\n                this.toolButtons.forEach(button => {\n                    button.addEventListener('click', (e) => {\n                        this.selectTool(e.target.dataset.tool);\n                    });\n                });\n                \n                this.canvas.addEventListener('mousedown', (e) => this.handleMouseDown(e));\n                this.canvas.addEventListener('mousemove', (e) => this.handleMouseMove(e));\n                this.canvas.addEventListener('mouseup', (e) => this.handleMouseUp(e));\n                \n                this.clearButton.addEventListener('click', () => this.clearCanvas());\n                \n                this.canvas.addEventListener('mousemove', (e) => {\n                    const rect = this.canvas.getBoundingClientRect();\n                    const x = Math.round(e.clientX - rect.left);\n                    const y = Math.round(e.clientY - rect.top);\n                    this.coordinates.textContent = \\`坐标: \\${x}, \\${y}\\`;\n                });\n            }\n            \n            selectTool(tool) {\n                this.currentTool = tool;\n                this.toolButtons.forEach(button => {\n                    button.classList.remove('active');\n                    if (button.dataset.tool === tool) {\n                        button.classList.add('active');\n                    }\n                });\n                \n                const toolNames = { pen: '画笔', line: '直线', rectangle: '矩形', circle: '圆形', text: '文本', arrow: '箭头' };\n                this.toolInfo.textContent = \\`当前工具: \\${toolNames[tool]}\\`;\n                this.canvas.style.cursor = tool === 'text' ? 'text' : 'crosshair';\n            }\n            \n            handleMouseDown(e) {\n                this.isDrawing = true;\n                const rect = this.canvas.getBoundingClientRect();\n                this.startX = e.clientX - rect.left;\n                this.startY = e.clientY - rect.top;\n                \n                if (this.currentTool === 'text') {\n                    this.createTextElement(this.startX, this.startY);\n                }\n            }\n            \n            handleMouseMove(e) {\n                if (!this.isDrawing) return;\n                const rect = this.canvas.getBoundingClientRect();\n                const currentX = e.clientX - rect.left;\n                const currentY = e.clientY - rect.top;\n                this.updateDrawingPreview(currentX, currentY);\n            }\n            \n            handleMouseUp(e) {\n                if (!this.isDrawing) return;\n                const rect = this.canvas.getBoundingClientRect();\n                const endX = e.clientX - rect.left;\n                const endY = e.clientY - rect.top;\n                this.createElement(this.startX, this.startY, endX, endY);\n                this.isDrawing = false;\n                this.clearPreview();\n            }\n            \n            createElement(startX, startY, endX, endY) {\n                const element = document.createElement('div');\n                element.className = 'drawing-element';\n                \n                switch (this.currentTool) {\n                    case 'pen':\n                        this.createPenStroke(startX, startY, endX, endY);\n                        break;\n                    case 'line':\n                        this.createLine(element, startX, startY, endX, endY);\n                        break;\n                    case 'rectangle':\n                        this.createRectangle(element, startX, startY, endX, endY);\n                        break;\n                    case 'circle':\n                        this.createCircle(element, startX, startY, endX, endY);\n                        break;\n                    case 'arrow':\n                        this.createArrow(element, startX, startY, endX, endY);\n                        break;\n                }\n                \n                if (element.style.width || element.style.height) {\n                    this.canvas.appendChild(element);\n                    this.elements.push(element);\n                }\n            }\n            \n            createPenStroke(startX, startY, endX, endY) {\n                const line = document.createElement('div');\n                line.className = 'drawing-element line';\n                const length = Math.sqrt(Math.pow(endX - startX, 2) + Math.pow(endY - startY, 2));\n                const angle = Math.atan2(endY - startY, endX - startX);\n                line.style.left = startX + 'px';\n                line.style.top = startY + 'px';\n                line.style.width = length + 'px';\n                line.style.transform = \\`rotate(\\${angle}rad)\\`;\n                this.canvas.appendChild(line);\n                this.elements.push(line);\n            }\n            \n            createLine(element, startX, startY, endX, endY) {\n                const length = Math.sqrt(Math.pow(endX - startX, 2) + Math.pow(endY - startY, 2));\n                const angle = Math.atan2(endY - startY, endX - startX);\n                element.style.left = startX + 'px';\n                element.style.top = startY + 'px';\n                element.style.width = length + 'px';\n                element.style.height = '2px';\n                element.style.backgroundColor = '#007acc';\n                element.style.transformOrigin = 'left center';\n                element.style.transform = \\`rotate(\\${angle}rad)\\`;\n            }\n            \n            createRectangle(element, startX, startY, endX, endY) {\n                const width = Math.abs(endX - startX);\n                const height = Math.abs(endY - startY);\n                const left = Math.min(startX, endX);\n                const top = Math.min(startY, endY);\n                element.style.left = left + 'px';\n                element.style.top = top + 'px';\n                element.style.width = width + 'px';\n                element.style.height = height + 'px';\n                element.style.border = '2px solid #007acc';\n                element.style.backgroundColor = 'rgba(0, 122, 204, 0.1)';\n            }\n            \n            createCircle(element, startX, startY, endX, endY) {\n                const radius = Math.sqrt(Math.pow(endX - startX, 2) + Math.pow(endY - startY, 2));\n                element.style.left = (startX - radius) + 'px';\n                element.style.top = (startY - radius) + 'px';\n                element.style.width = (radius * 2) + 'px';\n                element.style.height = (radius * 2) + 'px';\n                element.style.border = '2px solid #007acc';\n                element.style.backgroundColor = 'rgba(0, 122, 204, 0.1)';\n                element.style.borderRadius = '50%';\n            }\n            \n            createArrow(element, startX, startY, endX, endY) {\n                this.createLine(element, startX, startY, endX, endY);\n                element.style.borderRight = '8px solid transparent';\n                element.style.borderLeft = '8px solid transparent';\n                element.style.borderTop = '8px solid #007acc';\n                element.style.width = '0';\n                element.style.height = '0';\n                element.style.left = endX + 'px';\n                element.style.top = endY + 'px';\n                element.style.transform = \\`rotate(\\${Math.atan2(endY - startY, endX - startX)}rad)\\`;\n            }\n            \n            createTextElement(x, y) {\n                const textArea = document.createElement('textarea');\n                textArea.className = 'drawing-element';\n                textArea.style.left = x + 'px';\n                textArea.style.top = y + 'px';\n                textArea.style.position = 'absolute';\n                textArea.style.border = 'none';\n                textArea.style.background = 'transparent';\n                textArea.style.color = '#333';\n                textArea.style.fontSize = '14px';\n                textArea.style.padding = '4px';\n                textArea.style.minWidth = '20px';\n                textArea.style.minHeight = '20px';\n                textArea.style.resize = 'none';\n                textArea.style.outline = 'none';\n                textArea.style.fontFamily = 'inherit';\n                textArea.placeholder = '输入文本...';\n                \n                textArea.addEventListener('blur', () => {\n                    if (!textArea.value.trim()) {\n                        textArea.remove();\n                    }\n                });\n                \n                textArea.addEventListener('keydown', (e) => {\n                    if (e.key === 'Enter' && !e.shiftKey) {\n                        e.preventDefault();\n                        textArea.blur();\n                    }\n                });\n                \n                this.canvas.appendChild(textArea);\n                textArea.focus();\n                this.elements.push(textArea);\n            }\n            \n            updateDrawingPreview(currentX, currentY) {\n                this.clearPreview();\n                if (this.currentTool === 'pen') return;\n                \n                const preview = document.createElement('div');\n                preview.className = 'drawing-element';\n                preview.style.opacity = '0.5';\n                \n                switch (this.currentTool) {\n                    case 'line':\n                        this.createLine(preview, this.startX, this.startY, currentX, currentY);\n                        break;\n                    case 'rectangle':\n                        this.createRectangle(preview, this.startX, this.startY, currentX, currentY);\n                        break;\n                    case 'circle':\n                        this.createCircle(preview, this.startX, this.startY, currentX, currentY);\n                        break;\n                    case 'arrow':\n                        this.createArrow(preview, this.startX, this.startY, currentX, currentY);\n                        break;\n                }\n                \n                if (preview.style.width || preview.style.height) {\n                    preview.id = 'drawing-preview';\n                    this.canvas.appendChild(preview);\n                }\n            }\n            \n            clearPreview() {\n                const preview = document.getElementById('drawing-preview');\n                if (preview) {\n                    preview.remove();\n                }\n            }\n            \n            clearCanvas() {\n                this.elements.forEach(element => element.remove());\n                this.elements = [];\n                this.clearPreview();\n            }\n        }\n        \n        document.addEventListener('DOMContentLoaded', () => {\n            new ExcalidrawCanvas();\n        });\n    </script>\n</body>\n</html>`;\n  }\n\n  private showNotice(message: string) {\n    const notice = document.createElement('div');\n    notice.textContent = message;\n    notice.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: #007acc;\n      color: white;\n      padding: 12px 16px;\n      border-radius: 4px;\n      z-index: 10000;\n      font-family: -apple-system, sans-serif;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.3);\n    `;\n    document.body.appendChild(notice);\n    setTimeout(() => {\n      if (notice.parentNode) {\n        notice.parentNode.removeChild(notice);\n      }\n    }, 3000);\n  }\n}\n","import { IPluginManifest } from '../../core/pluginSystem/types';\nimport { ExcalidrawPlugin } from './ExcalidrawPlugin';\n\nexport const excalidrawPluginManifest: IPluginManifest = {\n  id: 'excalidraw-plugin',\n  name: 'Excalidraw 白板',\n  version: '1.0.0',\n  description: '一个简单的 Excalidraw 白板插件，提供无限画布功能',\n  author: 'Molecule Team',\n  dependencies: [],\n  pluginClass: ExcalidrawPlugin,\n  minAppVersion: '1.0.0',\n  isDesktopOnly: false\n};\n    ","import { PluginManager } from './pluginSystem/PluginManager';\nimport { ObsidianCompatiblePluginManager } from './pluginSystem/ObsidianCompatiblePluginManager';\nimport { RssPluginManifest } from '../plugins/rss/manifest';\nimport { obsidianExampleManifest } from '../plugins/obsidianExample/manifest';\nimport { helloPluginManifest } from '../plugins/hello/manifest';\nimport { excalidrawPluginManifest } from '../plugins/excalidraw/manifest';\n// import { AiAssistantPluginManifest } from '../plugins/aiAssistant/manifest';\n\nexport class PluginSystemService {\n  private pluginManager: PluginManager;\n  private obsidianPluginManager: ObsidianCompatiblePluginManager;\n  private moleculeContext: any;\n\n  constructor(moleculeContext: any) {\n    this.moleculeContext = moleculeContext;\n    this.pluginManager = new PluginManager(moleculeContext);\n    this.obsidianPluginManager = new ObsidianCompatiblePluginManager(moleculeContext);\n    this.setupPluginManager();\n    this.setupObsidianPluginManager();\n  }\n\n  private setupPluginManager() {\n    // 监听插件事件\n    this.pluginManager.on('pluginRegistered', (plugin: any) => {\n      console.log('Plugin registered:', plugin.name);\n    });\n\n    this.pluginManager.on('pluginEnabled', (plugin: any) => {\n      console.log('Plugin enabled:', plugin.name);\n      // 安全地调用通知\n      try {\n        if (this.moleculeContext.notification && this.moleculeContext.notification.open) {\n          this.moleculeContext.notification.open({\n            id: `plugin-enabled-${plugin.id}`,\n            value: `插件 \"${plugin.name}\" 已启用`,\n            type: 'success'\n          });\n        }\n      } catch (error) {\n        console.log('Plugin enabled:', plugin.name);\n      }\n    });\n\n    this.pluginManager.on('pluginError', (plugin: any, error: any) => {\n      console.error('Plugin error:', plugin.name, error);\n      // 安全地调用通知\n      try {\n        if (this.moleculeContext.notification && this.moleculeContext.notification.open) {\n          this.moleculeContext.notification.open({\n            id: `plugin-error-${plugin.id}`,\n            value: `插件 \"${plugin.name}\" 加载失败: ${error.message}`,\n            type: 'error'\n          });\n        }\n      } catch (error) {\n        console.error('Plugin error:', plugin.name, error);\n      }\n    });\n  }\n\n  private setupObsidianPluginManager() {\n    // 监听 Obsidian 兼容插件事件\n    this.obsidianPluginManager.on('pluginRegistered', (plugin: any) => {\n      console.log('Obsidian compatible plugin registered:', plugin.name);\n    });\n\n    this.obsidianPluginManager.on('pluginEnabled', (plugin: any) => {\n      console.log('Obsidian compatible plugin enabled:', plugin.name);\n      // 安全地调用通知\n      try {\n        if (this.moleculeContext.notification && this.moleculeContext.notification.open) {\n          this.moleculeContext.notification.open({\n            id: `obsidian-plugin-enabled-${plugin.id}`,\n            value: `Obsidian 兼容插件 \"${plugin.name}\" 已启用`,\n            type: 'success'\n          });\n        }\n      } catch (error) {\n        console.log('Obsidian compatible plugin enabled:', plugin.name);\n      }\n    });\n\n    this.obsidianPluginManager.on('pluginError', (plugin: any, error: any) => {\n      console.error('Obsidian compatible plugin error:', plugin.name, error);\n      // 安全地调用通知\n      try {\n        if (this.moleculeContext.notification && this.moleculeContext.notification.open) {\n          this.moleculeContext.notification.open({\n            id: `obsidian-plugin-error-${plugin.id}`,\n            value: `Obsidian 兼容插件 \"${plugin.name}\" 加载失败: ${error.message}`,\n            type: 'error'\n          });\n        }\n      } catch (error) {\n        console.error('Obsidian compatible plugin error:', plugin.name, error);\n      }\n    });\n  }\n\n  /**\n   * 初始化插件系统\n   */\n  async initialize() {\n    console.log('Initializing plugin system...');\n    \n    // 注册内置插件\n    await this.registerBuiltinPlugins();\n    \n    // 注册 Obsidian 兼容插件\n    await this.registerObsidianPlugins();\n    \n    // 启用所有插件\n    await this.enableAllPlugins();\n    \n    console.log('Plugin system initialized');\n  }\n\n  /**\n   * 注册内置插件\n   */\n  private async registerBuiltinPlugins() {\n    // 注册 RSS 插件\n    await this.pluginManager.registerPlugin(RssPluginManifest, RssPluginManifest.pluginClass);\n    \n    // 注册 Hello 插件\n    await this.pluginManager.registerPlugin(helloPluginManifest, helloPluginManifest.pluginClass);\n    \n    // 注册 Excalidraw 插件\n    await this.pluginManager.registerPlugin(excalidrawPluginManifest, excalidrawPluginManifest.pluginClass);\n    \n    // 注册 AI 助手插件 - 暂时禁用，使用TestExtension中的新实现\n    // await this.pluginManager.registerPlugin(AiAssistantPluginManifest, AiAssistantPluginManifest.pluginClass);\n    \n    // 这里可以添加更多内置插件\n  }\n\n  /**\n   * 注册 Obsidian 兼容插件\n   */\n  private async registerObsidianPlugins() {\n    // 注册 Obsidian 示例插件\n    await this.obsidianPluginManager.registerObsidianPlugin(\n      obsidianExampleManifest, \n      obsidianExampleManifest.pluginClass\n    );\n    \n    // 这里可以添加更多 Obsidian 兼容插件\n  }\n\n  /**\n   * 启用所有插件\n   */\n  private async enableAllPlugins() {\n    // 启用传统插件\n    const plugins = this.pluginManager.getAllPlugins();\n    for (const plugin of plugins) {\n      try {\n        await this.pluginManager.enablePlugin(plugin.id);\n      } catch (error) {\n        console.error(`Failed to enable plugin ${plugin.id}:`, error);\n      }\n    }\n\n    // 启用 Obsidian 兼容插件\n    const obsidianPlugins = this.obsidianPluginManager.getAllPlugins();\n    for (const plugin of obsidianPlugins) {\n      try {\n        await this.obsidianPluginManager.enableObsidianPlugin(plugin.id);\n      } catch (error) {\n        console.error(`Failed to enable Obsidian plugin ${plugin.id}:`, error);\n      }\n    }\n  }\n\n  /**\n   * 获取传统插件管理器\n   */\n  getPluginManager(): PluginManager {\n    return this.pluginManager;\n  }\n\n  /**\n   * 获取 Obsidian 兼容插件管理器\n   */\n  getObsidianPluginManager(): ObsidianCompatiblePluginManager {\n    return this.obsidianPluginManager;\n  }\n\n  /**\n   * 获取所有插件（包括传统和 Obsidian 兼容）\n   */\n  getAllPlugins() {\n    const traditionalPlugins = this.pluginManager.getAllPlugins();\n    const obsidianPlugins = this.obsidianPluginManager.getAllPlugins();\n    return [...traditionalPlugins, ...obsidianPlugins];\n  }\n\n  /**\n   * 获取启用的插件（包括传统和 Obsidian 兼容）\n   */\n  getEnabledPlugins() {\n    const traditionalPlugins = this.pluginManager.getEnabledPlugins();\n    const obsidianPlugins = this.obsidianPluginManager.getEnabledPlugins();\n    return [...traditionalPlugins, ...obsidianPlugins];\n  }\n\n  /**\n   * 获取 Obsidian App 实例\n   */\n  getObsidianApp() {\n    return this.obsidianPluginManager.getApp();\n  }\n}\n","import { IContributeType, IExtension, IMoleculeContext } from '@dtinsight/molecule';\nimport React from 'react';\nimport { PluginSystemService } from '../../app/src/core/PluginSystemService';\n\nexport const TestExtension: IExtension = {\n    id: 'TestExtension',\n    name: 'TestExtension',\n    contributes: {\n        [IContributeType.Modules]: {},\n    },\n    activate(molecule: IMoleculeContext, _monaco) {\n        console.log('TestExtension activated');\n        \n        let pluginSystem: PluginSystemService | null = null;\n        \n        // 默认显示 AuxiliaryBar\n        molecule.layout.setAuxiliaryBar(true);\n\n        // 添加辅助工具栏内容\n        setTimeout(() => {\n            try {\n                molecule.auxiliaryBar.add({\n                    id: 'ai-assistant',\n                    name: 'AI 助手',\n                    icon: 'lightbulb',\n                    render: () => React.createElement('div', {\n                        style: {\n                            padding: '20px',\n                            color: '#cccccc',\n                            backgroundColor: '#252526',\n                            height: '100%'\n                        }\n                    }, [\n                        React.createElement('h2', { key: 'title' }, 'AI 助手'),\n                        React.createElement('p', { key: 'content' }, '这是一个 AI 助手面板，用于测试辅助工具栏功能。'),\n                        React.createElement('p', { key: 'status' }, '状态: 正常运行')\n                    ])\n                });\n                \n                // 设置为当前激活的辅助工具栏\n                molecule.auxiliaryBar.setCurrent('ai-assistant');\n                \n                // 确保辅助工具栏可见\n                molecule.layout.setAuxiliaryBar(true);\n                \n                console.log('AI Assistant added to auxiliary bar');\n                console.log('Auxiliary bar should be visible now');\n            } catch (error) {\n                console.error('Failed to add AI Assistant to auxiliary bar:', error);\n            }\n        }, 1000);\n\n        // 添加测试活动栏项目\n        molecule.activityBar.add({\n            id: 'testPane',\n            name: '测试面板',\n            alignment: 'top',\n            sortIndex: 2,\n            icon: 'beaker',\n        });\n\n        molecule.activityBar.add({\n            id: 'pluginManager',\n            name: '插件管理',\n            alignment: 'top',\n            sortIndex: 3,\n            icon: 'rocket',\n        });\n\n        // 添加测试侧边栏\n        molecule.sidebar.add({\n            id: 'testPane',\n            name: '测试面板',\n            render: () => React.createElement('div', {\n                style: {\n                    padding: '20px',\n                    color: '#cccccc',\n                    backgroundColor: '#252526',\n                    height: '100%'\n                }\n            }, [\n                React.createElement('h2', { key: 'title' }, '测试面板'),\n                React.createElement('p', { key: 'content' }, '这是一个测试面板，用于验证 Molecule 框架是否正常工作。'),\n                React.createElement('p', { key: 'status' }, '状态: 正常运行')\n            ]),\n        });\n\n        // 延迟初始化插件系统，确保 Molecule 完全加载\n        setTimeout(() => {\n            try {\n                console.log('Starting plugin system initialization...');\n                pluginSystem = new PluginSystemService(molecule);\n                pluginSystem.initialize().then(() => {\n                    console.log('Plugin system initialized successfully');\n                }).catch((error: any) => {\n                    console.error('Failed to initialize plugin system:', error);\n                });\n            } catch (error) {\n                console.error('Failed to create plugin system:', error);\n            }\n        }, 2000);\n\n        // 添加插件管理侧边栏\n        setTimeout(() => {\n            molecule.sidebar.add({\n                id: 'pluginManager',\n                name: '插件管理',\n                render: () => React.createElement('div', {\n                    style: {\n                        padding: '20px',\n                        color: '#cccccc',\n                        backgroundColor: '#252526',\n                        height: '100%'\n                    }\n                }, [\n                    React.createElement('h2', { key: 'title' }, '插件管理'),\n                    React.createElement('p', { key: 'content' }, '插件系统状态: ' + (pluginSystem ? '已初始化' : '未初始化')),\n                    React.createElement('p', { key: 'plugins' }, '已加载插件: Hello Plugin'),\n                    React.createElement('button', {\n                        key: 'refresh',\n                        onClick: () => {\n                            console.log('刷新插件列表');\n                            window.location.reload();\n                        },\n                        style: {\n                            padding: '8px 16px',\n                            backgroundColor: '#007acc',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '4px',\n                            cursor: 'pointer',\n                            marginTop: '10px'\n                        }\n                    }, '刷新')\n                ]),\n            });\n        }, 3000);\n\n        console.log('TestExtension setup completed');\n    }\n};\n"],"names":["PluginStatus","EventEmitter$1","event","listener","index","args","error","PluginManager","EventEmitter","moleculeContext","manifest","pluginClass","pluginId","plugin","PluginClass","instance","api","path","content","icon","title","callback","element","tab","id","view","item","visible","key","defaultValue","value","message","targetLang","func","wait","dep","settings","timeout","later","inThrottle","Component","type","eventListener","interval","text","options","div","tag","styles","Plugin","app","command","commandId","settingTab","viewCreator","postProcessor","sortOrder","language","handler","data","ObsidianCompatiblePluginManager","pluginInstance","linktext","source","newLeaf","file","info","extensions","viewType","newPath","linkpath","sourcePath","folder","filename","iconId","itemId","React","placeholder","extension","RssPlugin","activityBar","rssIcon","firstItem","feed","e","sidebarContent","sidebar","container","header","feedsContainer","feedElement","feedDiv","items","itemsContainer","itemElement","article","articleDiv","pubDate","f","tabId","tabName","editorState","group","eventData","eventError","urlInput","contentDiv","url","html","sampleFeeds","randomFeed","RssPluginManifest","ObsidianExamplePlugin","ObsidianExampleSettingTab","context","el","ctx","heading","span","button","notice","settingContainer","settingLabel","settingInput","buttonContainer","testButton","resetButton","obsidianExampleManifest","HelloPlugin","style","helloPluginManifest","ExcalidrawPlugin","canvasId","canvasName","state","isActive","tool","toolInfo","canvas","rect","x","y","coordinates","endX","endY","startX","startY","line","length","angle","width","height","left","top","radius","textArea","currentX","currentY","preview","excalidrawPluginManifest","PluginSystemService","plugins","obsidianPlugins","traditionalPlugins","TestExtension","IContributeType","molecule","_monaco","pluginSystem"],"mappings":"sHAAO,IAAKA,GAAAA,IACVA,EAAA,WAAa,aACbA,EAAA,QAAU,UACVA,EAAA,SAAW,WACXA,EAAA,MAAQ,QAJEA,IAAAA,GAAA,CAAA,CAAA,ECGZ,IAAAC,EAAA,KAAmB,CACT,OAAwC,CAAA,EAEhD,GAAGC,EAAeC,EAAoB,CAC/B,KAAK,OAAOD,CAAK,IACpB,KAAK,OAAOA,CAAK,EAAI,CAAA,GAEvB,KAAK,OAAOA,CAAK,EAAE,KAAKC,CAAQ,CAClC,CAEA,IAAID,EAAeC,EAAoB,CACrC,GAAI,CAAC,KAAK,OAAOD,CAAK,EAAG,OACzB,MAAME,EAAQ,KAAK,OAAOF,CAAK,EAAE,QAAQC,CAAQ,EAC7CC,EAAQ,IACV,KAAK,OAAOF,CAAK,EAAE,OAAOE,EAAO,CAAC,CAEtC,CAEA,KAAKF,KAAkBG,EAAa,CAC7B,KAAK,OAAOH,CAAK,GACtB,KAAK,OAAOA,CAAK,EAAE,QAAQC,GAAY,CACrC,GAAI,CACFA,EAAS,GAAGE,CAAI,CAClB,OAASC,EAAO,CACd,QAAQ,MAAM,wBAAyBA,CAAK,CAC9C,CACF,CAAC,CACH,CACF,EAEO,MAAMC,UAAsBC,CAAa,CACtC,YAAoC,IACpC,eAA0C,IAC1C,mBAAkC,IAClC,mBAAuC,IACvC,gBAER,YAAYC,EAAuB,CACjC,MAAA,EACA,KAAK,gBAAkBA,CACzB,CAKA,MAAM,eAAeC,EAA2BC,EAAiC,CAC/E,MAAMC,EAAWF,EAAS,GAE1B,GAAI,KAAK,QAAQ,IAAIE,CAAQ,EAC3B,MAAM,IAAI,MAAM,UAAUA,CAAQ,wBAAwB,EAG5D,MAAMC,EAAkB,CACtB,GAAID,EACJ,KAAMF,EAAS,KACf,QAASA,EAAS,QAClB,YAAaA,EAAS,YACtB,OAAQA,EAAS,OACjB,aAAcA,EAAS,cAAgB,CAAA,EACvC,OAAQV,EAAa,WACrB,SAAAU,EACA,SAAU,KACV,IAAK,IAAA,EAGP,KAAK,QAAQ,IAAIE,EAAUC,CAAM,EACjC,KAAK,KAAK,mBAAoBA,CAAM,CACtC,CAKA,MAAM,aAAaD,EAAiC,CAClD,MAAMC,EAAS,KAAK,QAAQ,IAAID,CAAQ,EACxC,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,UAAUD,CAAQ,YAAY,EAGhD,GAAI,MAAK,eAAe,IAAIA,CAAQ,EAKpC,OAAM,KAAK,kBAAkBC,CAAM,EAEnC,GAAI,CAEF,MAAMC,EAAcD,EAAO,SAAS,YAC9BE,EAAW,IAAID,EAGfE,EAAM,KAAK,gBAAgBJ,CAAQ,EAGrCG,EAAS,QACX,MAAMA,EAAS,OAAOC,CAAG,EAG3BH,EAAO,SAAWE,EAClBF,EAAO,IAAMG,EACbH,EAAO,OAASb,EAAa,QAE7B,KAAK,eAAe,IAAIY,CAAQ,EAChC,KAAK,KAAK,gBAAiBC,CAAM,CAEnC,OAASP,EAAO,CACd,MAAAO,EAAO,OAASb,EAAa,MAC7B,KAAK,KAAK,cAAea,EAAQP,CAAK,EAChCA,CACR,EACF,CAKA,MAAM,cAAcM,EAAiC,CACnD,MAAMC,EAAS,KAAK,QAAQ,IAAID,CAAQ,EACxC,GAAI,GAACC,GAAU,CAAC,KAAK,eAAe,IAAID,CAAQ,GAIhD,GAAI,CAEEC,EAAO,UAAYA,EAAO,SAAS,UACrC,MAAMA,EAAO,SAAS,SAAA,EAGxBA,EAAO,SAAW,KAClBA,EAAO,IAAM,KACbA,EAAO,OAASb,EAAa,WAE7B,KAAK,eAAe,OAAOY,CAAQ,EACnC,KAAK,KAAK,iBAAkBC,CAAM,CAEpC,OAASP,EAAO,CACd,WAAK,KAAK,cAAeO,EAAQP,CAAK,EAChCA,CACR,CACF,CAKQ,gBAAgBM,EAA8B,CACpD,MAAMI,EAAkB,CAEtB,WAAY,CACV,SAAWC,GAAiB,KAAK,SAASA,CAAI,EAC9C,UAAW,CAACA,EAAcC,IAAoB,KAAK,UAAUD,EAAMC,CAAO,EAC1E,WAAaD,GAAiB,KAAK,WAAWA,CAAI,EAClD,UAAYA,GAAiB,KAAK,UAAUA,CAAI,EAChD,aAAeA,GAAiB,KAAK,aAAaA,CAAI,CAAA,EAIxD,GAAI,CACF,cAAe,CAACE,EAAcC,EAAeC,IAC3C,KAAK,cAAcT,EAAUO,EAAMC,EAAOC,CAAQ,EACpD,iBAAmBC,GACjB,KAAK,iBAAiBV,EAAUU,CAAO,EACzC,cAAgBC,GAAa,KAAK,cAAcX,EAAUW,CAAG,EAC7D,aAAc,CAACC,EAAYC,IAAc,KAAK,aAAab,EAAUY,EAAIC,CAAI,EAC7E,mBAAqBC,GAOf,KAAK,mBAAmBd,EAAUc,CAAI,EAC5C,eAAiBA,GAIX,KAAK,eAAed,EAAUc,CAAI,EACxC,gBAAkBC,GAAqB,KAAK,gBAAgBA,CAAO,EACnE,oBAAsBD,GAKhB,KAAK,oBAAoBA,CAAI,EACnC,uBAAyBF,GAAe,KAAK,uBAAuBA,CAAE,CAAA,EAIxE,OAAQ,CACN,GAAI,CAACtB,EAAemB,IAAuC,KAAK,GAAGnB,EAAOmB,CAAQ,EAClF,IAAK,CAACnB,EAAemB,IAAuC,KAAK,IAAInB,EAAOmB,CAAQ,EACpF,KAAM,CAACnB,KAAkBG,IAAgB,KAAK,KAAKH,EAAO,GAAGG,CAAI,CAAA,EAInE,SAAU,CACR,IAAK,CAACuB,EAAaC,IAAuB,KAAK,WAAWjB,EAAUgB,EAAKC,CAAY,EACrF,IAAK,CAACD,EAAaE,IAAe,KAAK,WAAWlB,EAAUgB,EAAKE,CAAK,EACtE,OAAQ,IAAM,KAAK,eAAelB,CAAQ,CAAA,EAI5C,GAAI,CACF,KAAOmB,GAAoB,KAAK,OAAOA,CAAO,EAC9C,UAAYb,GAAoB,KAAK,YAAYA,CAAO,EACxD,UAAW,CAACA,EAAiBc,IAAuB,KAAK,YAAYd,EAASc,CAAU,CAAA,EAI1F,MAAO,CACL,SAAU,CAACC,EAAgBC,IAAiB,KAAK,SAASD,EAAMC,CAAI,EACpE,SAAU,CAACD,EAAgBC,IAAiB,KAAK,SAASD,EAAMC,CAAI,EACpE,WAAY,IAAM,KAAK,WAAA,CAAW,EAIpC,SAAU,KAAK,eAAA,EAGjB,YAAK,WAAW,IAAItB,EAAUI,CAAG,EAC1BA,CACT,CAKA,MAAc,kBAAkBH,EAAgC,CAC9D,UAAWsB,KAAOtB,EAAO,aACvB,GAAI,CAAC,KAAK,eAAe,IAAIsB,CAAG,EAC9B,MAAM,IAAI,MAAM,UAAUtB,EAAO,EAAE,eAAesB,CAAG,uBAAuB,CAGlF,CAGA,MAAc,SAASlB,EAA+B,CAEpD,MAAO,EACT,CAEA,MAAc,UAAUA,EAAcC,EAAgC,CAEtE,CAEA,MAAc,WAAWD,EAA6B,CAEtD,CAEA,MAAc,UAAUA,EAAiC,CAEvD,MAAO,CAAA,CACT,CAEA,MAAc,aAAaA,EAA6B,CAExD,CAGQ,cAAcL,EAAkBO,EAAcC,EAAeC,EAA4B,CAEjG,CAEQ,iBAAiBT,EAAkBU,EAA4B,CAEvE,CAEQ,cAAcV,EAAkBW,EAAgB,CAExD,CAEQ,aAAaX,EAAkBY,EAAYC,EAAiB,CAEpE,CAEQ,mBAAmBb,EAAkBc,EAOpC,CACP,QAAQ,IAAI,4BAA6BA,CAAI,EACzC,KAAK,iBAAmB,KAAK,gBAAgB,aAC/C,KAAK,gBAAgB,YAAY,IAAI,CACnC,GAAIA,EAAK,GACT,KAAMA,EAAK,KACX,KAAMA,EAAK,KACX,UAAWA,EAAK,UAChB,UAAWA,EAAK,WAAa,MAC7B,QAASA,EAAK,OAAA,CACf,CAEL,CAEQ,eAAed,EAAkBc,EAIhC,CACP,QAAQ,IAAI,uBAAwBA,CAAI,EACpC,KAAK,iBAAmB,KAAK,gBAAgB,SAC/C,KAAK,gBAAgB,QAAQ,IAAI,CAC/B,GAAIA,EAAK,GACT,KAAMA,EAAK,KACX,OAAQA,EAAK,MAAA,CACd,CAEL,CAEQ,gBAAgBC,EAAwB,CAC9C,QAAQ,IAAI,qCAAqCA,CAAO,EAAE,EACtD,KAAK,iBAAmB,KAAK,gBAAgB,QAC/C,KAAK,gBAAgB,OAAO,gBAAgBA,CAAO,CAEvD,CAEQ,oBAAoBD,EAKnB,CACP,QAAQ,IAAI,6BAA8BA,CAAI,EAC1C,KAAK,iBAAmB,KAAK,gBAAgB,cAC/C,KAAK,gBAAgB,aAAa,IAAI,CACpC,GAAIA,EAAK,GACT,KAAMA,EAAK,KACX,KAAMA,EAAK,KACX,OAAQA,EAAK,MAAA,CACd,CAEL,CAEQ,uBAAuBF,EAAkB,CAC/C,QAAQ,IAAI,kCAAkCA,CAAE,EAAE,EAC9C,KAAK,iBAAmB,KAAK,gBAAgB,cAC/C,KAAK,gBAAgB,aAAa,WAAWA,CAAE,CAEnD,CAGQ,WAAWZ,EAAkBgB,EAAaC,EAAyB,CACzE,MAAMO,EAAW,KAAK,eAAe,IAAIxB,CAAQ,GAAK,CAAA,EACtD,OAAOwB,EAASR,CAAG,IAAM,OAAYQ,EAASR,CAAG,EAAIC,CACvD,CAEQ,WAAWjB,EAAkBgB,EAAaE,EAAkB,CAClE,MAAMM,EAAW,KAAK,eAAe,IAAIxB,CAAQ,GAAK,CAAA,EACtDwB,EAASR,CAAG,EAAIE,EAChB,KAAK,eAAe,IAAIlB,EAAUwB,CAAQ,CAC5C,CAEQ,eAAexB,EAAuB,CAC5C,OAAO,KAAK,eAAe,IAAIA,CAAQ,GAAK,CAAA,CAC9C,CAGA,MAAc,OAAOmB,EAAkC,CAErD,MAAO,EACT,CAEA,MAAc,YAAYb,EAAkC,CAE1D,MAAO,EACT,CAEA,MAAc,YAAYA,EAAiBc,EAAqC,CAE9E,MAAO,EACT,CAGQ,SAASC,EAAgBC,EAAwB,CACvD,IAAIG,EACJ,OAAO,YAA6BhC,EAAa,CAC/C,MAAMiC,EAAQ,IAAM,CAClB,aAAaD,CAAO,EACpBJ,EAAK,GAAG5B,CAAI,CACd,EACA,aAAagC,CAAO,EACpBA,EAAU,WAAWC,EAAOJ,CAAI,CAClC,CACF,CAEQ,SAASD,EAAgBC,EAAwB,CACvD,IAAIK,EACJ,OAAO,YAAwClC,EAAa,CACrDkC,IACHN,EAAK,MAAM,KAAM5B,CAAI,EACrBkC,EAAa,GACb,WAAW,IAAMA,EAAa,GAAOL,CAAI,EAE7C,CACF,CAEQ,YAAqB,CAC3B,OAAO,KAAK,SAAS,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAC/C,CAKA,eAA2B,CACzB,OAAO,MAAM,KAAK,KAAK,QAAQ,QAAQ,CACzC,CAKA,mBAA+B,CAC7B,OAAO,MAAM,KAAK,KAAK,cAAc,EAAE,IAAIV,GAAM,KAAK,QAAQ,IAAIA,CAAE,CAAE,CACxE,CAKA,gBAAgBZ,EAA4C,CAC1D,OAAO,KAAK,QAAQ,IAAIA,CAAQ,GAAG,MACrC,CAKA,UAAUA,EAAuC,CAC/C,OAAO,KAAK,QAAQ,IAAIA,CAAQ,CAClC,CACF,CCzaA,MAAMJ,CAAa,CACP,OAAwC,CAAA,EAElD,GAAGN,EAAeC,EAAoB,CAC/B,KAAK,OAAOD,CAAK,IACpB,KAAK,OAAOA,CAAK,EAAI,CAAA,GAEvB,KAAK,OAAOA,CAAK,EAAE,KAAKC,CAAQ,CAClC,CAEA,IAAID,EAAeC,EAAoB,CACrC,GAAI,CAAC,KAAK,OAAOD,CAAK,EAAG,OACzB,MAAME,EAAQ,KAAK,OAAOF,CAAK,EAAE,QAAQC,CAAQ,EAC7CC,EAAQ,IACV,KAAK,OAAOF,CAAK,EAAE,OAAOE,EAAO,CAAC,CAEtC,CAEA,KAAKF,KAAkBG,EAAa,CAC7B,KAAK,OAAOH,CAAK,GACtB,KAAK,OAAOA,CAAK,EAAE,QAAQC,GAAY,CACrC,GAAI,CACFA,EAAS,GAAGE,CAAI,CAClB,OAASC,EAAO,CACd,QAAQ,MAAM,wBAAyBA,CAAK,CAC9C,CACF,CAAC,CACH,CACF,CAGO,MAAekC,UAAkBhC,CAAa,CACzC,iBAAuF,CAAA,EACvF,oBAA6C,CAAA,EAEvD,cAAcN,EAAkB,CAE9B,KAAK,iBAAiB,KAAKA,CAAK,CAClC,CAEA,iBAAiBoB,EAAkBmB,EAActC,EAA0B,CACzE,MAAMuC,EAAgBvC,EACtBmB,EAAQ,iBAAiBmB,EAAMC,CAAa,EAC5C,KAAK,iBAAiB,KAAK,CAAE,QAAApB,EAAS,KAAAmB,EAAM,SAAUC,EAAe,CACvE,CAEA,iBAAiBC,EAAgC,CAC/C,KAAK,oBAAoB,KAAKA,CAAQ,CACxC,CAEA,SAAgB,CAEd,KAAK,iBAAiB,QAAQ,CAAC,CAAE,QAAArB,EAAS,KAAAmB,EAAM,SAAAtC,KAAe,CAC7DmB,EAAQ,oBAAoBmB,EAAMtC,CAAQ,CAC5C,CAAC,EACD,KAAK,iBAAmB,CAAA,EAGxB,KAAK,oBAAoB,QAAQwC,GAAY,cAAcA,CAAQ,CAAC,EACpE,KAAK,oBAAsB,CAAA,EAG3B,KAAK,OAAS,CAAA,CAChB,CACF,CAiBA,YAAY,UAAU,QAAU,SAASC,EAAc,CACrD,KAAK,YAAcA,CACrB,EAEA,YAAY,UAAU,MAAQ,UAAW,CACvC,KAAK,UAAY,EACnB,EAEA,YAAY,UAAU,UAAY,SAASC,EAA2C,CACpF,MAAMC,EAAM,SAAS,cAAc,KAAK,EACxC,OAAID,GAAS,MACXC,EAAI,UAAYD,EAAQ,KAEtBA,GAAS,OACXC,EAAI,YAAcD,EAAQ,MAE5B,KAAK,YAAYC,CAAG,EACbA,CACT,EAEA,YAAY,UAAU,SAAW,SAC/BC,EACAF,EAC0B,CAC1B,MAAMvB,EAAU,SAAS,cAAcyB,CAAG,EAC1C,OAAIF,GAAS,MACXvB,EAAQ,UAAYuB,EAAQ,KAE1BA,GAAS,OACXvB,EAAQ,YAAcuB,EAAQ,MAE5BA,GAAS,OACVvB,EAA6B,KAAOuB,EAAQ,MAE3CA,GAAS,MACX,OAAO,QAAQA,EAAQ,IAAI,EAAE,QAAQ,CAAC,CAACjB,EAAKE,CAAK,IAAM,CACrDR,EAAQ,aAAaM,EAAKE,CAAK,CACjC,CAAC,EAEH,KAAK,YAAYR,CAAO,EACjBA,CACT,EAEA,YAAY,UAAU,aAAe,SAAS0B,EAAsC,CAClF,OAAO,OAAO,KAAK,MAAOA,CAAM,CAClC,EAGO,MAAeC,UAAeT,CAAU,CACtC,IACA,SAEP,YAAYU,EAAUxC,EAA2B,CAC/C,MAAA,EACA,KAAK,IAAMwC,EACX,KAAK,SAAWxC,CAClB,CAMA,cAAcS,EAAcC,EAAeC,EAAiD,CAC1F,OAAO,KAAK,IAAI,GAAG,cAAcF,EAAMC,EAAOC,CAAQ,CACxD,CAEA,kBAAgC,CAC9B,OAAO,KAAK,IAAI,GAAG,iBAAA,CACrB,CAEA,WAAW8B,EAA2B,CACpC,OAAO,KAAK,IAAI,SAAS,WAAWA,CAAO,CAC7C,CAEA,cAAcC,EAAyB,CACrC,KAAK,IAAI,SAAS,cAAcA,CAAS,CAC3C,CAEA,cAAcC,EAAoC,CAChD,KAAK,IAAI,SAAS,cAAcA,CAAU,CAC5C,CAEA,aAAaZ,EAAca,EAAgC,CACzD,KAAK,IAAI,UAAU,aAAab,EAAMa,CAAW,CACnD,CAEA,8BAA8BC,EAAsCC,EAA2C,CAC7G,OAAO,KAAK,IAAI,OAAO,8BAA8BD,EAAeC,CAAS,CAC/E,CAEA,mCACEC,EACAC,EACAF,EACuB,CACvB,OAAO,KAAK,IAAI,OAAO,mCAAmCC,EAAUC,EAASF,CAAS,CACxF,CAEA,UAAyB,CACvB,OAAO,KAAK,IAAI,QAAQ,SAAS,KAAK,SAAS,EAAE,CACnD,CAEA,SAASG,EAA0B,CACjC,OAAO,KAAK,IAAI,QAAQ,SAAS,KAAK,SAAS,GAAIA,CAAI,CACzD,CACF,CAgRO,MAAMC,UAAwCpD,CAAa,CACxD,YAAoC,IACpC,eAA0C,IAC1C,mBAAkC,IAClC,mBAAuC,IACvC,gBACA,IAER,YAAYC,EAAuB,CACjC,MAAA,EACA,KAAK,gBAAkBA,EACvB,KAAK,IAAM,KAAK,UAAA,CAClB,CAKQ,WAAiB,CACvB,MAAO,CACL,OAAQ,KAAK,aAAA,EACb,MAAO,KAAK,YAAA,EACZ,UAAW,KAAK,gBAAA,EAChB,MAAO,KAAK,YAAA,EACZ,cAAe,KAAK,oBAAA,EACpB,YAAa,KAAK,kBAAA,EAClB,GAAI,KAAK,SAAA,EACT,SAAU,KAAK,eAAA,EACf,SAAU,KAAK,eAAA,EACf,QAAS,KAAK,cAAA,EACd,OAAQ,KAAK,aAAA,EACb,UAAW,KACX,iBAAmBmB,GAAgB,KAAK,iBAAiBA,CAAG,EAC5D,iBAAkB,CAACA,EAAa+B,IAAyB,KAAK,iBAAiB/B,EAAK+B,CAAI,EACxF,SAAU,KAAK,eAAA,CAEnB,CAKA,MAAM,uBAAuBjD,EAA2BI,EAAiF,CACvI,MAAMF,EAAWF,EAAS,GAE1B,GAAI,KAAK,QAAQ,IAAIE,CAAQ,EAC3B,MAAM,IAAI,MAAM,UAAUA,CAAQ,wBAAwB,EAG5D,GAAI,CAEF,MAAMiD,EAAiB,IAAI/C,EAAY,KAAK,IAAKJ,CAAQ,EAEnDG,EAAkB,CACtB,GAAID,EACJ,KAAMF,EAAS,KACf,QAASA,EAAS,QAClB,YAAaA,EAAS,YACtB,OAAQA,EAAS,OACjB,aAAcA,EAAS,cAAgB,CAAA,EACvC,OAAQV,EAAa,WACrB,SAAAU,EACA,SAAUmD,EACV,IAAK,IAAA,EAGP,KAAK,QAAQ,IAAIjD,EAAUC,CAAM,EACjC,KAAK,KAAK,mBAAoBA,CAAM,EAEpC,QAAQ,IAAI,8BAA8BD,CAAQ,0BAA0B,CAC9E,OAASN,EAAO,CACd,cAAQ,MAAM,6BAA6BM,CAAQ,IAAKN,CAAK,EACvDA,CACR,CACF,CAKA,MAAM,qBAAqBM,EAAiC,CAC1D,MAAMC,EAAS,KAAK,QAAQ,IAAID,CAAQ,EACxC,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,UAAUD,CAAQ,YAAY,EAGhD,GAAI,MAAK,eAAe,IAAIA,CAAQ,EAKpC,OAAM,KAAK,kBAAkBC,CAAM,EAEnC,GAAI,CACF,MAAMgD,EAAiBhD,EAAO,SAG1BgD,EAAe,QACjB,MAAMA,EAAe,OAAA,EAGvBhD,EAAO,OAASb,EAAa,QAC7B,KAAK,eAAe,IAAIY,CAAQ,EAChC,KAAK,KAAK,gBAAiBC,CAAM,EAEjC,QAAQ,IAAI,8BAA8BD,CAAQ,uBAAuB,CAC3E,OAASN,EAAO,CACd,MAAAO,EAAO,OAASb,EAAa,MAC7B,KAAK,KAAK,cAAea,EAAQP,CAAK,EACtC,QAAQ,MAAM,2BAA2BM,CAAQ,IAAKN,CAAK,EACrDA,CACR,EACF,CAKA,MAAM,sBAAsBM,EAAiC,CAC3D,MAAMC,EAAS,KAAK,QAAQ,IAAID,CAAQ,EACxC,GAAI,GAACC,GAAU,CAAC,KAAK,eAAe,IAAID,CAAQ,GAIhD,GAAI,CACF,MAAMiD,EAAiBhD,EAAO,SAG1BgD,EAAe,UACjB,MAAMA,EAAe,SAAA,EAIvBA,EAAe,QAAA,EAEfhD,EAAO,OAASb,EAAa,WAC7B,KAAK,eAAe,OAAOY,CAAQ,EACnC,KAAK,KAAK,iBAAkBC,CAAM,EAElC,QAAQ,IAAI,8BAA8BD,CAAQ,wBAAwB,CAC5E,OAASN,EAAO,CACd,WAAK,KAAK,cAAeO,EAAQP,CAAK,EACtC,QAAQ,MAAM,4BAA4BM,CAAQ,IAAKN,CAAK,EACtDA,CACR,CACF,CAGQ,cAAuB,CAC7B,MAAO,CACL,aAAc,IAAM,KAAK,YAAA,CAAY,CAEzC,CAEQ,aAAqB,CAC3B,MAAO,CACL,KAAM,CAAA,EACN,OAAQ,IAAA,CAEZ,CAEQ,iBAA6B,CACnC,MAAO,CACL,cAAgBe,GAAyB,CAEvC,WAAWA,EAAU,GAAG,CAC1B,EACA,WAAaA,GAAoC,CAC/C,KAAK,GAAG,YAAaA,CAAQ,CAC/B,EACA,YAAcA,GAAoC,CAChD,KAAK,GAAG,aAAcA,CAAQ,CAChC,EACA,mBAAqBA,GAA4C,CAC/D,KAAK,GAAG,cAAeA,CAAQ,CACjC,EACA,cAAe,IAAM,KACrB,cAAe,IAAM,KACrB,gBAAkBoB,GAAiB,CAAA,EACnC,aAAc,MAAOqB,EAAkBC,EAAgBC,IAAsB,CAE7E,EACA,SAAU,MAAOC,EAAaD,IAAsB,CAEpD,EACA,aAAc,CAACvB,EAAca,IAA6B,CAE1D,EACA,wBAAyB,CAAC9B,EAAY0C,IAA0B,CAEhE,EACA,mBAAoB,CAACC,EAAsBC,IAAqB,CAEhE,CAAA,CAEJ,CAEQ,aAAqB,CAC3B,MAAO,CACL,KAAM,MAAOH,GAEJ,GAET,MAAO,MAAOA,EAAaN,IAAiB,CAE5C,EACA,OAAQ,MAAO1C,EAAc0C,KAEpB,CAAA,GAET,OAAQ,MAAOM,GAAgB,CAE/B,EACA,OAAQ,MAAOA,EAAaI,IAAoB,CAEhD,EACA,sBAAwBpD,GAAiB,KACzC,SAAU,IAAM,CAAA,EAChB,iBAAkB,IAAM,CAAA,EACxB,aAAc,MAAOA,IAEZ,CAAA,GAET,OAASA,GAAiB,EAAA,CAE9B,CAEQ,qBAAqC,CAC3C,MAAO,CACL,aAAegD,GAAgB,KAC/B,qBAAsB,CAACK,EAAkBC,IAAuB,KAChE,oBAAsBN,GAAgB,KACtC,uBAAyBA,GAAgB,KACzC,UAAY5C,GAAyE,CACnF,KAAK,GAAG,mBAAoBA,CAAQ,CACtC,CAAA,CAEJ,CAEQ,mBAAiC,CACvC,MAAO,CACL,sBAAuB,MAAOmD,EAAkBC,KAEvC,CAAA,GAET,WAAY,MAAOR,GAAgB,CAEnC,EACA,WAAY,MAAOA,EAAaI,IAAoB,CAEpD,EACA,SAAU,MAAOJ,EAAaI,KAErB,CAAA,EACT,CAEJ,CAEQ,UAAe,CACrB,MAAO,CACL,cAAe,CAAClD,EAAcC,EAAeC,IAAuC,CAElF,GAAI,KAAK,iBAAmB,KAAK,gBAAgB,YAC/C,GAAI,CAEF,MAAMqD,EAAS,mBAAmB,KAAK,IAAA,CAAK,IAAI,KAAK,OAAA,EAAS,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAAC,GAGvF,KAAK,gBAAgB,YAAY,IAAI,CACnC,GAAIA,EACJ,KAAMtD,EACN,UAAW,MACX,UAAW,GACX,KAAAD,EACA,QAAS,IAAM,CACb,QAAQ,IAAI,4CAA4CC,CAAK,EAAE,EAC/D,GAAI,CACFC,EAAS,CAAA,CAAS,CACpB,OAASf,EAAO,CACd,QAAQ,MAAM,6BAA8BA,CAAK,CACnD,CACF,CAAA,CACD,EAGD,MAAMgB,EAAU,SAAS,cAAc,KAAK,EAC5C,OAAAA,EAAQ,UAAYH,EACpBG,EAAQ,MAAQF,EAChBE,EAAQ,GAAKoD,EACbpD,EAAQ,MAAM,QAAU,OACxB,SAAS,KAAK,YAAYA,CAAO,EAEjC,QAAQ,IAAI,wCAAwCF,CAAK,KAAKsD,CAAM,GAAG,EAChEpD,CACT,OAAShB,EAAO,CACd,QAAQ,MAAM,6CAA8CA,CAAK,EAEjE,MAAMgB,EAAU,SAAS,cAAc,KAAK,EAC5C,OAAAA,EAAQ,UAAYH,EACpBG,EAAQ,MAAQF,EAChBE,EAAQ,QAAUD,EACXC,CACT,KACK,CACL,QAAQ,KAAK,wDAAwD,EAErE,MAAMA,EAAU,SAAS,cAAc,KAAK,EAC5C,OAAAA,EAAQ,UAAYH,EACpBG,EAAQ,MAAQF,EAChBE,EAAQ,QAAUD,EACXC,CACT,CACF,EACA,iBAAkB,IAAM,CAEtB,GAAI,KAAK,iBAAmB,KAAK,gBAAgB,UAC/C,GAAI,CAEF,MAAMqD,EAAS,mBAAmB,KAAK,IAAA,CAAK,IAAI,KAAK,OAAA,EAAS,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAAC,GAGvF,KAAK,gBAAgB,UAAU,IAAI,CACjC,GAAIA,EACJ,KAAM,yBACN,OAAQ,IAECC,EAAM,cAAc,MAAO,CAChC,GAAID,EACJ,MAAO,CACL,QAAS,OACT,WAAY,SACZ,QAAS,QACT,SAAU,OACV,MAAO,6BAAA,CACT,EACC,eAAe,CACpB,CACD,EAED,QAAQ,IAAI,4BAA4BA,CAAM,EAAE,EAGhD,MAAME,EAAc,SAAS,cAAc,KAAK,EAChD,OAAAA,EAAY,MAAM,QAAU,OACrBA,CACT,OAASvE,EAAO,CACd,QAAQ,MAAM,iCAAkCA,CAAK,EAErD,MAAMuE,EAAc,SAAS,cAAc,KAAK,EAChD,OAAAA,EAAY,MAAM,QAAU,OACrBA,CACT,KACK,CACL,QAAQ,KAAK,sDAAsD,EAEnE,MAAMA,EAAc,SAAS,cAAc,KAAK,EAChD,OAAAA,EAAY,MAAM,QAAU,OACrBA,CACT,CACF,EACA,cAAgBtD,GAA0B,CAE1C,CAAA,CAEJ,CAEQ,gBAA2B,CACjC,MAAO,CACL,WAAa4B,GAEJA,EAET,cAAgBC,GAAsB,CAEtC,EACA,mBAAqBA,GAEZ,EACT,CAEJ,CAEQ,gBAA2B,CACjC,MAAO,CACL,cAAgB7B,GAA0B,CAE1C,EACA,WAAaK,GAEJ,KAET,WAAY,CAACA,EAAaE,IAAe,CAEzC,CAAA,CAEJ,CAEQ,eAAyB,CAC/B,MAAO,CACL,SAAU,MAAOlB,GAER,KAAK,eAAe,IAAIA,CAAQ,GAAK,CAAA,EAE9C,SAAU,MAAOA,EAAkB+C,IAAc,CAE/C,KAAK,eAAe,IAAI/C,EAAU+C,CAAI,CACxC,CAAA,CAEJ,CAEQ,cAAuB,CAC7B,MAAO,CACL,8BAA+B,CAACJ,EAAsCC,IAE7DD,EAET,mCAAoC,CAClCE,EACAC,EACAF,KAGO,CAAA,GAET,wBAA0BsB,GAAmB,CAE7C,CAAA,CAEJ,CAEQ,iBAAiBlD,EAAyB,CAChD,GAAI,CACF,MAAM+B,EAAO,aAAa,QAAQ/B,CAAG,EACrC,OAAO+B,EAAO,KAAK,MAAMA,CAAI,EAAI,IACnC,OAASrD,EAAO,CACd,eAAQ,MAAM,oCAAqCA,CAAK,EACjD,IACT,CACF,CAEQ,iBAAiBsB,EAAa+B,EAA4B,CAChE,GAAI,CACEA,IAAS,KACX,aAAa,WAAW/B,CAAG,EAE3B,aAAa,QAAQA,EAAK,KAAK,UAAU+B,CAAI,CAAC,CAElD,OAASrD,EAAO,CACd,QAAQ,MAAM,kCAAmCA,CAAK,CACxD,CACF,CAKA,MAAc,kBAAkBO,EAAgC,CAC9D,UAAWsB,KAAOtB,EAAO,aACvB,GAAI,CAAC,KAAK,eAAe,IAAIsB,CAAG,EAC9B,MAAM,IAAI,MAAM,UAAUtB,EAAO,EAAE,eAAesB,CAAG,uBAAuB,CAGlF,CAKA,eAA2B,CACzB,OAAO,MAAM,KAAK,KAAK,QAAQ,QAAQ,CACzC,CAKA,mBAA+B,CAC7B,OAAO,MAAM,KAAK,KAAK,cAAc,EAAE,IAAIX,GAAM,KAAK,QAAQ,IAAIA,CAAE,CAAE,CACxE,CAKA,gBAAgBZ,EAA4C,CAC1D,OAAO,KAAK,QAAQ,IAAIA,CAAQ,GAAG,MACrC,CAKA,UAAUA,EAAuC,CAC/C,OAAO,KAAK,QAAQ,IAAIA,CAAQ,CAClC,CAKA,QAAc,CACZ,OAAO,KAAK,GACd,CACF,CCx7BO,MAAMmE,CAAkC,CACrC,IAAyB,KAEjC,MAAM,OAAO/D,EAAiB,CAC5B,KAAK,IAAMA,EAEX,QAAQ,IAAI,iCAAiC,EAG7C,KAAK,kBAAA,EAGL,WAAW,IAAM,CACf,KAAK,sBAAA,CACP,EAAG,GAAI,CACT,CAEQ,SAAW,CACjB,CACE,GAAI,aACJ,KAAM,aACN,IAAK,+BACL,KAAM,KACN,YAAa,WAAA,EAEf,CACE,GAAI,aACJ,KAAM,cACN,IAAK,mCACL,KAAM,KACN,YAAa,WAAA,EAEf,CACE,GAAI,SACJ,KAAM,kBACN,IAAK,mCACL,KAAM,KACN,YAAa,aAAA,CACf,EAGM,UAAyC,CAAA,EAEzC,mBAAoB,CAE1B,KAAK,UAAY,CACf,WAAY,CACV,CACE,GAAI,MACJ,MAAO,yBACP,KAAM,yCACN,YAAa,yCACb,QAAS,IAAI,KAAK,KAAK,IAAA,EAAQ,KAAc,GAAI,EAAE,YAAA,EACnD,OAAQ,YAAA,EAEV,CACE,GAAI,MACJ,MAAO,cACP,KAAM,0CACN,YAAa,oCACb,QAAS,IAAI,KAAK,KAAK,IAAA,EAAQ,MAAc,GAAI,EAAE,YAAA,EACnD,OAAQ,YAAA,CACV,EAEF,WAAY,CACV,CACE,GAAI,MACJ,MAAO,mBACP,KAAM,4CACN,YAAa,oCACb,QAAS,IAAI,KAAK,KAAK,IAAA,EAAQ,KAAc,GAAI,EAAE,YAAA,EACnD,OAAQ,YAAA,EAEV,CACE,GAAI,MACJ,MAAO,oBACP,KAAM,2CACN,YAAa,oCACb,QAAS,IAAI,KAAK,KAAK,IAAA,EAAQ,MAAc,GAAI,EAAE,YAAA,EACnD,OAAQ,YAAA,CACV,EAEF,OAAQ,CACN,CACE,GAAI,MACJ,MAAO,4BACP,KAAM,yCACN,YAAa,qCACb,QAAS,IAAI,KAAK,KAAK,IAAA,EAAQ,IAAS,GAAK,GAAI,EAAE,YAAA,EACnD,OAAQ,QAAA,EAEV,CACE,GAAI,MACJ,MAAO,wCACP,KAAM,kDACN,YAAa,2CACb,QAAS,IAAI,KAAK,KAAK,IAAA,EAAQ,IAAS,GAAK,GAAI,EAAE,YAAA,EACnD,OAAQ,QAAA,CACV,CACF,CAEJ,CAEQ,uBAAwB,CAO9B,GANA,QAAQ,IAAI,+CAA+C,EAC3D,QAAQ,IAAI,6BAA8B,CAAC,CAAC,KAAK,GAAG,EACpD,QAAQ,IAAI,gCAAiC,CAAC,CAAC,KAAK,KAAK,EAAE,EAC3D,QAAQ,IAAI,4CAA6C,CAAC,CAAC,KAAK,KAAK,IAAI,kBAAkB,EAGvF,KAAK,KAAO,KAAK,IAAI,IAAM,KAAK,IAAI,GAAG,mBACzC,GAAI,CACF,QAAQ,IAAI,yDAAyD,EACrE,KAAK,IAAI,GAAG,mBAAmB,CAC7B,GAAI,aACJ,KAAM,UACN,KAAM,MACN,UAAW,EACX,UAAW,MACX,QAAS,IAAM,CACb,QAAQ,IAAI,uCAAuC,EACnD,KAAK,eAAA,CACP,CAAA,CACD,EACD,QAAQ,IAAI,sDAAsD,EAG9D,KAAK,IAAI,UAAY,KAAK,IAAI,SAAS,aACzC,KAAK,IAAI,SAAS,YAAY,QAASU,GAAc,CACnD,QAAQ,IAAI,gDAAiDA,CAAI,EAC7DA,GAAQA,EAAK,KAAO,eACtB,QAAQ,IAAI,+CAA+C,EAC3D,KAAK,eAAA,EAET,CAAC,CAEL,OAASpB,EAAO,CACd,QAAQ,MAAM,uDAAwDA,CAAK,EAE3E,KAAK,4BAAA,CACP,MAEA,QAAQ,IAAI,+DAA+D,EAC3E,KAAK,4BAAA,CAET,CAEQ,6BAA8B,CAEpC,MAAM0E,EAAc,SAAS,cAAc,6BAA6B,GACrD,SAAS,cAAc,cAAc,GACrC,SAAS,cAAc,qBAAqB,GAC5C,SAAS,cAAc,wBAAwB,GAC/C,SAAS,cAAc,wBAAwB,GAC/C,SAAS,cAAc,4BAA4B,EAEtE,GAAIA,EAAa,CACf,QAAQ,IAAI,kCAAmCA,CAAW,EAE1D,MAAMC,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAY,KACpBA,EAAQ,MAAQ,UAChBA,EAAQ,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAcxBA,EAAQ,YAAc,IAAM,CAC1BA,EAAQ,MAAM,gBAAkB,0BAClC,EAEAA,EAAQ,WAAa,IAAM,CACzBA,EAAQ,MAAM,gBAAkB,aAClC,EAEAA,EAAQ,QAAU,IAAM,CACtB,QAAQ,IAAI,sCAAsC,EAClD,KAAK,eAAA,CACP,EAGA,MAAMC,EAAYF,EAAY,cAAc,kCAAkC,EAC1EE,EACFF,EAAY,aAAaC,EAASC,CAAS,EAE3CF,EAAY,YAAYC,CAAO,EAGjC,QAAQ,IAAI,+DAA+D,CAC7E,MACE,QAAQ,IAAI,iDAAiD,EAC7D,WAAW,IAAM,KAAK,4BAAA,EAA+B,GAAI,CAE7D,CAEA,MAAM,UAAW,CACf,QAAQ,IAAI,qBAAqB,CACnC,CAEQ,gBAAiB,CAIvB,GAHA,QAAQ,IAAI,mCAAmC,EAG3C,KAAK,KAAO,KAAK,IAAI,UAAY,KAAK,IAAI,SAAS,QACrD,GAAI,CACF,QAAQ,IAAI,iDAAiD,EAC7D,KAAK,IAAI,SAAS,QAAQ,IAAI,CAC5B,GAAI,cACJ,KAAM,UACN,OAAQ,IAAM,CACZ,QAAQ,IAAI,2CAA2C,EAEvD,MAAM/D,EAAU0D,EAAM,cAAc,MAAO,CACzC,MAAO,CACL,OAAQ,OACR,QAAS,OACT,cAAe,SACf,gBAAiB,UACjB,MAAO,SAAA,CACT,EACC,CAEDA,EAAM,cAAc,MAAO,CACzB,IAAK,SACL,MAAO,CACL,QAAS,YACT,aAAc,oBACd,WAAY,OACZ,SAAU,MAAA,CACZ,EACC,YAAY,EAGfA,EAAM,cAAc,MAAO,CACzB,IAAK,QACL,MAAO,CACL,KAAM,EACN,UAAW,OACX,QAAS,OAAA,CACX,EACC,KAAK,SAAS,IAAIO,GACnBP,EAAM,cAAc,MAAO,CACzB,IAAKO,EAAK,GACV,MAAO,CACL,QAAS,WACT,OAAQ,UACR,WAAY,wBACZ,aAAc,mBAAA,EAEhB,YAAcC,GAAW,CACvBA,EAAE,OAAO,MAAM,gBAAkB,SACnC,EACA,WAAaA,GAAW,CACtBA,EAAE,OAAO,MAAM,gBAAkB,aACnC,EACA,QAAS,IAAM,CACb,KAAK,uBAAuBD,CAAI,CAClC,CAAA,EACC,CACDP,EAAM,cAAc,MAAO,CACzB,IAAK,UACL,MAAO,CACL,QAAS,OACT,WAAY,SACZ,IAAK,KAAA,CACP,EACC,CACDA,EAAM,cAAc,OAAQ,CAC1B,IAAK,OACL,MAAO,CAAE,SAAU,MAAA,CAAO,EACzBO,EAAK,IAAI,EACZP,EAAM,cAAc,MAAO,CACzB,IAAK,OACL,MAAO,CAAE,KAAM,CAAA,CAAE,EAChB,CACDA,EAAM,cAAc,MAAO,CACzB,IAAK,OACL,MAAO,CACL,WAAY,MACZ,aAAc,KAAA,CAChB,EACCO,EAAK,IAAI,EACZP,EAAM,cAAc,MAAO,CACzB,IAAK,OACL,MAAO,CACL,SAAU,OACV,MAAO,WAAA,CACT,EACCO,EAAK,WAAW,CAAA,CACpB,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CACF,EACD,eAAQ,IAAI,sDAAsD,EAC3DjE,CACT,CAAA,CACD,EACD,QAAQ,IAAI,qDAAqD,EAGjE,KAAK,IAAI,SAAS,QAAQ,WAAW,aAAa,EAClD,QAAQ,IAAI,wCAAwC,CACtD,OAASZ,EAAO,CACd,QAAQ,MAAM,sDAAuDA,CAAK,EAC1E,KAAK,qBAAA,CACP,MAEA,QAAQ,IAAI,oEAAoE,EAChF,QAAQ,IAAI,6BAA8B,CAAC,CAAC,KAAK,GAAG,EACpD,QAAQ,IAAI,kCAAmC,CAAC,CAAC,KAAK,KAAK,QAAQ,EACnE,QAAQ,IAAI,iCAAkC,CAAC,CAAC,KAAK,KAAK,UAAU,OAAO,EAC3E,KAAK,qBAAA,CAET,CAEQ,sBAAuB,CAE7B,MAAM+E,EAAiB,KAAK,iBAAA,EAGtBC,EAAU,SAAS,cAAc,yBAAyB,GACjD,SAAS,cAAc,UAAU,GACjC,SAAS,cAAc,oBAAoB,GAC3C,SAAS,cAAc,sBAAsB,EAExDA,GAEFA,EAAQ,UAAY,GACpBA,EAAQ,YAAYD,CAAc,EAClC,QAAQ,IAAI,2CAA2C,GAEvD,QAAQ,IAAI,+BAA+B,CAE/C,CAEQ,kBAAmB,CACzB,MAAME,EAAY,SAAS,cAAc,KAAK,EAC9CA,EAAU,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAS1B,MAAMC,EAAS,SAAS,cAAc,KAAK,EAC3CA,EAAO,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,MAMvBA,EAAO,UAAY,aACnBD,EAAU,YAAYC,CAAM,EAG5B,MAAMC,EAAiB,SAAS,cAAc,KAAK,EACnD,OAAAA,EAAe,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA,MAM/B,KAAK,SAAS,QAAQN,GAAQ,CAC5B,MAAMO,EAAc,KAAK,kBAAkBP,CAAI,EAC/CM,EAAe,YAAYC,CAAW,CACxC,CAAC,EAEDH,EAAU,YAAYE,CAAc,EAC7BF,CACT,CAEQ,kBAAkBJ,EAAW,CACnC,MAAMQ,EAAU,SAAS,cAAc,KAAK,EAC5C,OAAAA,EAAQ,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,MAOxBA,EAAQ,YAAc,IAAM,CAC1BA,EAAQ,MAAM,gBAAkB,6CAClC,EAEAA,EAAQ,WAAa,IAAM,CACzBA,EAAQ,MAAM,gBAAkB,aAClC,EAEAA,EAAQ,QAAU,IAAM,CACtB,KAAK,cAAcR,CAAI,CACzB,EAEAQ,EAAQ,UAAY;AAAA;AAAA,yCAEiBR,EAAK,IAAI;AAAA;AAAA,+DAEaA,EAAK,IAAI;AAAA;AAAA,cAE1DA,EAAK,WAAW;AAAA;AAAA;AAAA;AAAA,MAMnBQ,CACT,CAEQ,uBAAuBR,EAAW,CACxC,MAAMS,EAAQ,KAAK,UAAUT,EAAK,EAAE,GAAK,CAAA,EAGzC,GAAI,KAAK,KAAO,KAAK,IAAI,UAAY,KAAK,IAAI,SAAS,QACrD,GAAI,CACF,KAAK,IAAI,SAAS,QAAQ,IAAI,CAC5B,GAAI,iBACJ,KAAMA,EAAK,KACX,OAAQ,IACCP,EAAM,cAAc,MAAO,CAChC,MAAO,CACL,OAAQ,OACR,QAAS,OACT,cAAe,SACf,gBAAiB,UACjB,MAAO,SAAA,CACT,EACC,CAEDA,EAAM,cAAc,MAAO,CACzB,IAAK,SACL,MAAO,CACL,QAAS,YACT,aAAc,oBACd,QAAS,OACT,WAAY,SACZ,IAAK,KAAA,CACP,EACC,CACDA,EAAM,cAAc,OAAQ,CAC1B,IAAK,OACL,MAAO,CAAE,SAAU,MAAA,CAAO,EACzBO,EAAK,IAAI,EACZP,EAAM,cAAc,OAAQ,CAC1B,IAAK,OACL,MAAO,CACL,WAAY,OACZ,SAAU,MAAA,CACZ,EACCO,EAAK,IAAI,EACZP,EAAM,cAAc,SAAU,CAC5B,IAAK,OACL,MAAO,CACL,WAAY,OACZ,WAAY,OACZ,OAAQ,OACR,MAAO,UACP,OAAQ,UACR,QAAS,SAAA,EAEX,QAAS,IAAM,CACb,KAAK,eAAA,CACP,CAAA,EACC,MAAM,CAAA,CACV,EAGDA,EAAM,cAAc,MAAO,CACzB,IAAK,QACL,MAAO,CACL,KAAM,EACN,UAAW,OACX,QAAS,OAAA,CACX,EACCgB,EAAM,IAAIlE,GACXkD,EAAM,cAAc,MAAO,CACzB,IAAKlD,EAAK,GACV,MAAO,CACL,QAAS,YACT,OAAQ,UACR,WAAY,wBACZ,aAAc,mBAAA,EAEhB,YAAc0D,GAAW,CACvBA,EAAE,OAAO,MAAM,gBAAkB,SACnC,EACA,WAAaA,GAAW,CACtBA,EAAE,OAAO,MAAM,gBAAkB,aACnC,EACA,QAAS,IAAM,CACb,KAAK,oBAAoB1D,CAAI,CAC/B,CAAA,EACC,CACDkD,EAAM,cAAc,MAAO,CACzB,IAAK,UACL,MAAO,CAAE,aAAc,KAAA,CAAM,EAC5B,CACDA,EAAM,cAAc,MAAO,CACzB,IAAK,QACL,MAAO,CACL,WAAY,MACZ,WAAY,MACZ,aAAc,KAAA,CAChB,EACClD,EAAK,KAAK,EACbkD,EAAM,cAAc,MAAO,CACzB,IAAK,OACL,MAAO,CACL,SAAU,OACV,MAAO,YACP,WAAY,KAAA,CACd,EACClD,EAAK,WAAW,CAAA,CACpB,EACDkD,EAAM,cAAc,MAAO,CACzB,IAAK,OACL,MAAO,CACL,SAAU,OACV,MAAO,WAAA,CACT,EACC,IAAI,KAAKlD,EAAK,OAAO,EAAE,eAAe,QAAS,CAChD,MAAO,QACP,IAAK,UACL,KAAM,UACN,OAAQ,SAAA,CACT,CAAC,CAAA,CACH,CAAA,CACF,CAAA,CACF,CACH,CACD,EAED,KAAK,IAAI,SAAS,QAAQ,WAAW,gBAAgB,CACvD,OAASpB,EAAO,CACd,QAAQ,MAAM,wCAAyCA,CAAK,EAC5D,KAAK,cAAc6E,CAAI,CACzB,MAEA,KAAK,cAAcA,CAAI,CAE3B,CAEQ,cAAcA,EAAW,CAC/B,MAAMS,EAAQ,KAAK,UAAUT,EAAK,EAAE,GAAK,CAAA,EAGnCI,EAAY,SAAS,cAAc,KAAK,EAC9CA,EAAU,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAS1B,MAAMC,EAAS,SAAS,cAAc,KAAK,EAC3CA,EAAO,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOvBA,EAAO,UAAY;AAAA,uCACgBL,EAAK,IAAI;AAAA,0DACUA,EAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAU/DI,EAAU,YAAYC,CAAM,EAG5B,MAAMK,EAAiB,SAAS,cAAc,KAAK,EACnDA,EAAe,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA,MAM/BD,EAAM,QAAQlE,GAAQ,CACpB,MAAMoE,EAAc,KAAK,qBAAqBpE,CAAI,EAClDmE,EAAe,YAAYC,CAAW,CACxC,CAAC,EAEDP,EAAU,YAAYM,CAAc,EAGnC,OAAe,OAAS,IAAM,CAC7B,KAAK,eAAA,CACP,EAGA,MAAMP,EAAU,SAAS,cAAc,yBAAyB,GACjD,SAAS,cAAc,UAAU,GACjC,SAAS,cAAc,oBAAoB,EAEtDA,IACFA,EAAQ,UAAY,GACpBA,EAAQ,YAAYC,CAAS,EAEjC,CAEQ,qBAAqBQ,EAAc,CACzC,MAAMC,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,MAO3BA,EAAW,YAAc,IAAM,CAC7BA,EAAW,MAAM,gBAAkB,6CACrC,EAEAA,EAAW,WAAa,IAAM,CAC5BA,EAAW,MAAM,gBAAkB,aACrC,EAEAA,EAAW,QAAU,IAAM,CACzB,KAAK,oBAAoBD,CAAO,CAClC,EAEA,MAAME,EAAU,IAAI,KAAKF,EAAQ,OAAO,EAAE,eAAe,QAAS,CAChE,MAAO,QACP,IAAK,UACL,KAAM,UACN,OAAQ,SAAA,CACT,EAED,OAAAC,EAAW,UAAY;AAAA;AAAA;AAAA,YAGfD,EAAQ,KAAK;AAAA;AAAA;AAAA,YAGbA,EAAQ,WAAW;AAAA;AAAA;AAAA;AAAA,UAIrBE,CAAO;AAAA;AAAA,MAIND,CACT,CAEQ,oBAAoBD,EAAc,CAExC,MAAM7E,EAAU,KAAK6E,EAAQ,KAAK;AAAA;AAAA,YAE1B,IAAI,KAAKA,EAAQ,OAAO,EAAE,eAAe,OAAO,CAAC;AAAA,UACnD,KAAK,SAAS,KAAKG,GAAKA,EAAE,KAAOH,EAAQ,MAAM,GAAG,IAAI;AAAA,iBAC/CA,EAAQ,IAAI;AAAA;AAAA;AAAA;AAAA,EAI3BA,EAAQ,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAcVA,EAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQbI,EAAQ,OAAOJ,EAAQ,EAAE,GACzBK,EAAU,GAAGL,EAAQ,KAAK,MAGhC,GAAI,KAAK,KAAO,KAAK,IAAI,UAAY,KAAK,IAAI,SAAS,OACrD,GAAI,CAEF,MAAMM,EAAc,KAAK,IAAI,SAAS,OAAO,SAAA,EAI7C,GAHoBA,EAAY,QAAQ,QAASC,GAAeA,EAAM,MAAQ,CAAA,CAAE,EAC7E,KAAM/E,GAAaA,EAAI,KAAO4E,CAAK,EAErB,CACf,QAAQ,IAAI,+CAAgDJ,EAAQ,KAAK,EAGzE,MAAMO,EAAQD,EAAY,QAAQ,KAAMC,GACtCA,EAAM,MAAM,KAAM/E,GAAaA,EAAI,KAAO4E,CAAK,CAAA,EAGjD,GAAIG,EAAO,CAET,KAAK,IAAI,SAAS,OAAO,WAAWH,EAAOG,EAAM,EAAE,EAGnD,QAAQ,IAAI,gDAAiDP,CAAO,EACpE,KAAK,IAAI,OAAO,KAAK,mBAAoBA,CAAO,EAEhD,MACF,CACF,CAEA,QAAQ,IAAI,+CAAgDA,EAAQ,KAAK,EAGzE,KAAK,IAAI,SAAS,OAAO,KAAK,CAC5B,GAAII,EACJ,KAAMC,EACN,MAAOlF,EACP,SAAU,WACV,KAAM,MAAA,CACP,EAGD,QAAQ,IAAI,gDAAiD6E,CAAO,EACpE,KAAK,IAAI,OAAO,KAAK,mBAAoBA,CAAO,EAEhD,QAAQ,IAAI,yCAA0CA,EAAQ,KAAK,CACrE,OAASzF,EAAO,CACd,QAAQ,MAAM,oCAAqCA,CAAK,EAGxD,GAAI,CACF,MAAMiG,EAAY,CAChB,GAAIJ,EACJ,KAAMC,EACN,QAAAlF,EACA,SAAU,WACV,QAAA6E,CAAA,EAGF,QAAQ,IAAI,8DAA8D,EAC1E,KAAK,IAAI,OAAO,KAAK,kBAAmBQ,CAAS,CACnD,OAASC,EAAY,CACnB,QAAQ,MAAM,gCAAiCA,CAAU,CAC3D,CACF,SACS,KAAK,IAAK,CACnB,QAAQ,IAAI,uDAAuD,EAEnE,GAAI,CACF,MAAMD,EAAY,CAChB,GAAIJ,EACJ,KAAMC,EACN,QAAAlF,EACA,SAAU,WACV,QAAA6E,CAAA,EAGF,QAAQ,IAAI,4CAA6CQ,CAAS,EAClE,KAAK,IAAI,OAAO,KAAK,kBAAmBA,CAAS,CACnD,OAASjG,EAAO,CACd,QAAQ,MAAM,wBAAyBA,CAAK,CAC9C,CACF,MACE,QAAQ,MAAM,kCAAkC,CAEpD,CAEQ,gBAAiB,CACvB,MAAMwC,EAAM,SAAS,cAAc,KAAK,EACxC,OAAAA,EAAI,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgCf,OAAe,QAAU,IAAM,KAAK,QAAA,EACpC,OAAe,eAAiB,IAAM,KAAK,eAAA,EAC3C,OAAe,WAAa,IAAM,KAAK,WAAA,EAEjCA,CACT,CAEA,MAAc,SAAU,CACtB,MAAM2D,EAAW,SAAS,eAAe,SAAS,EAC5CC,EAAa,SAAS,eAAe,aAAa,EAExD,GAAI,CAACD,GAAY,CAACC,EAAY,OAE9B,MAAMC,EAAMF,EAAS,MAAM,KAAA,EAC3B,GAAI,CAACE,EAAK,CACRD,EAAW,UAAY,wCACvB,MACF,CAEAA,EAAW,UAAY,wBAEvB,GAAI,CAGF,MAAM/C,EAAO,MADI,MAAM,MAAM,gDAAgD,mBAAmBgD,CAAG,CAAC,EAAE,GAC1E,KAAA,EAExBhD,EAAK,SAAW,KAClB,KAAK,kBAAkBA,EAAK,KAAK,EAEjC+C,EAAW,UAAY,wCAE3B,OAASpG,EAAO,CACdoG,EAAW,UAAY;AAAA,uCACUpG,CAAK;AAAA;AAAA,OAGxC,CACF,CAEQ,kBAAkBsF,EAAc,CACtC,MAAMc,EAAa,SAAS,eAAe,aAAa,EACxD,GAAI,CAACA,EAAY,OAEjB,GAAId,EAAM,SAAW,EAAG,CACtBc,EAAW,UAAY,qBACvB,MACF,CAEA,MAAME,EAAOhB,EAAM,MAAM,EAAG,CAAC,EAAE,IAAIlE,GAAQ;AAAA;AAAA;AAAA,qBAG1BA,EAAK,IAAI;AAAA,cAChBA,EAAK,KAAK;AAAA;AAAA;AAAA;AAAA,YAIZ,IAAI,KAAKA,EAAK,OAAO,EAAE,oBAAoB;AAAA;AAAA;AAAA,YAG3CA,EAAK,YAAcA,EAAK,YAAY,UAAU,EAAG,GAAG,EAAI,MAAQ,EAAE;AAAA;AAAA;AAAA,KAGzE,EAAE,KAAK,EAAE,EAEVgF,EAAW,UAAYE,CACzB,CAEQ,gBAAiB,CACvB,MAAMH,EAAW,SAAS,eAAe,SAAS,EAClD,GAAI,CAACA,EAAU,OAEf,MAAMI,EAAc,CAClB,sCACA,wCACA,6DAAA,EAGIC,EAAaD,EAAY,KAAK,MAAM,KAAK,OAAA,EAAWA,EAAY,MAAM,CAAC,EAC7EJ,EAAS,MAAQK,GAAc,EACjC,CAEQ,YAAa,CACnB,MAAMJ,EAAa,SAAS,eAAe,aAAa,EACpDA,IACFA,EAAW,UAAY,eAE3B,CACF,CCz4BO,MAAMK,EAAqC,CAChD,GAAI,aACJ,KAAM,UACN,QAAS,QACT,YAAa,gCACb,OAAQ,sBACR,aAAc,CAAA,EACd,YAAahC,EACb,cAAe,QACf,cAAe,EACjB,ECXO,MAAMiC,UAA8B/D,CAAO,CACxC,cAAoC,KACpC,WAAiC,KAEzC,MAAM,QAAS,CACb,QAAQ,IAAI,iCAAiC,EAG7C,KAAK,cAAgB,KAAK,iBAAA,EAC1B,KAAK,cAAc,QAAQ,4BAA4B,EAGvD,KAAK,WAAW,CACd,GAAI,yBACJ,KAAM,YACN,SAAU,IAAM,CACd,QAAQ,IAAI,qCAAqC,EACjD,KAAK,WAAW,qCAAqC,CACvD,CAAA,CACD,EAGD,KAAK,cAAc,IAAIgE,EAA0B,KAAK,IAAK,IAAI,CAAC,EAGhE,KAAK,8BAA8B,CACjC,KAAM,WACN,QAAS,CAAC3F,EAAsB4F,IAA0C,CACxE,KAAK,gBAAgB5F,EAAS4F,CAAO,CACvC,CAAA,CACD,EAGD,KAAK,mCAAmC,mBACtC,CAACnD,EAAgBoD,EAAiBC,IAAsC,CACtE,KAAK,iBAAiBrD,EAAQoD,EAAIC,CAAG,CACvC,CAAA,EAIF,KAAK,cACH,KAAK,IAAI,UAAU,WAAYnD,GAAgB,CAC7C,QAAQ,IAAI,eAAgBA,EAAK,IAAI,EACrC,KAAK,gBAAgB,SAASA,EAAK,IAAI,EAAE,CAC3C,CAAC,CAAA,EAIH,MAAM,KAAK,SAAS,CAClB,aAAc,IAAI,KAAA,EAAO,YAAA,EACzB,WAAY,MAAM,KAAK,SAAA,IAAa,WAAa,CAAI,CACtD,EAED,QAAQ,IAAI,kDAAkD,CAChE,CAEA,MAAe,UAAW,CACxB,QAAQ,IAAI,sCAAsC,EAG9C,KAAK,eACP,KAAK,cAAc,OAAA,EAIjB,KAAK,YACP,KAAK,WAAW,OAAA,EAGlB,QAAQ,IAAI,kCAAkC,CAChD,CAEQ,gBAAgB3C,EAAsB4F,EAAuC,CAElE5F,EAAQ,iBAAiB,wBAAwB,EACzD,QAAQ,CAAC+F,EAASjH,IAAU,CACnC,MAAMkH,EAAO,SAAS,cAAc,MAAM,EAC1CA,EAAK,YAAc,KAAKlH,EAAQ,CAAC,IACjCkH,EAAK,MAAM,MAAQ,UACnBA,EAAK,MAAM,SAAW,QACtBD,EAAQ,YAAYC,CAAI,CAC1B,CAAC,CACH,CAEQ,iBAAiBvD,EAAgBoD,EAAiBC,EAAmC,CAE3FD,EAAG,MAAA,EAGH,MAAM5B,EAAY4B,EAAG,UAAU,CAAE,IAAK,8BAA+B,EAG/D/F,EAAQmE,EAAU,UAAU,CAAE,IAAK,mBAAoB,EAC7DnE,EAAM,QAAQ,6BAA6B,EAG3C,MAAMF,EAAUqE,EAAU,UAAU,CAAE,IAAK,qBAAsB,EACjErE,EAAQ,QAAQ6C,CAAM,EAGtB,MAAMwD,EAAShC,EAAU,SAAS,SAAU,CAAE,KAAM,eAAgB,EACpEgC,EAAO,QAAU,IAAM,CACrB,KAAK,YAAYxD,CAAM,CACzB,EAGAwB,EAAU,aAAa,CACrB,OAAQ,oBACR,aAAc,MACd,QAAS,OACT,OAAQ,QACR,gBAAiB,SAAA,CAClB,EAEDnE,EAAM,aAAa,CACjB,WAAY,OACZ,aAAc,MACd,MAAO,SAAA,CACR,EAEDF,EAAQ,aAAa,CACnB,WAAY,YACZ,gBAAiB,UACjB,QAAS,MACT,aAAc,MACd,aAAc,KAAA,CACf,EAEDqG,EAAO,aAAa,CAClB,gBAAiB,UACjB,MAAO,QACP,OAAQ,OACR,QAAS,UACT,aAAc,MACd,OAAQ,SAAA,CACT,CACH,CAEQ,YAAYxD,EAAgB,CAClC,QAAQ,IAAI,mBAAoBA,CAAM,EACtC,KAAK,WAAW,OAAOA,EAAO,MAAM,SAAS,CAC/C,CAEQ,gBAAgBnB,EAAc,CAChC,KAAK,eACP,KAAK,cAAc,QAAQA,CAAI,CAEnC,CAEO,WAAWb,EAAiB,CAEjC,MAAMyF,EAAS,SAAS,cAAc,KAAK,EAC3CA,EAAO,YAAczF,EACrByF,EAAO,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAavB,SAAS,KAAK,YAAYA,CAAM,EAGhC,WAAW,IAAM,CACXA,EAAO,YACTA,EAAO,WAAW,YAAYA,CAAM,CAExC,EAAG,GAAI,CACT,CACF,CAGA,MAAMP,CAA0B,CACtB,IACA,OACD,GAAa,4BACb,KAAe,mBACf,IAEP,YAAY/D,EAAUrC,EAA+B,CACnD,KAAK,IAAMqC,EACX,KAAK,OAASrC,EACd,KAAK,IAAM,KAAK,kBAAA,CAClB,CAEQ,mBAAiC,CACvC,MAAM0E,EAAY,SAAS,cAAc,KAAK,EAC9CA,EAAU,MAAM,QAAU;AAAA;AAAA;AAAA,MAM1B,MAAMnE,EAAQmE,EAAU,SAAS,KAAM,CAAE,KAAM,mCAAoC,EACnFnE,EAAM,MAAM,aAAe,OAG3B,MAAMqG,EAAmBlC,EAAU,UAAA,EACnCkC,EAAiB,MAAM,aAAe,OAGtC,MAAMC,EAAeD,EAAiB,SAAS,QAAS,CAAE,KAAM,QAAS,EACzEC,EAAa,MAAM,QAAU,QAC7BA,EAAa,MAAM,aAAe,MAElC,MAAMC,EAAeF,EAAiB,SAAS,QAAS,CAAE,KAAM,OAAQ,EACxEE,EAAa,YAAc,QAC3BA,EAAa,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAU7B,MAAMC,EAAkBrC,EAAU,UAAA,EAClCqC,EAAgB,MAAM,UAAY,OAElC,MAAMC,EAAaD,EAAgB,SAAS,SAAU,CAAE,KAAM,OAAQ,EACtEC,EAAW,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAS3BA,EAAW,QAAU,IAAM,CACzB,KAAK,OAAO,WAAW,UAAU,CACnC,EAEA,MAAMC,EAAcF,EAAgB,SAAS,SAAU,CAAE,KAAM,OAAQ,EACvE,OAAAE,EAAY,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQ5BA,EAAY,QAAU,IAAM,CAC1BH,EAAa,MAAQ,GACrB,KAAK,OAAO,WAAW,QAAQ,CACjC,EAEOpC,CACT,CACF,CC/PO,MAAMwC,EAA2C,CACtD,GAAI,0BACJ,KAAM,0BACN,QAAS,QACT,YAAa,4BACb,OAAQ,gBACR,aAAc,CAAA,EACd,YAAaf,EACb,cAAe,QACf,cAAe,EACjB,ECVO,MAAMgB,CAAoC,CACvC,IAAyB,KAEjC,MAAM,OAAOhH,EAAiB,CAC5B,KAAK,IAAMA,EACX,QAAQ,IAAI,mCAAmC,EAG/C,WAAW,IAAM,CACf,KAAK,wBAAA,CACP,EAAG,GAAI,CACT,CAEA,MAAM,UAAW,CACf,QAAQ,IAAI,uBAAuB,CAErC,CAEQ,yBAA0B,CAOhC,GANA,QAAQ,IAAI,iDAAiD,EAC7D,QAAQ,IAAI,+BAAgC,CAAC,CAAC,KAAK,GAAG,EACtD,QAAQ,IAAI,kCAAmC,CAAC,CAAC,KAAK,KAAK,EAAE,EAC7D,QAAQ,IAAI,8CAA+C,CAAC,CAAC,KAAK,KAAK,IAAI,kBAAkB,EAGzF,KAAK,KAAO,KAAK,IAAI,IAAM,KAAK,IAAI,GAAG,mBACzC,GAAI,CACF,QAAQ,IAAI,2DAA2D,EACvE,KAAK,IAAI,GAAG,mBAAmB,CAC7B,GAAI,eACJ,KAAM,eACN,KAAM,YACN,UAAW,EACX,UAAW,MACX,QAAS,IAAM,CACb,QAAQ,IAAI,yCAAyC,EACrD,KAAK,iBAAA,CACP,CAAA,CACD,EACD,QAAQ,IAAI,wDAAwD,EAGhE,KAAK,IAAI,UAAY,KAAK,IAAI,SAAS,aACzC,KAAK,IAAI,SAAS,YAAY,QAASU,GAAc,CACnD,QAAQ,IAAI,kDAAmDA,CAAI,EAC/DA,GAAQA,EAAK,KAAO,iBACtB,QAAQ,IAAI,mDAAmD,EAC/D,KAAK,iBAAA,EAET,CAAC,CAEL,OAASpB,EAAO,CACd,QAAQ,MAAM,yDAA0DA,CAAK,EAE7E,KAAK,8BAAA,CACP,MAEA,QAAQ,IAAI,iEAAiE,EAC7E,KAAK,8BAAA,CAET,CAEQ,+BAAgC,CAEtC,MAAM0E,EAAc,SAAS,cAAc,6BAA6B,GACrD,SAAS,cAAc,cAAc,GACrC,SAAS,cAAc,qBAAqB,GAC5C,SAAS,cAAc,wBAAwB,GAC/C,SAAS,cAAc,wBAAwB,GAC/C,SAAS,cAAc,4BAA4B,EAEtE,GAAIA,EAAa,CACf,QAAQ,IAAI,oCAAqCA,CAAW,EAE5D,MAAM7D,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAY,KACjBA,EAAK,MAAQ,eACbA,EAAK,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAcrBA,EAAK,YAAc,IAAM,CACvBA,EAAK,MAAM,gBAAkB,0BAC/B,EAEAA,EAAK,WAAa,IAAM,CACtBA,EAAK,MAAM,gBAAkB,aAC/B,EAEAA,EAAK,QAAU,IAAM,CACnB,QAAQ,IAAI,oCAAoC,EAChD,KAAK,iBAAA,CACP,EAGA,MAAM+D,EAAYF,EAAY,cAAc,kCAAkC,EAC1EE,EACFF,EAAY,aAAa7D,EAAM+D,CAAS,EAExCF,EAAY,YAAY7D,CAAI,EAG9B,QAAQ,IAAI,+CAA+C,CAC7D,MACE,QAAQ,IAAI,mDAAmD,EAC/D,WAAW,IAAM,KAAK,8BAAA,EAAiC,GAAI,CAE/D,CAEQ,kBAAmB,CAIzB,GAHA,QAAQ,IAAI,uCAAuC,EAG/C,KAAK,KAAO,KAAK,IAAI,UAAY,KAAK,IAAI,SAAS,QACrD,GAAI,CACF,QAAQ,IAAI,mDAAmD,EAC/D,KAAK,IAAI,SAAS,QAAQ,IAAI,CAC5B,GAAI,gBACJ,KAAM,cACN,OAAQ,IAAM,CACZ,QAAQ,IAAI,+CAA+C,EAG3D,MAAMD,EAAU0D,EAAM,cAAc,MAAO,CACzC,MAAO,CACL,OAAQ,OACR,QAAS,OACT,cAAe,SACf,gBAAiB,UACjB,MAAO,UACP,WAAY,mEAAA,CACd,EACC,CAEDA,EAAM,cAAc,MAAO,CACzB,IAAK,SACL,MAAO,CACL,QAAS,YACT,aAAc,oBACd,UAAW,QAAA,CACb,EACC,CACDA,EAAM,cAAc,KAAM,CACxB,IAAK,QACL,MAAO,CACL,MAAO,UACP,OAAQ,YACR,SAAU,MAAA,CACZ,EACC,gBAAgB,EACnBA,EAAM,cAAc,MAAO,CACzB,IAAK,WACL,MAAO,CACL,SAAU,OACV,MAAO,WAAA,CACT,EACC,qBAAqB,CAAA,CACzB,EAGDA,EAAM,cAAc,MAAO,CACzB,IAAK,WACL,MAAO,CACL,KAAM,EACN,QAAS,OACT,UAAW,MAAA,CACb,EACC,CACDA,EAAM,cAAc,MAAO,CACzB,IAAK,kBACL,MAAO,CACL,aAAc,OACd,QAAS,YACT,gBAAiB,UACjB,aAAc,MACd,WAAY,mBAAA,CACd,EACC,CACDA,EAAM,cAAc,KAAM,CACxB,IAAK,iBACL,MAAO,CACL,OAAQ,aACR,MAAO,UACP,SAAU,MAAA,CACZ,EACC,OAAO,EACVA,EAAM,cAAc,KAAM,CACxB,IAAK,gBACL,MAAO,CACL,OAAQ,EACR,YAAa,OACb,WAAY,KAAA,CACd,EACC,CACDA,EAAM,cAAc,KAAM,CAAE,IAAK,UAAA,EAAc,sBAAsB,EACrEA,EAAM,cAAc,KAAM,CAAE,IAAK,UAAA,EAAc,YAAY,EAC3DA,EAAM,cAAc,KAAM,CAAE,IAAK,UAAA,EAAc,aAAa,EAC5DA,EAAM,cAAc,KAAM,CAAE,IAAK,UAAA,EAAc,SAAS,EACxDA,EAAM,cAAc,KAAM,CAAE,IAAK,UAAA,EAAc,UAAU,CAAA,CAC1D,CAAA,CACF,EAGDA,EAAM,cAAc,MAAO,CACzB,IAAK,YACL,MAAO,CACL,UAAW,OACX,QAAS,YACT,gBAAiB,UACjB,aAAc,MACd,SAAU,OACV,MAAO,WAAA,CACT,EACC,CACDA,EAAM,cAAc,MAAO,CAAE,IAAK,OAAA,EAAW,UAAU,EACvDA,EAAM,cAAc,MAAO,CAAE,IAAK,OAAA,EAAW,sBAAsB,EACnEA,EAAM,cAAc,MAAO,CAAE,IAAK,OAAA,EAAW,mBAAmB,EAChEA,EAAM,cAAc,MAAO,CAAE,IAAK,OAAA,EAAW,cAAc,EAC3DA,EAAM,cAAc,MAAO,CAAE,IAAK,OAAA,EAAW,WAAW,CAAA,CACzD,CAAA,CACF,EAGDA,EAAM,cAAc,MAAO,CACzB,IAAK,YACL,MAAO,CACL,QAAS,YACT,UAAW,oBACX,SAAU,OACV,MAAO,OACP,UAAW,QAAA,CACb,EACC,SAAS,IAAI,KAAA,EAAO,eAAe,OAAO,CAAC,EAAE,CAAA,CACjD,EAED,eAAQ,IAAI,0DAA0D,EAC/D1D,CACT,CAAA,CACD,EAGD,KAAK,IAAI,SAAS,QAAQ,WAAW,eAAe,EAEpD,QAAQ,IAAI,8CAA8C,EAG1D,KAAK,WAAW,iBAAiB,EAGjC,KAAK,kBAAA,CACP,OAASZ,EAAO,CACd,QAAQ,MAAM,wCAAyCA,CAAK,EAC5D,KAAK,WAAW,kBAAkB,CACpC,MAEA,QAAQ,IAAI,kDAAkD,EAC9D,KAAK,WAAW,WAAW,CAE/B,CAEQ,mBAAoB,CAE1B,MAAMY,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAiBN,IAAI,OAAO,eAAe,OAAO,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBtCiF,EAAQ,cACRC,EAAU,iBAGhB,GAAI,KAAK,KAAO,KAAK,IAAI,UAAY,KAAK,IAAI,SAAS,OACrD,GAAI,CAEF,MAAMC,EAAc,KAAK,IAAI,SAAS,OAAO,SAAA,EAI7C,GAHoBA,EAAY,QAAQ,QAASC,GAAeA,EAAM,MAAQ,CAAA,CAAE,EAC7E,KAAM/E,GAAaA,EAAI,KAAO4E,CAAK,EAErB,CACf,QAAQ,IAAI,+DAA+D,EAG3E,MAAMG,EAAQD,EAAY,QAAQ,KAAMC,GACtCA,EAAM,MAAM,KAAM/E,GAAaA,EAAI,KAAO4E,CAAK,CAAA,EAGjD,GAAIG,EAAO,CAET,KAAK,IAAI,SAAS,OAAO,WAAWH,EAAOG,EAAM,EAAE,EACnD,MACF,CACF,CAEA,QAAQ,IAAI,6CAA6C,EAGzD,KAAK,IAAI,SAAS,OAAO,KAAK,CAC5B,GAAIH,EACJ,KAAMC,EACN,MAAOlF,EACP,SAAU,WACV,KAAM,MAAA,CACP,EAED,QAAQ,IAAI,yDAAyD,CACvE,OAASZ,EAAO,CACd,QAAQ,MAAM,sDAAuDA,CAAK,EAC1E,KAAK,WAAW,kBAAkB,CACpC,MAEA,QAAQ,IAAI,iDAAiD,EAC7D,KAAK,WAAW,WAAW,CAE/B,CAEQ,WAAWyB,EAAiB,CAElC,MAAMyF,EAAS,SAAS,cAAc,KAAK,EAC3CA,EAAO,YAAczF,EACrByF,EAAO,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAevB,MAAMS,EAAQ,SAAS,cAAc,OAAO,EAC5CA,EAAM,YAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYpB,SAAS,KAAK,YAAYA,CAAK,EAE/B,SAAS,KAAK,YAAYT,CAAM,EAGhC,WAAW,IAAM,CACXA,EAAO,YACTA,EAAO,WAAW,YAAYA,CAAM,EAElCS,EAAM,YACRA,EAAM,WAAW,YAAYA,CAAK,CAEtC,EAAG,GAAI,CACT,CACF,CCrZO,MAAMC,EAAuC,CAClD,GAAI,eACJ,KAAM,eACN,QAAS,QACT,YAAa,kCACb,OAAQ,gBACR,aAAc,CAAA,EACd,YAAaF,EACb,cAAe,QACf,cAAe,EACjB,ECVO,MAAMG,CAAyC,CAC5C,IAAyB,KACzB,iBAAqC,IAE7C,MAAM,OAAOnH,EAAiB,CAC5B,KAAK,IAAMA,EACX,QAAQ,IAAI,wCAAwC,EAEpD,WAAW,IAAM,CACf,KAAK,6BAAA,CACP,EAAG,GAAI,CACT,CAEA,MAAM,UAAW,CACf,QAAQ,IAAI,4BAA4B,CAC1C,CAEQ,8BAA+B,CAOrC,GANA,QAAQ,IAAI,sDAAsD,EAClE,QAAQ,IAAI,oCAAqC,CAAC,CAAC,KAAK,GAAG,EAC3D,QAAQ,IAAI,uCAAwC,CAAC,CAAC,KAAK,KAAK,EAAE,EAClE,QAAQ,IAAI,mDAAoD,CAAC,CAAC,KAAK,KAAK,IAAI,kBAAkB,EAG9F,KAAK,KAAO,KAAK,IAAI,IAAM,KAAK,IAAI,GAAG,mBACzC,GAAI,CACF,QAAQ,IAAI,gEAAgE,EAC5E,KAAK,IAAI,GAAG,mBAAmB,CAC7B,GAAI,oBACJ,KAAM,gBACN,KAAM,SACN,UAAW,EACX,UAAW,MACX,QAAS,IAAM,CACb,QAAQ,IAAI,8CAA8C,EAC1D,KAAK,sBAAA,CACP,CAAA,CACD,EACD,QAAQ,IAAI,6DAA6D,EAGrE,KAAK,IAAI,UAAY,KAAK,IAAI,SAAS,aACzC,KAAK,IAAI,SAAS,YAAY,QAASU,GAAc,CACnD,QAAQ,IAAI,uDAAwDA,CAAI,EACpEA,GAAQA,EAAK,KAAO,sBACtB,QAAQ,IAAI,6DAA6D,EACzE,KAAK,sBAAA,EAET,CAAC,CAEL,OAASpB,EAAO,CACd,QAAQ,MAAM,8DAA+DA,CAAK,EAClF,KAAK,mCAAA,CACP,MAEA,QAAQ,IAAI,sEAAsE,EAClF,KAAK,mCAAA,CAET,CAEQ,oCAAqC,CAC3C,MAAM0E,EAAc,SAAS,cAAc,4BAA4B,EACvE,GAAIA,EAAa,CACf,MAAM7D,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAY,KACjBA,EAAK,MAAQ,gBACbA,EAAK,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA,QAKrBA,EAAK,QAAU,IAAM,KAAK,sBAAA,EAC1B6D,EAAY,YAAY7D,CAAI,CAC9B,CACF,CAEQ,uBAAwB,CAG9B,GAFA,QAAQ,IAAI,iDAAiD,EAEzD,KAAK,KAAO,KAAK,IAAI,UAAY,KAAK,IAAI,SAAS,QACrD,GAAI,CACF,QAAQ,IAAI,wDAAwD,EACpE,KAAK,IAAI,SAAS,QAAQ,IAAI,CAC5B,GAAI,qBACJ,KAAM,gBACN,OAAQ,IACCyD,EAAM,cAAc,MAAO,CAChC,MAAO,CACL,OAAQ,OACR,QAAS,OACT,cAAe,SACf,gBAAiB,UACjB,MAAO,UACP,WAAY,mEAAA,CACd,EACC,CAEDA,EAAM,cAAc,MAAO,CACzB,IAAK,SACL,MAAO,CACL,QAAS,OACT,aAAc,oBACd,UAAW,QAAA,CACb,EACC,CACDA,EAAM,cAAc,KAAM,CACxB,IAAK,QACL,MAAO,CACL,MAAO,UACP,OAAQ,YACR,SAAU,OACV,WAAY,MAAA,CACd,EACC,eAAe,EAClBA,EAAM,cAAc,MAAO,CACzB,IAAK,WACL,MAAO,CACL,SAAU,OACV,MAAO,YACP,aAAc,MAAA,CAChB,EACC,WAAW,EAEdA,EAAM,cAAc,SAAU,CAC5B,IAAK,gBACL,MAAO,CACL,MAAO,OACP,QAAS,YACT,gBAAiB,UACjB,MAAO,QACP,OAAQ,OACR,aAAc,MACd,SAAU,OACV,WAAY,OACZ,OAAQ,UACR,WAAY,uBAAA,EAEd,QAAS,IAAM,KAAK,gBAAA,CAAgB,EACnC,UAAU,CAAA,CACd,EAGDA,EAAM,cAAc,MAAO,CACzB,IAAK,WACL,MAAO,CACL,KAAM,EACN,QAAS,OACT,UAAW,MAAA,CACb,EACC,CACDA,EAAM,cAAc,MAAO,CACzB,IAAK,kBACL,MAAO,CACL,SAAU,OACV,WAAY,OACZ,aAAc,OACd,MAAO,SAAA,CACT,EACC,QAAQ,EACXA,EAAM,cAAc,MAAO,CACzB,IAAK,gBACL,MAAO,CACL,SAAU,OACV,WAAY,MACZ,MAAO,WAAA,CACT,EACC,CACDA,EAAM,cAAc,MAAO,CAAE,IAAK,UAAA,EAAc,aAAa,EAC7DA,EAAM,cAAc,MAAO,CAAE,IAAK,UAAA,EAAc,UAAU,EAC1DA,EAAM,cAAc,MAAO,CAAE,IAAK,UAAA,EAAc,UAAU,EAC1DA,EAAM,cAAc,MAAO,CAAE,IAAK,UAAA,EAAc,WAAW,EAC3DA,EAAM,cAAc,MAAO,CAAE,IAAK,UAAA,EAAc,cAAc,EAC9DA,EAAM,cAAc,MAAO,CAAE,IAAK,UAAA,EAAc,WAAW,CAAA,CAC5D,CAAA,CACF,CAAA,CACF,CACH,CACD,EAED,KAAK,IAAI,SAAS,QAAQ,WAAW,oBAAoB,EACzD,KAAK,WAAW,qBAAqB,CAEvC,MAAgB,CACd,KAAK,WAAW,SAAS,CAC3B,CAEJ,CAEQ,iBAAkB,CACxB,MAAMwD,EAAW,cAAc,KAAK,IAAA,CAAK,GACnCC,EAAa,MAAM,IAAI,KAAA,EAAO,eAAe,QAAS,CAC1D,MAAO,UACP,IAAK,UACL,KAAM,UACN,OAAQ,SAAA,CACT,CAAC,GAEF,GAAI,KAAK,KAAO,KAAK,IAAI,UAAY,KAAK,IAAI,SAAS,OACrD,GAAI,CAEF,KAAK,IAAI,SAAS,OAAO,KAAK,CAC5B,GAAID,EACJ,KAAMC,EACN,MAAO,oBACP,SAAU,aACV,KAAM,OACN,WAAY,CACV,CAAE,GAAI,MAAO,KAAM,KAAA,EACnB,CAAE,GAAI,UAAW,KAAM,SAAA,EACvB,CAAE,GAAI,aAAc,KAAM,YAAA,EAC1B,CAAE,GAAI,SAAU,KAAMA,EAAY,KAAM,MAAA,CAAO,EAGjD,OAAQ,CAAC,CAAE,MAAAvG,KAA4B,KAAK,0BAA0BsG,CAAQ,CAAA,CAC/E,EAED,QAAQ,IAAI,+DAA+D,EAC3E,KAAK,WAAW,uBAAuB,CAEzC,OAAS9H,EAAO,CACd,QAAQ,MAAM,4CAA6CA,CAAK,EAChE,KAAK,WAAW,QAAQ,CAC1B,CAEJ,CAEQ,0BAA0B8H,EAAkB,CAClD,QAAQ,IAAI,+DAAgEA,CAAQ,EAG/E,KAAK,aAAa,IAAIA,CAAQ,GACjC,KAAK,aAAa,IAAIA,EAAU,CAC9B,YAAa,MACb,UAAW,GACX,OAAQ,EACR,OAAQ,EACR,SAAU,CAAA,EACV,eAAgB,IAAA,CACjB,EAGH,MAAME,EAAQ,KAAK,aAAa,IAAIF,CAAQ,EAG5C,OAAOxD,EAAM,cAAc,MAAO,CAChC,MAAO,CACL,OAAQ,OACR,MAAO,OACP,QAAS,OACT,cAAe,SACf,gBAAiB,UACjB,WAAY,mEAAA,CACd,EACC,CAEDA,EAAM,cAAc,MAAO,CACzB,IAAK,UACL,MAAO,CACL,OAAQ,OACR,gBAAiB,UACjB,aAAc,oBACd,QAAS,OACT,WAAY,SACZ,QAAS,SACT,IAAK,KAAA,CACP,EACC,CACDA,EAAM,cAAc,SAAU,CAC5B,IAAK,MACL,MAAO,KAAK,mBAAmB0D,EAAM,cAAgB,KAAK,EAC1D,QAAS,IAAM,KAAK,WAAWF,EAAU,KAAK,CAAA,EAC7C,OAAO,EACVxD,EAAM,cAAc,SAAU,CAC5B,IAAK,OACL,MAAO,KAAK,mBAAmB0D,EAAM,cAAgB,MAAM,EAC3D,QAAS,IAAM,KAAK,WAAWF,EAAU,MAAM,CAAA,EAC9C,OAAO,EACVxD,EAAM,cAAc,SAAU,CAC5B,IAAK,YACL,MAAO,KAAK,mBAAmB0D,EAAM,cAAgB,WAAW,EAChE,QAAS,IAAM,KAAK,WAAWF,EAAU,WAAW,CAAA,EACnD,MAAM,EACTxD,EAAM,cAAc,SAAU,CAC5B,IAAK,SACL,MAAO,KAAK,mBAAmB0D,EAAM,cAAgB,QAAQ,EAC7D,QAAS,IAAM,KAAK,WAAWF,EAAU,QAAQ,CAAA,EAChD,MAAM,EACTxD,EAAM,cAAc,SAAU,CAC5B,IAAK,OACL,MAAO,KAAK,mBAAmB0D,EAAM,cAAgB,MAAM,EAC3D,QAAS,IAAM,KAAK,WAAWF,EAAU,MAAM,CAAA,EAC9C,OAAO,EACVxD,EAAM,cAAc,SAAU,CAC5B,IAAK,QACL,MAAO,KAAK,mBAAmB0D,EAAM,cAAgB,OAAO,EAC5D,QAAS,IAAM,KAAK,WAAWF,EAAU,OAAO,CAAA,EAC/C,OAAO,EACVxD,EAAM,cAAc,MAAO,CAAE,IAAK,SAAU,MAAO,CAAE,KAAM,CAAA,EAAK,EAChEA,EAAM,cAAc,SAAU,CAC5B,IAAK,QACL,MAAO,CACL,gBAAiB,UACjB,MAAO,QACP,OAAQ,OACR,QAAS,WACT,aAAc,MACd,OAAQ,UACR,SAAU,MAAA,EAEZ,QAAS,IAAM,KAAK,YAAYwD,CAAQ,CAAA,EACvC,SAAS,CAAA,CACb,EAGDxD,EAAM,cAAc,MAAO,CACzB,IAAK,mBACL,MAAO,CACL,KAAM,EACN,SAAU,WACV,gBAAiB,UACjB,SAAU,QAAA,CACZ,EACC,CACDA,EAAM,cAAc,MAAO,CACzB,IAAK,SACL,GAAI,qBAAqBwD,CAAQ,GACjC,MAAO,CACL,MAAO,OACP,OAAQ,OACR,OAAQE,EAAM,cAAgB,OAAS,OAAS,YAChD,SAAU,WACV,gBAAiB;AAAA;AAAA;AAAA,cAIjB,eAAgB,WAAA,EAElB,YAAclD,GAAW,KAAK,sBAAsBA,EAAGgD,CAAQ,EAC/D,YAAchD,GAAW,KAAK,sBAAsBA,EAAGgD,CAAQ,EAC/D,UAAYhD,GAAW,KAAK,oBAAoBA,EAAGgD,CAAQ,CAAA,CAC5D,EAGDxD,EAAM,cAAc,MAAO,CACzB,IAAK,aACL,MAAO,CACL,SAAU,WACV,OAAQ,IACR,KAAM,IACN,MAAO,IACP,OAAQ,OACR,gBAAiB,UACjB,MAAO,UACP,QAAS,OACT,WAAY,SACZ,QAAS,SACT,SAAU,OACV,UAAW,mBAAA,CACb,EACC,CACDA,EAAM,cAAc,MAAO,CACzB,IAAK,cACL,GAAI,eAAewD,CAAQ,EAAA,EAC1B,UAAU,EACbxD,EAAM,cAAc,MAAO,CACzB,IAAK,YACL,GAAI,aAAawD,CAAQ,GACzB,MAAO,CAAE,KAAM,EAAG,WAAY,MAAA,CAAO,EACpC,SAAS,KAAK,YAAYE,EAAM,WAAW,CAAC,EAAE,CAAA,CAClD,CAAA,CACF,CAAA,CACF,CACH,CAEQ,mBAAmBC,EAAmB,CAC5C,MAAO,CACL,MAAO,OACP,OAAQ,OACR,OAAQ,aAAaA,EAAW,UAAY,SAAS,GACrD,aAAc,MACd,WAAYA,EAAW,UAAY,UACnC,MAAOA,EAAW,QAAU,UAC5B,OAAQ,UACR,SAAU,OACV,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,WAAY,UAAA,CAEhB,CAEQ,WAAWH,EAAkBI,EAAc,CACjD,QAAQ,IAAI,oCAAqCA,EAAM,cAAeJ,CAAQ,EAC9E,MAAME,EAAQ,KAAK,aAAa,IAAIF,CAAQ,EAC5C,GAAIE,EAAO,CACTA,EAAM,YAAcE,EACpB,KAAK,aAAa,IAAIJ,EAAUE,CAAK,EAGrC,MAAMG,EAAW,SAAS,eAAe,aAAaL,CAAQ,EAAE,EAC5DK,IACFA,EAAS,YAAc,SAAS,KAAK,YAAYD,CAAI,CAAC,IAIxD,MAAME,EAAS,SAAS,eAAe,qBAAqBN,CAAQ,EAAE,EAClEM,IACFA,EAAO,MAAM,OAASF,IAAS,OAAS,OAAS,aAInD,KAAK,cAAcJ,CAAQ,CAC7B,CACF,CAEQ,YAAYI,EAAsB,CASxC,MAR6C,CAC3C,IAAK,KACL,KAAM,KACN,UAAW,KACX,OAAQ,KACR,KAAM,KACN,MAAO,IAAA,EAEQA,CAAI,GAAKA,CAC5B,CAEQ,cAAcJ,EAAkB,CAGtC,QAAQ,IAAI,gDAAiDA,CAAQ,CACvE,CAEQ,YAAYA,EAAkB,CACpC,QAAQ,IAAI,sCAAuCA,CAAQ,EAC3D,MAAMM,EAAS,SAAS,eAAe,qBAAqBN,CAAQ,EAAE,EACtE,GAAIM,EAAQ,CAEOA,EAAO,iBAAiB,kBAAkB,EAClD,QAAQpH,GAAWA,EAAQ,OAAA,CAAQ,EAG5C,KAAK,aAAa8G,CAAQ,EAG1B,MAAME,EAAQ,KAAK,aAAa,IAAIF,CAAQ,EACxCE,IACFA,EAAM,SAAW,CAAA,EACjBA,EAAM,UAAY,GAClB,KAAK,aAAa,IAAIF,EAAUE,CAAK,EAEzC,CACF,CAEQ,sBAAsB,EAAqBF,EAAkB,CACnE,QAAQ,IAAI,2CAA4CA,CAAQ,EAChE,MAAME,EAAQ,KAAK,aAAa,IAAIF,CAAQ,EAC5C,GAAI,CAACE,EAAO,OAEZ,MAAMI,EAAS,SAAS,eAAe,qBAAqBN,CAAQ,EAAE,EACtE,GAAI,CAACM,EAAQ,OAEb,MAAMC,EAAOD,EAAO,sBAAA,EACdE,EAAI,KAAK,MAAM,EAAE,QAAUD,EAAK,IAAI,EACpCE,EAAI,KAAK,MAAM,EAAE,QAAUF,EAAK,GAAG,EAEzCL,EAAM,UAAY,GAClBA,EAAM,OAASM,EACfN,EAAM,OAASO,EAEXP,EAAM,cAAgB,QACxB,KAAK,kBAAkBF,EAAUQ,EAAGC,CAAC,EAGvC,KAAK,aAAa,IAAIT,EAAUE,CAAK,CACvC,CAEQ,sBAAsB,EAAqBF,EAAkB,CACnE,MAAMM,EAAS,SAAS,eAAe,qBAAqBN,CAAQ,EAAE,EACtE,GAAI,CAACM,EAAQ,OAEb,MAAMC,EAAOD,EAAO,sBAAA,EACdE,EAAI,KAAK,MAAM,EAAE,QAAUD,EAAK,IAAI,EACpCE,EAAI,KAAK,MAAM,EAAE,QAAUF,EAAK,GAAG,EAGnCG,EAAc,SAAS,eAAe,eAAeV,CAAQ,EAAE,EACjEU,IACFA,EAAY,YAAc,OAAOF,CAAC,KAAKC,CAAC,IAG1C,MAAMP,EAAQ,KAAK,aAAa,IAAIF,CAAQ,EACxC,CAACE,GAAS,CAACA,EAAM,WAGrB,KAAK,qBAAqBF,EAAUQ,EAAGC,CAAC,CAC1C,CAEQ,oBAAoB,EAAqBT,EAAkB,CACjE,QAAQ,IAAI,yCAA0CA,CAAQ,EAC9D,MAAME,EAAQ,KAAK,aAAa,IAAIF,CAAQ,EAC5C,GAAI,CAACE,GAAS,CAACA,EAAM,UAAW,OAEhC,MAAMI,EAAS,SAAS,eAAe,qBAAqBN,CAAQ,EAAE,EACtE,GAAI,CAACM,EAAQ,OAEb,MAAMC,EAAOD,EAAO,sBAAA,EACdK,EAAO,KAAK,MAAM,EAAE,QAAUJ,EAAK,IAAI,EACvCK,EAAO,KAAK,MAAM,EAAE,QAAUL,EAAK,GAAG,EAG5C,KAAK,cAAcP,EAAUE,EAAM,OAAQA,EAAM,OAAQS,EAAMC,CAAI,EAEnEV,EAAM,UAAY,GAClB,KAAK,aAAa,IAAIF,EAAUE,CAAK,EAGrC,KAAK,aAAaF,CAAQ,CAC5B,CAEQ,cAAcA,EAAkBa,EAAgBC,EAAgBH,EAAcC,EAAc,CAClG,MAAMV,EAAQ,KAAK,aAAa,IAAIF,CAAQ,EAC5C,GAAI,CAACE,EAAO,OAEZ,MAAMI,EAAS,SAAS,eAAe,qBAAqBN,CAAQ,EAAE,EACtE,GAAI,CAACM,EAAQ,OAEb,MAAMpH,EAAU,SAAS,cAAc,KAAK,EAK5C,OAJAA,EAAQ,UAAY,kBACpBA,EAAQ,MAAM,SAAW,WACzBA,EAAQ,MAAM,cAAgB,OAEtBgH,EAAM,YAAA,CACZ,IAAK,MACH,KAAK,gBAAgBI,EAAQO,EAAQC,EAAQH,EAAMC,CAAI,EACvD,MACF,IAAK,OACH,KAAK,WAAWN,EAAQpH,EAAS2H,EAAQC,EAAQH,EAAMC,CAAI,EAC3D,MACF,IAAK,YACH,KAAK,gBAAgBN,EAAQpH,EAAS2H,EAAQC,EAAQH,EAAMC,CAAI,EAChE,MACF,IAAK,SACH,KAAK,aAAaN,EAAQpH,EAAS2H,EAAQC,EAAQH,EAAMC,CAAI,EAC7D,MACF,IAAK,QACH,KAAK,YAAYN,EAAQpH,EAAS2H,EAAQC,EAAQH,EAAMC,CAAI,EAC5D,KAAA,EAGA1H,EAAQ,MAAM,OAASA,EAAQ,MAAM,UACvCoH,EAAO,YAAYpH,CAAO,EAC1BgH,EAAM,SAAS,KAAKhH,CAAO,EAC3B,KAAK,aAAa,IAAI8G,EAAUE,CAAK,EAEzC,CAEQ,gBAAgBI,EAAqBO,EAAgBC,EAAgBH,EAAcC,EAAc,CACvG,MAAMG,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAY,kBACjBA,EAAK,MAAM,SAAW,WACtBA,EAAK,MAAM,cAAgB,OAC3BA,EAAK,MAAM,WAAa,UACxBA,EAAK,MAAM,OAAS,MACpBA,EAAK,MAAM,gBAAkB,cAE7B,MAAMC,EAAS,KAAK,KAAK,KAAK,IAAIL,EAAOE,EAAQ,CAAC,EAAI,KAAK,IAAID,EAAOE,EAAQ,CAAC,CAAC,EAC1EG,EAAQ,KAAK,MAAML,EAAOE,EAAQH,EAAOE,CAAM,EAErDE,EAAK,MAAM,KAAOF,EAAS,KAC3BE,EAAK,MAAM,IAAMD,EAAS,KAC1BC,EAAK,MAAM,MAAQC,EAAS,KAC5BD,EAAK,MAAM,UAAY,UAAUE,CAAK,OAEtCX,EAAO,YAAYS,CAAI,CACzB,CAEQ,WAAWT,EAAqBpH,EAAsB2H,EAAgBC,EAAgBH,EAAcC,EAAc,CACxH,MAAMI,EAAS,KAAK,KAAK,KAAK,IAAIL,EAAOE,EAAQ,CAAC,EAAI,KAAK,IAAID,EAAOE,EAAQ,CAAC,CAAC,EAC1EG,EAAQ,KAAK,MAAML,EAAOE,EAAQH,EAAOE,CAAM,EAErD3H,EAAQ,MAAM,KAAO2H,EAAS,KAC9B3H,EAAQ,MAAM,IAAM4H,EAAS,KAC7B5H,EAAQ,MAAM,MAAQ8H,EAAS,KAC/B9H,EAAQ,MAAM,OAAS,MACvBA,EAAQ,MAAM,WAAa,UAC3BA,EAAQ,MAAM,gBAAkB,cAChCA,EAAQ,MAAM,UAAY,UAAU+H,CAAK,MAC3C,CAEQ,gBAAgBX,EAAqBpH,EAAsB2H,EAAgBC,EAAgBH,EAAcC,EAAc,CAC7H,MAAMM,EAAQ,KAAK,IAAIP,EAAOE,CAAM,EAC9BM,EAAS,KAAK,IAAIP,EAAOE,CAAM,EAC/BM,EAAO,KAAK,IAAIP,EAAQF,CAAI,EAC5BU,EAAM,KAAK,IAAIP,EAAQF,CAAI,EAEjC1H,EAAQ,MAAM,KAAOkI,EAAO,KAC5BlI,EAAQ,MAAM,IAAMmI,EAAM,KAC1BnI,EAAQ,MAAM,MAAQgI,EAAQ,KAC9BhI,EAAQ,MAAM,OAASiI,EAAS,KAChCjI,EAAQ,MAAM,OAAS,oBACvBA,EAAQ,MAAM,WAAa,wBAC7B,CAEQ,aAAaoH,EAAqBpH,EAAsB2H,EAAgBC,EAAgBH,EAAcC,EAAc,CAC1H,MAAMU,EAAS,KAAK,KAAK,KAAK,IAAIX,EAAOE,EAAQ,CAAC,EAAI,KAAK,IAAID,EAAOE,EAAQ,CAAC,CAAC,EAEhF5H,EAAQ,MAAM,KAAQ2H,EAASS,EAAU,KACzCpI,EAAQ,MAAM,IAAO4H,EAASQ,EAAU,KACxCpI,EAAQ,MAAM,MAASoI,EAAS,EAAK,KACrCpI,EAAQ,MAAM,OAAUoI,EAAS,EAAK,KACtCpI,EAAQ,MAAM,OAAS,oBACvBA,EAAQ,MAAM,WAAa,yBAC3BA,EAAQ,MAAM,aAAe,KAC/B,CAEQ,YAAYoH,EAAqBpH,EAAsB2H,EAAgBC,EAAgBH,EAAcC,EAAc,CACzH,KAAK,WAAWN,EAAQpH,EAAS2H,EAAQC,EAAQH,EAAMC,CAAI,EAC3D1H,EAAQ,MAAM,YAAc,wBAC5BA,EAAQ,MAAM,WAAa,wBAC3BA,EAAQ,MAAM,UAAY,oBAC1BA,EAAQ,MAAM,MAAQ,IACtBA,EAAQ,MAAM,OAAS,IACvBA,EAAQ,MAAM,KAAOyH,EAAO,KAC5BzH,EAAQ,MAAM,IAAM0H,EAAO,KAC3B1H,EAAQ,MAAM,UAAY,UAAU,KAAK,MAAM0H,EAAOE,EAAQH,EAAOE,CAAM,CAAC,MAC9E,CAEQ,kBAAkBb,EAAkBQ,EAAWC,EAAW,CAChE,MAAMH,EAAS,SAAS,eAAe,qBAAqBN,CAAQ,EAAE,EACtE,GAAI,CAACM,EAAQ,OAEb,MAAMiB,EAAW,SAAS,cAAc,UAAU,EAClDA,EAAS,UAAY,kBACrBA,EAAS,MAAM,SAAW,WAC1BA,EAAS,MAAM,KAAOf,EAAI,KAC1Be,EAAS,MAAM,IAAMd,EAAI,KACzBc,EAAS,MAAM,OAAS,OACxBA,EAAS,MAAM,WAAa,cAC5BA,EAAS,MAAM,MAAQ,OACvBA,EAAS,MAAM,SAAW,OAC1BA,EAAS,MAAM,QAAU,MACzBA,EAAS,MAAM,SAAW,OAC1BA,EAAS,MAAM,UAAY,OAC3BA,EAAS,MAAM,OAAS,OACxBA,EAAS,MAAM,QAAU,OACzBA,EAAS,MAAM,WAAa,UAC5BA,EAAS,YAAc,UAEvBA,EAAS,iBAAiB,OAAQ,IAAM,CACjCA,EAAS,MAAM,QAClBA,EAAS,OAAA,CAEb,CAAC,EAEDA,EAAS,iBAAiB,UAAYvE,GAAM,CACtCA,EAAE,MAAQ,SAAW,CAACA,EAAE,WAC1BA,EAAE,eAAA,EACFuE,EAAS,KAAA,EAEb,CAAC,EAEDjB,EAAO,YAAYiB,CAAQ,EAC3BA,EAAS,MAAA,CACX,CAEQ,qBAAqBvB,EAAkBwB,EAAkBC,EAAkB,CACjF,KAAK,aAAazB,CAAQ,EAE1B,MAAME,EAAQ,KAAK,aAAa,IAAIF,CAAQ,EAC5C,GAAI,CAACE,GAASA,EAAM,cAAgB,MAAO,OAE3C,MAAMI,EAAS,SAAS,eAAe,qBAAqBN,CAAQ,EAAE,EACtE,GAAI,CAACM,EAAQ,OAEb,MAAMoB,EAAU,SAAS,cAAc,KAAK,EAM5C,OALAA,EAAQ,UAAY,kBACpBA,EAAQ,MAAM,SAAW,WACzBA,EAAQ,MAAM,cAAgB,OAC9BA,EAAQ,MAAM,QAAU,MAEhBxB,EAAM,YAAA,CACZ,IAAK,OACH,KAAK,WAAWI,EAAQoB,EAASxB,EAAM,OAAQA,EAAM,OAAQsB,EAAUC,CAAQ,EAC/E,MACF,IAAK,YACH,KAAK,gBAAgBnB,EAAQoB,EAASxB,EAAM,OAAQA,EAAM,OAAQsB,EAAUC,CAAQ,EACpF,MACF,IAAK,SACH,KAAK,aAAanB,EAAQoB,EAASxB,EAAM,OAAQA,EAAM,OAAQsB,EAAUC,CAAQ,EACjF,MACF,IAAK,QACH,KAAK,YAAYnB,EAAQoB,EAASxB,EAAM,OAAQA,EAAM,OAAQsB,EAAUC,CAAQ,EAChF,KAAA,EAGAC,EAAQ,MAAM,OAASA,EAAQ,MAAM,UACvCA,EAAQ,GAAK,mBAAmB1B,CAAQ,GACxCM,EAAO,YAAYoB,CAAO,EAE9B,CAEQ,aAAa1B,EAAkB,CACrC,MAAM0B,EAAU,SAAS,eAAe,mBAAmB1B,CAAQ,EAAE,EACjE0B,GACFA,EAAQ,OAAA,CAEZ,CAEQ,oBAA6B,CACniB,CAClC,MAAMyF,EAAS,SAAS,cAAc,KAAK,EAC3CA,EAAO,YAAczF,EACrByF,EAAO,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYvB,SAAS,KAAK,YAAYA,CAAM,EAChC,WAAW,IAAM,CACXA,EAAO,YACTA,EAAO,WAAW,YAAYA,CAAM,CAExC,EAAG,GAAI,CACT,CACF,CCzgCO,MAAMuC,EAA4C,CACvD,GAAI,oBACJ,KAAM,gBACN,QAAS,QACT,YAAa,iCACb,OAAQ,gBACR,aAAc,CAAA,EACd,YAAa5B,EACb,cAAe,QACf,cAAe,EACjB,ECLO,MAAM6B,CAAoB,CACvB,cACA,sBACA,gBAER,YAAYvJ,EAAsB,CAChC,KAAK,gBAAkBA,EACvB,KAAK,cAAgB,IAAIF,EAAcE,CAAe,EACtD,KAAK,sBAAwB,IAAImD,EAAgCnD,CAAe,EAChF,KAAK,mBAAA,EACL,KAAK,2BAAA,CACP,CAEQ,oBAAqB,CAE3B,KAAK,cAAc,GAAG,mBAAqBI,GAAgB,CACzD,QAAQ,IAAI,qBAAsBA,EAAO,IAAI,CAC/C,CAAC,EAED,KAAK,cAAc,GAAG,gBAAkBA,GAAgB,CACtD,QAAQ,IAAI,kBAAmBA,EAAO,IAAI,EAE1C,GAAI,CACE,KAAK,gBAAgB,cAAgB,KAAK,gBAAgB,aAAa,MACzE,KAAK,gBAAgB,aAAa,KAAK,CACrC,GAAI,kBAAkBA,EAAO,EAAE,GAC/B,MAAO,OAAOA,EAAO,IAAI,QACzB,KAAM,SAAA,CACP,CAEL,MAAgB,CACd,QAAQ,IAAI,kBAAmBA,EAAO,IAAI,CAC5C,CACF,CAAC,EAED,KAAK,cAAc,GAAG,cAAe,CAACA,EAAaP,IAAe,CAChE,QAAQ,MAAM,gBAAiBO,EAAO,KAAMP,CAAK,EAEjD,GAAI,CACE,KAAK,gBAAgB,cAAgB,KAAK,gBAAgB,aAAa,MACzE,KAAK,gBAAgB,aAAa,KAAK,CACrC,GAAI,gBAAgBO,EAAO,EAAE,GAC7B,MAAO,OAAOA,EAAO,IAAI,WAAWP,EAAM,OAAO,GACjD,KAAM,OAAA,CACP,CAEL,OAASA,EAAO,CACd,QAAQ,MAAM,gBAAiBO,EAAO,KAAMP,CAAK,CACnD,CACF,CAAC,CACH,CAEQ,4BAA6B,CAEnC,KAAK,sBAAsB,GAAG,mBAAqBO,GAAgB,CACjE,QAAQ,IAAI,yCAA0CA,EAAO,IAAI,CACnE,CAAC,EAED,KAAK,sBAAsB,GAAG,gBAAkBA,GAAgB,CAC9D,QAAQ,IAAI,sCAAuCA,EAAO,IAAI,EAE9D,GAAI,CACE,KAAK,gBAAgB,cAAgB,KAAK,gBAAgB,aAAa,MACzE,KAAK,gBAAgB,aAAa,KAAK,CACrC,GAAI,2BAA2BA,EAAO,EAAE,GACxC,MAAO,kBAAkBA,EAAO,IAAI,QACpC,KAAM,SAAA,CACP,CAEL,MAAgB,CACd,QAAQ,IAAI,sCAAuCA,EAAO,IAAI,CAChE,CACF,CAAC,EAED,KAAK,sBAAsB,GAAG,cAAe,CAACA,EAAaP,IAAe,CACxE,QAAQ,MAAM,oCAAqCO,EAAO,KAAMP,CAAK,EAErE,GAAI,CACE,KAAK,gBAAgB,cAAgB,KAAK,gBAAgB,aAAa,MACzE,KAAK,gBAAgB,aAAa,KAAK,CACrC,GAAI,yBAAyBO,EAAO,EAAE,GACtC,MAAO,kBAAkBA,EAAO,IAAI,WAAWP,EAAM,OAAO,GAC5D,KAAM,OAAA,CACP,CAEL,OAASA,EAAO,CACd,QAAQ,MAAM,oCAAqCO,EAAO,KAAMP,CAAK,CACvE,CACF,CAAC,CACH,CAKA,MAAM,YAAa,CACjB,QAAQ,IAAI,+BAA+B,EAG3C,MAAM,KAAK,uBAAA,EAGX,MAAM,KAAK,wBAAA,EAGX,MAAM,KAAK,iBAAA,EAEX,QAAQ,IAAI,2BAA2B,CACzC,CAKA,MAAc,wBAAyB,CAErC,MAAM,KAAK,cAAc,eAAeyG,EAAmBA,EAAkB,WAAW,EAGxF,MAAM,KAAK,cAAc,eAAemB,EAAqBA,EAAoB,WAAW,EAG5F,MAAM,KAAK,cAAc,eAAe6B,EAA0BA,EAAyB,WAAW,CAMxG,CAKA,MAAc,yBAA0B,CAEtC,MAAM,KAAK,sBAAsB,uBAC/BhC,EACAA,EAAwB,WAAA,CAI5B,CAKA,MAAc,kBAAmB,CAE/B,MAAMkC,EAAU,KAAK,cAAc,cAAA,EACnC,UAAWpJ,KAAUoJ,EACnB,GAAI,CACF,MAAM,KAAK,cAAc,aAAapJ,EAAO,EAAE,CACjD,OAASP,EAAO,CACd,QAAQ,MAAM,2BAA2BO,EAAO,EAAE,IAAKP,CAAK,CAC9D,CAIF,MAAM4J,EAAkB,KAAK,sBAAsB,cAAA,EACnD,UAAWrJ,KAAUqJ,EACnB,GAAI,CACF,MAAM,KAAK,sBAAsB,qBAAqBrJ,EAAO,EAAE,CACjE,OAASP,EAAO,CACd,QAAQ,MAAM,oCAAoCO,EAAO,EAAE,IAAKP,CAAK,CACvE,CAEJ,CAKA,kBAAkC,CAChC,OAAO,KAAK,aACd,CAKA,0BAA4D,CAC1D,OAAO,KAAK,qBACd,CAKA,eAAgB,CACd,MAAM6J,EAAqB,KAAK,cAAc,cAAA,EACxCD,EAAkB,KAAK,sBAAsB,cAAA,EACnD,MAAO,CAAC,GAAGC,EAAoB,GAAGD,CAAe,CACnD,CAKA,mBAAoB,CAClB,MAAMC,EAAqB,KAAK,cAAc,kBAAA,EACxCD,EAAkB,KAAK,sBAAsB,kBAAA,EACnD,MAAO,CAAC,GAAGC,EAAoB,GAAGD,CAAe,CACnD,CAKA,gBAAiB,CACf,OAAO,KAAK,sBAAsB,OAAA,CACpC,CACF,CChNO,MAAME,EAA4B,CACrC,GAAI,gBACJ,KAAM,gBACN,YAAa,CACT,CAACC,EAAgB,OAAO,EAAG,CAAA,CAAC,EAEhC,SAASC,EAA4BC,EAAS,CAC1C,QAAQ,IAAI,yBAAyB,EAErC,IAAIC,EAA2C,KAG/CF,EAAS,OAAO,gBAAgB,EAAI,EAGpC,WAAW,IAAM,CACb,GAAI,CACAA,EAAS,aAAa,IAAI,CACtB,GAAI,eACJ,KAAM,QACN,KAAM,YACN,OAAQ,IAAM1F,EAAM,cAAc,MAAO,CACrC,MAAO,CACH,QAAS,OACT,MAAO,UACP,gBAAiB,UACjB,OAAQ,MAAA,CACZ,EACD,CACCA,EAAM,cAAc,KAAM,CAAE,IAAK,OAAA,EAAW,OAAO,EACnDA,EAAM,cAAc,IAAK,CAAE,IAAK,SAAA,EAAa,2BAA2B,EACxEA,EAAM,cAAc,IAAK,CAAE,IAAK,QAAA,EAAY,UAAU,CAAA,CACzD,CAAA,CACJ,EAGD0F,EAAS,aAAa,WAAW,cAAc,EAG/CA,EAAS,OAAO,gBAAgB,EAAI,EAEpC,QAAQ,IAAI,qCAAqC,EACjD,QAAQ,IAAI,qCAAqC,CACrD,OAAShK,EAAO,CACZ,QAAQ,MAAM,+CAAgDA,CAAK,CACvE,CACJ,EAAG,GAAI,EAGPgK,EAAS,YAAY,IAAI,CACrB,GAAI,WACJ,KAAM,OACN,UAAW,MACX,UAAW,EACX,KAAM,QAAA,CACT,EAEDA,EAAS,YAAY,IAAI,CACrB,GAAI,gBACJ,KAAM,OACN,UAAW,MACX,UAAW,EACX,KAAM,QAAA,CACT,EAGDA,EAAS,QAAQ,IAAI,CACjB,GAAI,WACJ,KAAM,OACN,OAAQ,IAAM1F,EAAM,cAAc,MAAO,CACrC,MAAO,CACH,QAAS,OACT,MAAO,UACP,gBAAiB,UACjB,OAAQ,MAAA,CACZ,EACD,CACCA,EAAM,cAAc,KAAM,CAAE,IAAK,OAAA,EAAW,MAAM,EAClDA,EAAM,cAAc,IAAK,CAAE,IAAK,SAAA,EAAa,kCAAkC,EAC/EA,EAAM,cAAc,IAAK,CAAE,IAAK,QAAA,EAAY,UAAU,CAAA,CACzD,CAAA,CACJ,EAGD,WAAW,IAAM,CACb,GAAI,CACA,QAAQ,IAAI,0CAA0C,EACtD4F,EAAe,IAAIR,EAAoBM,CAAQ,EAC/CE,EAAa,aAAa,KAAK,IAAM,CACjC,QAAQ,IAAI,wCAAwC,CACxD,CAAC,EAAE,MAAOlK,GAAe,CACrB,QAAQ,MAAM,sCAAuCA,CAAK,CAC9D,CAAC,CACL,OAASA,EAAO,CACZ,QAAQ,MAAM,kCAAmCA,CAAK,CAC1D,CACJ,EAAG,GAAI,EAGP,WAAW,IAAM,CACbgK,EAAS,QAAQ,IAAI,CACjB,GAAI,gBACJ,KAAM,OACN,OAAQ,IAAM1F,EAAM,cAAc,MAAO,CACrC,MAAO,CACH,QAAS,OACT,MAAO,UACP,gBAAiB,UACjB,OAAQ,MAAA,CACZ,EACD,CACCA,EAAM,cAAc,KAAM,CAAE,IAAK,OAAA,EAAW,MAAM,EAClDA,EAAM,cAAc,IAAK,CAAE,IAAK,WAAa,YAAc4F,EAAe,OAAS,OAAO,EAC1F5F,EAAM,cAAc,IAAK,CAAE,IAAK,SAAA,EAAa,qBAAqB,EAClEA,EAAM,cAAc,SAAU,CAC1B,IAAK,UACL,QAAS,IAAM,CACX,QAAQ,IAAI,QAAQ,EACpB,OAAO,SAAS,OAAA,CACpB,EACA,MAAO,CACH,QAAS,WACT,gBAAiB,UACjB,MAAO,QACP,OAAQ,OACR,aAAc,MACd,OAAQ,UACR,UAAW,MAAA,CACf,EACD,IAAI,CAAA,CACV,CAAA,CACJ,CACL,EAAG,GAAI,EAEP,QAAQ,IAAI,+BAA+B,CAC/C,CACJ"}