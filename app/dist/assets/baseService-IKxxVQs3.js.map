{"version":3,"file":"baseService-IKxxVQs3.js","sources":["../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_arrayEach.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_initCloneArray.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_cloneDataView.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_cloneRegExp.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_cloneSymbol.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_initCloneByTag.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIsMap.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isMap.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIsSet.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isSet.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseClone.js","../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/cloneDeepWith.js","../../../esm/glue/baseService.js"],"sourcesContent":["/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */\nfunction cloneDeepWith(value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n}\n\nexport default cloneDeepWith;\n","import { produce } from \"immer\";\nimport { cloneDeepWith } from \"lodash-es\";\nimport GlobalEvent from \"./event\";\nclass BaseService extends GlobalEvent {\n  constructor(name) {\n    super();\n    this.name = name;\n  }\n  dispatch(recipe, didRender) {\n    const base = { ...this.state };\n    const next = produce(base, recipe);\n    if (next !== base) {\n      this.render(next);\n      this.state = next;\n      didRender?.();\n    }\n  }\n  /**\n   * Set the state values, and notify the view component to re render\n   * @param values update target state values\n   * @FIXME Should support batchUpdate based on fiber\n   */\n  setState(values, callback) {\n    let nextState = this.state;\n    if (typeof values === \"function\") {\n      nextState = { ...this.state, ...values(this.state) };\n    } else {\n      nextState = { ...this.state, ...values };\n    }\n    nextState = cloneDeepWith(nextState, (value) => {\n      if (value && typeof value === \"object\" && \"uri\" in value) {\n        return value;\n      }\n    });\n    this.render(nextState);\n    const prev = this.state;\n    this.state = nextState;\n    callback?.(prev, this.state);\n  }\n  _renderRecord = {};\n  /**\n   * Initiative notify the component to render the view by the state\n   * @param nextState\n   */\n  render(nextState) {\n    this._renderRecord.prev ??= this.state;\n    this._renderRecord.next = nextState;\n    window.queueMicrotask(() => {\n      this.emit(this.name, this._renderRecord.prev, this._renderRecord.next);\n      this._renderRecord = {};\n    });\n  }\n  onUpdateState(listener) {\n    this.subscribe(this.name, listener);\n  }\n  removeOnUpdateState(listener) {\n    this.unsubscribe(this.name, listener);\n  }\n  forceUpdate() {\n    this.setState({ ...this.state });\n  }\n  getState() {\n    return this.state;\n  }\n}\nexport {\n  BaseService as default\n};\n"],"names":["arrayEach","array","iteratee","index","length","objectProto","hasOwnProperty","initCloneArray","result","cloneDataView","dataView","isDeep","buffer","cloneArrayBuffer","reFlags","cloneRegExp","regexp","symbolProto","Symbol","symbolValueOf","cloneSymbol","symbol","boolTag","dateTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","initCloneByTag","object","tag","Ctor","cloneTypedArray","baseIsMap","value","isObjectLike","getTag","nodeIsMap","nodeUtil","isMap","baseUnary","baseIsSet","nodeIsSet","isSet","CLONE_DEEP_FLAG","argsTag","arrayTag","errorTag","funcTag","genTag","objectTag","weakMapTag","cloneableTags","baseClone","bitmask","customizer","key","stack","isObject","isArr","isArray","isFunc","isBuffer","cloneBuffer","initCloneObject","Stack","stacked","subValue","keysFunc","getAllKeys","props","assignValue","CLONE_SYMBOLS_FLAG","cloneDeepWith","BaseService","GlobalEvent","name","recipe","didRender","base","next","produce","values","callback","nextState","prev","listener"],"mappings":"yKASA,SAASA,EAAUC,EAAOC,EAAU,CAIlC,QAHIC,EAAQ,GACRC,EAASH,GAAS,KAAO,EAAIA,EAAM,OAEhC,EAAEE,EAAQC,GACXF,EAASD,EAAME,CAAK,EAAGA,EAAOF,CAAK,IAAM,IAA7C,CAIF,OAAOA,CACT,CClBA,IAAII,EAAc,OAAO,UAGrBC,EAAiBD,EAAY,eASjC,SAASE,EAAeN,EAAO,CAC7B,IAAIG,EAASH,EAAM,OACfO,EAAS,IAAIP,EAAM,YAAYG,CAAM,EAGzC,OAAIA,GAAU,OAAOH,EAAM,CAAC,GAAK,UAAYK,EAAe,KAAKL,EAAO,OAAO,IAC7EO,EAAO,MAAQP,EAAM,MACrBO,EAAO,MAAQP,EAAM,OAEhBO,CACT,CCbA,SAASC,EAAcC,EAAUC,EAAQ,CACvC,IAAIC,EAAkBC,EAAiBH,EAAS,MAAM,EACtD,OAAO,IAAIA,EAAS,YAAYE,EAAQF,EAAS,WAAYA,EAAS,UAAU,CAClF,CCZA,IAAII,EAAU,OASd,SAASC,EAAYC,EAAQ,CAC3B,IAAIR,EAAS,IAAIQ,EAAO,YAAYA,EAAO,OAAQF,EAAQ,KAAKE,CAAM,CAAC,EACvE,OAAAR,EAAO,UAAYQ,EAAO,UACnBR,CACT,CCXA,IAAIS,EAAcC,EAASA,EAAO,UAAY,OAC1CC,EAAgBF,EAAcA,EAAY,QAAU,OASxD,SAASG,EAAYC,EAAQ,CAC3B,OAAOF,EAAgB,OAAOA,EAAc,KAAKE,CAAM,CAAC,EAAI,CAAA,CAC9D,CCRA,IAAIC,EAAU,mBACVC,EAAU,gBACVC,EAAS,eACTC,EAAY,kBACZC,GAAY,kBACZC,GAAS,eACTC,GAAY,kBACZC,GAAY,kBAEZC,GAAiB,uBACjBC,GAAc,oBACdC,GAAa,wBACbC,GAAa,wBACbC,GAAU,qBACVC,GAAW,sBACXC,GAAW,sBACXC,GAAW,sBACXC,GAAkB,6BAClBC,GAAY,uBACZC,GAAY,uBAchB,SAASC,GAAeC,EAAQC,EAAKhC,EAAQ,CAC3C,IAAIiC,EAAOF,EAAO,YAClB,OAAQC,EAAG,CACT,KAAKb,GACH,OAAOjB,EAAiB6B,CAAM,EAEhC,KAAKpB,EACL,KAAKC,EACH,OAAO,IAAIqB,EAAK,CAACF,CAAM,EAEzB,KAAKX,GACH,OAAOtB,EAAciC,CAAc,EAErC,KAAKV,GAAY,KAAKC,GACtB,KAAKC,GAAS,KAAKC,GAAU,KAAKC,GAClC,KAAKC,GAAU,KAAKC,GAAiB,KAAKC,GAAW,KAAKC,GACxD,OAAOK,EAAgBH,EAAQ/B,CAAM,EAEvC,KAAKa,EACH,OAAO,IAAIoB,EAEb,KAAKnB,EACL,KAAKG,GACH,OAAO,IAAIgB,EAAKF,CAAM,EAExB,KAAKhB,GACH,OAAOX,EAAY2B,CAAM,EAE3B,KAAKf,GACH,OAAO,IAAIiB,EAEb,KAAKf,GACH,OAAOT,EAAYsB,CAAM,CAC/B,CACA,CCtEA,IAAIlB,GAAS,eASb,SAASsB,GAAUC,EAAO,CACxB,OAAOC,EAAaD,CAAK,GAAKE,EAAOF,CAAK,GAAKvB,EACjD,CCVA,IAAI0B,EAAYC,GAAYA,EAAS,MAmBjCC,GAAQF,EAAYG,EAAUH,CAAS,EAAIJ,GCpB3CnB,GAAS,eASb,SAAS2B,GAAUP,EAAO,CACxB,OAAOC,EAAaD,CAAK,GAAKE,EAAOF,CAAK,GAAKpB,EACjD,CCVA,IAAI4B,EAAYJ,GAAYA,EAAS,MAmBjCK,GAAQD,EAAYF,EAAUE,CAAS,EAAID,GCA3CG,GAAkB,EAKlBC,EAAU,qBACVC,GAAW,iBACXrC,GAAU,mBACVC,GAAU,gBACVqC,GAAW,iBACXC,EAAU,oBACVC,GAAS,6BACTtC,GAAS,eACTC,GAAY,kBACZsC,EAAY,kBACZrC,GAAY,kBACZC,GAAS,eACTC,GAAY,kBACZC,GAAY,kBACZmC,GAAa,mBAEblC,GAAiB,uBACjBC,GAAc,oBACdC,GAAa,wBACbC,GAAa,wBACbC,GAAU,qBACVC,GAAW,sBACXC,GAAW,sBACXC,GAAW,sBACXC,GAAkB,6BAClBC,GAAY,uBACZC,GAAY,uBAGZyB,EAAgB,CAAA,EACpBA,EAAcP,CAAO,EAAIO,EAAcN,EAAQ,EAC/CM,EAAcnC,EAAc,EAAImC,EAAclC,EAAW,EACzDkC,EAAc3C,EAAO,EAAI2C,EAAc1C,EAAO,EAC9C0C,EAAcjC,EAAU,EAAIiC,EAAchC,EAAU,EACpDgC,EAAc/B,EAAO,EAAI+B,EAAc9B,EAAQ,EAC/C8B,EAAc7B,EAAQ,EAAI6B,EAAczC,EAAM,EAC9CyC,EAAcxC,EAAS,EAAIwC,EAAcF,CAAS,EAClDE,EAAcvC,EAAS,EAAIuC,EAActC,EAAM,EAC/CsC,EAAcrC,EAAS,EAAIqC,EAAcpC,EAAS,EAClDoC,EAAc5B,EAAQ,EAAI4B,EAAc3B,EAAe,EACvD2B,EAAc1B,EAAS,EAAI0B,EAAczB,EAAS,EAAI,GACtDyB,EAAcL,EAAQ,EAAIK,EAAcJ,CAAO,EAC/CI,EAAcD,EAAU,EAAI,GAkB5B,SAASE,EAAUnB,EAAOoB,EAASC,EAAYC,EAAK3B,EAAQ4B,EAAO,CAC9D,IAAC9D,EACAG,EAASwD,EAAUV,GAOvB,GAHIW,IACF5D,EAASkC,EAAS0B,EAAWrB,EAAOsB,EAAK3B,EAAQ4B,CAAK,EAAIF,EAAWrB,CAAK,GAExEvC,IAAW,OACb,OAAOA,EAET,GAAI,CAAC+D,EAASxB,CAAK,EACjB,OAAOA,EAET,IAAIyB,EAAQC,EAAQ1B,CAAK,EACzB,GAAIyB,EACFhE,EAASD,EAAewC,CAAK,MAIxB,CACL,IAAIJ,EAAMM,EAAOF,CAAK,EAClB2B,EAAS/B,GAAOkB,GAAWlB,GAAOmB,GAEtC,GAAIa,EAAS5B,CAAK,EAChB,OAAO6B,EAAY7B,EAAOpC,CAAM,EAElC,GAAIgC,GAAOoB,GAAapB,GAAOe,GAAYgB,GAAU,CAAChC,EACpDlC,EAAoBkE,EAAU,GAAKG,EAAgB9B,CAAK,MAMnD,CACL,GAAI,CAACkB,EAActB,CAAG,EACpB,OAAOD,EAASK,EAAQ,CAAA,EAE1BvC,EAASiC,GAAeM,EAAOJ,EAAKhC,CAAM,CAC5C,CACF,CAEA2D,IAAUA,EAAQ,IAAIQ,GACtB,IAAIC,EAAUT,EAAM,IAAIvB,CAAK,EAC7B,GAAIgC,EACF,OAAOA,EAETT,EAAM,IAAIvB,EAAOvC,CAAM,EAEnBgD,GAAMT,CAAK,EACbA,EAAM,QAAQ,SAASiC,EAAU,CAC/BxE,EAAO,IAAI0D,EAAUc,EAAUb,EAASC,EAAYY,EAAUjC,EAAOuB,CAAK,CAAC,CAC7E,CAAC,EACQlB,GAAML,CAAK,GACpBA,EAAM,QAAQ,SAASiC,EAAUX,EAAK,CACpC7D,EAAO,IAAI6D,EAAKH,EAAUc,EAAUb,EAASC,EAAYC,EAAKtB,EAAOuB,CAAK,CAAC,CAC7E,CAAC,EAGH,IAAIW,EACyBC,EAGzBC,EAAQX,EAAQ,OAAYS,EAASlC,CAAK,EAC9C,OAAA/C,EAAUmF,GAASpC,EAAO,SAASiC,EAAUX,EAAK,CAC5Cc,IACFd,EAAMW,EACNA,EAAWjC,EAAMsB,CAAG,GAGtBe,EAAY5E,EAAQ6D,EAAKH,EAAUc,EAAUb,EAASC,EAAYC,EAAKtB,EAAOuB,CAAK,CAAC,CACtF,CAAC,EACM9D,CACT,CChKA,IAAIiD,GAAkB,EAClB4B,GAAqB,EA8BzB,SAASC,GAAcvC,EAAOqB,EAAY,CACxC,OAAAA,EAAa,OAAOA,GAAc,WAAaA,EAAa,OACrDF,EAAUnB,EAAOU,GAAkB4B,GAAoBjB,CAAU,CAC1E,CClCA,MAAMmB,WAAoBC,CAAY,CACpC,YAAYC,EAAM,CAChB,MAAK,EACL,KAAK,KAAOA,CACd,CACA,SAASC,EAAQC,EAAW,CAC1B,MAAMC,EAAO,CAAE,GAAG,KAAK,KAAK,EACtBC,EAAOC,EAAQF,EAAMF,CAAM,EAC7BG,IAASD,IACX,KAAK,OAAOC,CAAI,EAChB,KAAK,MAAQA,EACbF,IAAS,EAEb,CAMA,SAASI,EAAQC,EAAU,CACzB,IAAIC,EAAY,KAAK,MACjB,OAAOF,GAAW,WACpBE,EAAY,CAAE,GAAG,KAAK,MAAO,GAAGF,EAAO,KAAK,KAAK,CAAC,EAElDE,EAAY,CAAE,GAAG,KAAK,MAAO,GAAGF,CAAM,EAExCE,EAAYX,GAAcW,EAAYlD,GAAU,CAC9C,GAAIA,GAAS,OAAOA,GAAU,UAAY,QAASA,EACjD,OAAOA,CAEX,CAAC,EACD,KAAK,OAAOkD,CAAS,EACrB,MAAMC,EAAO,KAAK,MAClB,KAAK,MAAQD,EACbD,IAAWE,EAAM,KAAK,KAAK,CAC7B,CACA,cAAgB,CAAA,EAKhB,OAAOD,EAAW,CAChB,KAAK,cAAc,OAAS,KAAK,MACjC,KAAK,cAAc,KAAOA,EAC1B,OAAO,eAAe,IAAM,CAC1B,KAAK,KAAK,KAAK,KAAM,KAAK,cAAc,KAAM,KAAK,cAAc,IAAI,EACrE,KAAK,cAAgB,CAAA,CACvB,CAAC,CACH,CACA,cAAcE,EAAU,CACtB,KAAK,UAAU,KAAK,KAAMA,CAAQ,CACpC,CACA,oBAAoBA,EAAU,CAC5B,KAAK,YAAY,KAAK,KAAMA,CAAQ,CACtC,CACA,aAAc,CACZ,KAAK,SAAS,CAAE,GAAG,KAAK,KAAK,CAAE,CACjC,CACA,UAAW,CACT,OAAO,KAAK,KACd,CACF","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}