import{I as a,f as d,g as o,S as g,h as v,i as C,j as l,k as c,l as h,m,n as p,o as u,p as I,q as E,r as _,s as w,t as R,u as y,v as T,w as k,x,y as D,z as O,A as f,O as b,Q as j,B as P,E as Q}from"./editor.api-ZhmqmMMK.js";import{i as q,a as A}from"./index-Cz3doEcl.js";import"./react-vendor-Bs7gn1Hv.js";import"./monaco-vendor-Dv-Uvxl1.js";var K=Object.getOwnPropertyDescriptor,L=(t,r,i,e)=>{for(var s=e>1?void 0:e?K(r,i):r,n=t.length-1,S;n>=0;n--)(S=t[n])&&(s=S(s)||s);return s},W=(t,r)=>(i,e)=>r(i,e,t);let M=class{constructor(t){this.colorTheme=t}_services;simpleEditorModelResolverService=null;_container;initWorkspace(t){this._container=t,this._services=this.createStandaloneServices()}get container(){return this._container}get services(){return this._services}get commandService(){return this.services.get(a)}get QuickInputService(){return this.services.get(d)}mergeEditorServices(t){if(t){const r=this.services;for(const i in t)i&&r.get(i)&&t[i]&&r.set(i,t[i])}}create(t,r,i){const e=this.services;this.mergeEditorServices(i),e.has(o)||(this.simpleEditorModelResolverService=new g(v.modelService.get()),e.set(o,this.simpleEditorModelResolverService));const s=new C(t,r,e,e.get(l),e.get(c),e.get(a),e.get(h),e.get(m),e.get(p),e.get(u),e.get(I),e.get(E),e.get(_),e.get(w),e.get(R));return this.simpleEditorModelResolverService&&this.simpleEditorModelResolverService.setEditor(s),this.colorTheme.setCurrent(this.colorTheme.getCurrent()),s}createDiffEditor(t,r,i){const e=this.services;this.mergeEditorServices(i),e.has(o)||(this.simpleEditorModelResolverService=new g(v.modelService.get()),e.set(o,this.simpleEditorModelResolverService));const s=new y(t,r,e,e.get(l),e.get(h),e.get(m),e.get(p),e.get(T),e.get(c),e.get(u),e.get(I),e.get(E),e.get(k),e.get(x),e.get(D));return this.simpleEditorModelResolverService&&this.simpleEditorModelResolverService.setEditor(s),this.colorTheme.setCurrent(this.colorTheme.getCurrent()),s}dispose(){}createStandaloneServices(){const t=new O(this.container),r=t.get(l);t.has(f)||t.set(f,new b(t.get(c),t.get(a)));const i=r.createInstance(j),e=new P(v.codeEditorService.get(c),this.container);return t.set(Q,e),t.set(d,i),this.dispose=t.dispose,t.dispose=()=>{},t}};M=L([q(),W(0,A("colorTheme"))],M);export{M as MonacoService};
//# sourceMappingURL=monaco-bBY_BnLh.js.map
