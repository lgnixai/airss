{"version":3,"file":"index-CtdfGaBQ.js","sources":["../../../esm/client/components/monaco/index.js"],"sourcesContent":["import { jsx } from \"react/jsx-runtime\";\nimport { useEffect, useRef } from \"react\";\nimport useMonaco from \"../../hooks/useMonaco\";\nimport { editor } from \"../../../monaco\";\nfunction MonacoEditor({\n  className,\n  style,\n  instance,\n  options = {},\n  model,\n  language,\n  value,\n  override,\n  onMount,\n  onModelMount\n}) {\n  const parent = useRef(null);\n  const monaco = useMonaco();\n  function createDom() {\n    const dom = document.createElement(\"div\");\n    dom.style.setProperty(\"position\", \"relative\");\n    dom.style.setProperty(\"width\", \"100%\");\n    dom.style.setProperty(\"height\", \"100%\");\n    return dom;\n  }\n  useEffect(() => {\n    if (!parent.current)\n      return;\n    const container = instance?.getContainerDomNode();\n    if (container) {\n      if (parent.current.firstChild === container)\n        return;\n      parent.current.innerHTML = \"\";\n      parent.current.appendChild(container);\n    } else {\n      const domElement = createDom();\n      const editorInstance = monaco.create(domElement, { ...options, model: null, language, value }, override);\n      onMount?.(editorInstance);\n    }\n  }, [instance]);\n  useEffect(() => {\n    if (instance) {\n      instance.updateOptions(options);\n    }\n  }, [options]);\n  useEffect(() => {\n    if (instance) {\n      if (!model || model.isDisposed()) {\n        const model2 = editor.createModel(value || \"\", language);\n        if (model2) {\n          instance.setModel(model2);\n          onModelMount?.(model2);\n        }\n      } else {\n        const currentModel = instance.getModel();\n        if (model === currentModel)\n          return;\n        instance.setModel(model);\n      }\n    }\n  }, [model, instance]);\n  return /* @__PURE__ */ jsx(\n    \"div\",\n    {\n      ref: parent,\n      className,\n      style: {\n        height: \"100%\",\n        width: \"100%\",\n        ...style\n      }\n    }\n  );\n}\nexport {\n  MonacoEditor as default\n};\n"],"names":["MonacoEditor","className","style","instance","options","model","language","value","override","onMount","onModelMount","parent","useRef","monaco","useMonaco","createDom","dom","useEffect","container","domElement","editorInstance","model2","editor","currentModel","jsx"],"mappings":"iNAIA,SAASA,EAAa,CACpB,UAAAC,EACA,MAAAC,EACA,SAAAC,EACA,QAAAC,EAAU,CAAA,EACV,MAAAC,EACA,SAAAC,EACA,MAAAC,EACA,SAAAC,EACA,QAAAC,EACA,aAAAC,CACF,EAAG,CACD,MAAMC,EAASC,EAAAA,OAAO,IAAI,EACpBC,EAASC,EAAS,EACxB,SAASC,GAAY,CACnB,MAAMC,EAAM,SAAS,cAAc,KAAK,EACxC,OAAAA,EAAI,MAAM,YAAY,WAAY,UAAU,EAC5CA,EAAI,MAAM,YAAY,QAAS,MAAM,EACrCA,EAAI,MAAM,YAAY,SAAU,MAAM,EAC/BA,CACT,CACAC,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAI,CAACN,EAAO,QACV,OACF,MAAMO,EAAYf,GAAU,oBAAmB,EAC/C,GAAIe,EAAW,CACb,GAAIP,EAAO,QAAQ,aAAeO,EAChC,OACFP,EAAO,QAAQ,UAAY,GAC3BA,EAAO,QAAQ,YAAYO,CAAS,CACtC,KAAO,CACL,MAAMC,EAAaJ,EAAS,EACtBK,EAAiBP,EAAO,OAAOM,EAAY,CAAE,GAAGf,EAAS,MAAO,KAAM,SAAAE,EAAU,MAAAC,CAAK,EAAIC,CAAQ,EACvGC,IAAUW,CAAc,CAC1B,CACF,EAAG,CAACjB,CAAQ,CAAC,EACbc,EAAAA,UAAU,IAAM,CACVd,GACFA,EAAS,cAAcC,CAAO,CAElC,EAAG,CAACA,CAAO,CAAC,EACZa,EAAAA,UAAU,IAAM,CACd,GAAId,EACF,GAAI,CAACE,GAASA,EAAM,aAAc,CAChC,MAAMgB,EAASC,EAAO,YAAYf,GAAS,GAAID,CAAQ,EACnDe,IACFlB,EAAS,SAASkB,CAAM,EACxBX,IAAeW,CAAM,EAEzB,KAAO,CACL,MAAME,EAAepB,EAAS,SAAQ,EACtC,GAAIE,IAAUkB,EACZ,OACFpB,EAAS,SAASE,CAAK,CACzB,CAEJ,EAAG,CAACA,EAAOF,CAAQ,CAAC,EACGqB,EAAAA,IACrB,MACA,CACE,IAAKb,EACL,UAAAV,EACA,MAAO,CACL,OAAQ,OACR,MAAO,OACP,GAAGC,CACX,CACA,CACA,CACA"}