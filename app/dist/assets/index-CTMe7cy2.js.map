{"version":3,"file":"index-CTMe7cy2.js","sources":["../../../esm/client/components/text/style__variables.js","../../../esm/client/components/text/index.js","../../../esm/client/slots/search/style__variables.js","../../../esm/client/slots/search/index.js"],"sourcesContent":["export default {\n  text: \"mo-text\",\n  active: \"mo-text--match\",\n}","import { Fragment, jsx } from \"react/jsx-runtime\";\nimport { Fragment as Fragment2 } from \"react\";\nimport { classNames } from \"../../classNames\";\nimport \"./index.css\";\nimport variables from \"./style__variables.js\";\nfunction Text({ highlight, children }) {\n  if (!highlight)\n    return /* @__PURE__ */ jsx(Fragment, { children });\n  let lastIdx = 0;\n  let idx = children.toLocaleLowerCase().indexOf(highlight.toLocaleLowerCase(), lastIdx);\n  const frag = [];\n  while (idx !== -1 && frag.length <= 4) {\n    frag.push(/* @__PURE__ */ jsx(Fragment, { children: children.toLocaleLowerCase().substring(lastIdx, idx) }));\n    frag.push(\n      /* @__PURE__ */ jsx(\"span\", { className: classNames(variables.text, variables.active), children: children.substring(idx, idx + highlight.length) })\n    );\n    lastIdx = idx;\n    idx = children.toLocaleLowerCase().indexOf(highlight.toLocaleLowerCase(), lastIdx + 1);\n  }\n  if (lastIdx) {\n    frag.push(/* @__PURE__ */ jsx(Fragment, { children: children.substring(lastIdx + highlight.length) }));\n  }\n  return /* @__PURE__ */ jsx(Fragment, { children: frag.map((f, idx2) => /* @__PURE__ */ jsx(Fragment2, { children: f }, idx2)) });\n}\nexport {\n  Text as default\n};\n","export default {\n  container: \"mo-search\",\n  widget: \"mo-search__widget\",\n  result: \"mo-search__result\",\n  tip: \"mo-search__tip\",\n}","import { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport { useMemo, useTransition } from \"react\";\nimport { classNames } from \"../../classNames\";\nimport { Input, ScrollBar, Text, Tree } from \"../../components\";\nimport { useConnector, useLocale } from \"../../hooks\";\nimport { FileTypes, SearchMode } from \"../../../types\";\nimport { find, matchKeyword } from \"../../../utils\";\nimport { TreeNodeModel } from \"../../../utils/tree\";\nimport \"./index.css\";\nimport variables from \"./style__variables.js\";\nfunction Search({ onChange, onSearch, onEnter, onSelect }) {\n  const builtin = useConnector(\"builtin\");\n  const search = useConnector(\"search\");\n  const localize = useLocale();\n  const placeholder = localize(builtin.constants.SIDEBAR_ITEM_SEARCH, \"Search\");\n  const [_, startTransition] = useTransition();\n  const handleChange = (value) => {\n    startTransition(() => {\n      onChange?.(value);\n      onSearch?.(value);\n    });\n  };\n  const renderTip = () => {\n    if (!search.value)\n      return null;\n    if (!search.result.total)\n      return localize(builtin.constants.SEARCH_ITEM_NOT_FOUND, \"No results found.\");\n    const fileCount = search.result.results.reduce((acc, cur) => {\n      acc.add(cur.filename);\n      return acc;\n    }, /* @__PURE__ */ new Set()).size;\n    return localize(builtin.constants.SEARCH_ITEM_RESULT_TIP, \"\", search.result.total, fileCount);\n  };\n  const data = useMemo(() => {\n    if (!search.result.total)\n      return [];\n    if (search.mode === SearchMode.list) {\n      return search.result.results.reduce((acc, cur) => {\n        const target = find(\n          acc,\n          (i) => i.id === cur.filename,\n          new TreeNodeModel(cur.filename, cur.filename, FileTypes.Folder, [], cur.icon, void 0)\n        );\n        target.children ??= [];\n        target.children.push(\n          new TreeNodeModel(cur.id, cur.data || \"\", FileTypes.File, void 0, void 0, cur.disabled, cur)\n        );\n        return acc;\n      }, []);\n    } else {\n      const treeNodeMap = /* @__PURE__ */ new Map();\n      const result = [];\n      search.result.results.forEach((cur) => {\n        if (!treeNodeMap.has(cur.filename)) {\n          const nodes = cur.filename.split(\"/\");\n          nodes.forEach((node, index) => {\n            if (index === 0) {\n              if (!treeNodeMap.has(node)) {\n                const n = new TreeNodeModel(node, node, FileTypes.Folder, []);\n                treeNodeMap.set(node, n);\n                result.push(n);\n              }\n            } else {\n              const curPath = nodes.slice(0, index + 1).join(\"/\");\n              const lastPath = nodes.slice(0, index).join(\"/\");\n              if (!treeNodeMap.has(curPath)) {\n                const parent = treeNodeMap.get(lastPath);\n                if (!parent)\n                  return;\n                parent.children ??= [];\n                const n = new TreeNodeModel(curPath, node, FileTypes.Folder, []);\n                treeNodeMap.set(curPath, n);\n                parent.children.push(n);\n              }\n            }\n          });\n        }\n        const item = treeNodeMap.get(cur.filename);\n        if (!item)\n          return;\n        item.icon = cur.icon;\n        item.children ??= [];\n        item.children.push(\n          new TreeNodeModel(cur.id, cur.data || \"\", FileTypes.File, void 0, void 0, cur.disabled, cur)\n        );\n      });\n      return result;\n    }\n  }, [search.mode, search.result.total, search.result.results]);\n  const expandedKeys = useMemo(() => {\n    if (!search.result.total)\n      return [];\n    if (search.mode === SearchMode.list) {\n      return search.expandedKeys;\n    } else {\n      return Array.from(\n        search.expandedKeys.reduce((acc, cur) => {\n          const nodes = cur.split(\"/\");\n          nodes.forEach((_2, index) => {\n            const curPath = nodes.slice(0, index + 1).join(\"/\");\n            acc.add(curPath);\n          });\n          return acc;\n        }, /* @__PURE__ */ new Set())\n      );\n    }\n  }, [search.mode, search.result.total, search.expandedKeys]);\n  const ResultComp = useMemo(() => {\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(\"span\", { className: variables.tip, children: renderTip() }),\n      /* @__PURE__ */ jsx(ScrollBar, { isShowShadow: true, children: /* @__PURE__ */ jsx(\n        Tree,\n        {\n          className: variables.result,\n          expandedKeys,\n          data,\n          onSelect,\n          draggable: false,\n          renderTitle: (node) => {\n            if (node.fileType === \"File\") {\n              const val = search.value;\n              const rows = node.name.split(\"\\n\");\n              const curRow = rows.find(\n                (r) => r.toLocaleLowerCase().includes(val.toLocaleLowerCase())\n              );\n              if (!curRow)\n                return node.name;\n              return /* @__PURE__ */ jsx(\"span\", { title: node.name, children: /* @__PURE__ */ jsx(Text, { highlight: val, children: matchKeyword(curRow, val) }) });\n            }\n            return node.name;\n          }\n        }\n      ) })\n    ] });\n  }, [expandedKeys, data]);\n  return /* @__PURE__ */ jsxs(\"section\", { className: variables.container, children: [\n    /* @__PURE__ */ jsx(\n      Input,\n      {\n        autoFocus: true,\n        value: search.value,\n        className: classNames(variables.widget),\n        info: search.validateInfo,\n        placeholder,\n        onChange: handleChange,\n        onSubmit: onEnter\n      }\n    ),\n    ResultComp\n  ] });\n}\nexport {\n  Search as default\n};\n"],"names":["variables$1","Text","highlight","children","jsx","Fragment","lastIdx","idx","frag","classNames","variables","f","idx2","Fragment2","Search","onChange","onSearch","onEnter","onSelect","builtin","useConnector","search","localize","useLocale","placeholder","_","startTransition","useTransition","handleChange","value","renderTip","fileCount","acc","cur","data","useMemo","SearchMode","target","find","i","TreeNodeModel","FileTypes","treeNodeMap","result","nodes","node","index","n","curPath","lastPath","parent","item","expandedKeys","_2","ResultComp","jsxs","ScrollBar","Tree","val","curRow","r","matchKeyword","Input"],"mappings":"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"}