{"version":3,"file":"monaco-bBY_BnLh.js","sources":["../../../esm/services/monaco.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\nvar __decorateParam = (index, decorator) => (target, key) => decorator(target, key, index);\nimport {\n  DynamicStandaloneServices,\n  IAccessibilityService,\n  ICodeEditorService,\n  ICommandService,\n  IConfigurationService,\n  IContextKeyService,\n  IContextViewService,\n  IInstantiationService,\n  IKeybindingService,\n  ILayoutService,\n  IModelService,\n  IModeService,\n  INotificationService,\n  IOpenerService,\n  IQuickInputService,\n  IStandaloneThemeService,\n  ITextModelService,\n  IEditorWorkerService,\n  IContextMenuService,\n  IEditorProgressService,\n  IClipboardService,\n  OpenerService,\n  QuickInputService,\n  SimpleEditorModelResolverService,\n  SimpleLayoutService,\n  StandaloneEditor,\n  StandaloneDiffEditor,\n  StaticServices\n} from \"../monaco\";\nimport { inject, injectable } from \"tsyringe\";\nlet MonacoService = class {\n  constructor(colorTheme) {\n    this.colorTheme = colorTheme;\n  }\n  _services;\n  simpleEditorModelResolverService = null;\n  _container;\n  initWorkspace(container) {\n    this._container = container;\n    this._services = this.createStandaloneServices();\n  }\n  get container() {\n    return this._container;\n  }\n  get services() {\n    return this._services;\n  }\n  get commandService() {\n    return this.services.get(ICommandService);\n  }\n  get QuickInputService() {\n    return this.services.get(IQuickInputService);\n  }\n  mergeEditorServices(overrides) {\n    if (overrides) {\n      const services = this.services;\n      for (const serviceId in overrides) {\n        if (serviceId) {\n          const service = services.get(serviceId);\n          if (service && overrides[serviceId]) {\n            services.set(serviceId, overrides[serviceId]);\n          }\n        }\n      }\n    }\n  }\n  create(domElement, options, overrides) {\n    const services = this.services;\n    this.mergeEditorServices(overrides);\n    if (!services.has(ITextModelService)) {\n      this.simpleEditorModelResolverService = new SimpleEditorModelResolverService(\n        StaticServices.modelService.get()\n      );\n      services.set(ITextModelService, this.simpleEditorModelResolverService);\n    }\n    const standaloneEditor = new StandaloneEditor(\n      domElement,\n      options,\n      services,\n      services.get(IInstantiationService),\n      services.get(ICodeEditorService),\n      services.get(ICommandService),\n      services.get(IContextKeyService),\n      services.get(IKeybindingService),\n      services.get(IContextViewService),\n      services.get(IStandaloneThemeService),\n      services.get(INotificationService),\n      services.get(IConfigurationService),\n      services.get(IAccessibilityService),\n      services.get(IModelService),\n      services.get(IModeService)\n    );\n    if (this.simpleEditorModelResolverService) {\n      this.simpleEditorModelResolverService.setEditor(standaloneEditor);\n    }\n    this.colorTheme.setCurrent(this.colorTheme.getCurrent());\n    return standaloneEditor;\n  }\n  createDiffEditor(domElement, options, overrides) {\n    const services = this.services;\n    this.mergeEditorServices(overrides);\n    if (!services.has(ITextModelService)) {\n      this.simpleEditorModelResolverService = new SimpleEditorModelResolverService(\n        StaticServices.modelService.get()\n      );\n      services.set(ITextModelService, this.simpleEditorModelResolverService);\n    }\n    const standaloneDiffEditor = new StandaloneDiffEditor(\n      domElement,\n      options,\n      services,\n      services.get(IInstantiationService),\n      services.get(IContextKeyService),\n      services.get(IKeybindingService),\n      services.get(IContextViewService),\n      services.get(IEditorWorkerService),\n      services.get(ICodeEditorService),\n      services.get(IStandaloneThemeService),\n      services.get(INotificationService),\n      services.get(IConfigurationService),\n      services.get(IContextMenuService),\n      services.get(IEditorProgressService),\n      services.get(IClipboardService)\n    );\n    if (this.simpleEditorModelResolverService) {\n      this.simpleEditorModelResolverService.setEditor(standaloneDiffEditor);\n    }\n    this.colorTheme.setCurrent(this.colorTheme.getCurrent());\n    return standaloneDiffEditor;\n  }\n  // When Application will unmount, call it\n  dispose() {\n  }\n  createStandaloneServices() {\n    const services = new DynamicStandaloneServices(this.container);\n    const instantiationService = services.get(IInstantiationService);\n    if (!services.has(IOpenerService)) {\n      services.set(\n        IOpenerService,\n        new OpenerService(services.get(ICodeEditorService), services.get(ICommandService))\n      );\n    }\n    const quickInputService = instantiationService.createInstance(QuickInputService);\n    const layoutService = new SimpleLayoutService(\n      StaticServices.codeEditorService.get(ICodeEditorService),\n      this.container\n    );\n    services.set(ILayoutService, layoutService);\n    services.set(IQuickInputService, quickInputService);\n    this.dispose = services.dispose;\n    services.dispose = () => {\n    };\n    return services;\n  }\n};\nMonacoService = __decorateClass([\n  injectable(),\n  __decorateParam(0, inject(\"colorTheme\"))\n], MonacoService);\nexport {\n  MonacoService\n};\n"],"names":["__getOwnPropDesc","__decorateClass","decorators","target","key","kind","result","i","decorator","__decorateParam","index","MonacoService","colorTheme","container","ICommandService","IQuickInputService","overrides","services","serviceId","domElement","options","ITextModelService","SimpleEditorModelResolverService","StaticServices","standaloneEditor","StandaloneEditor","IInstantiationService","ICodeEditorService","IContextKeyService","IKeybindingService","IContextViewService","IStandaloneThemeService","INotificationService","IConfigurationService","IAccessibilityService","IModelService","IModeService","standaloneDiffEditor","StandaloneDiffEditor","IEditorWorkerService","IContextMenuService","IEditorProgressService","IClipboardService","DynamicStandaloneServices","instantiationService","IOpenerService","OpenerService","quickInputService","QuickInputService","layoutService","SimpleLayoutService","ILayoutService","injectable","inject"],"mappings":"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"}