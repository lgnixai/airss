{"version":3,"file":"menuBar-fd0pOvtH.js","sources":["../../../esm/services/menuBar.js"],"sourcesContent":["import { isUndefined } from \"lodash-es\";\nimport { BaseService } from \"../glue\";\nimport { MenuBarEvent, MenuBarModel } from \"../models/menuBar\";\nimport { searchById, toggleNextIcon } from \"../utils\";\nimport { TreeHelper } from \"../utils/tree\";\nclass MenuBarService extends BaseService {\n  state;\n  constructor() {\n    super(\"menuBar\");\n    this.state = new MenuBarModel();\n  }\n  get(id) {\n    const treeHelper = new TreeHelper(this.getState().data);\n    return treeHelper.getNode(id);\n  }\n  update(item, predict) {\n    this.dispatch((draft) => {\n      const treeHelper = new TreeHelper(draft.data);\n      const node = treeHelper.getNode(typeof item === \"object\" ? item.id : item);\n      if (!node)\n        return;\n      Object.assign(node, typeof item === \"object\" ? item : predict?.(node));\n    });\n  }\n  toggleChecked(id) {\n    this.update(id, (node) => ({ icon: toggleNextIcon(node.icon) }));\n  }\n  setMenus = (menuData) => {\n    this.dispatch((draft) => {\n      draft.data = menuData;\n    });\n  };\n  add(data, parentId) {\n    this.dispatch((draft) => {\n      const treeHelper = new TreeHelper(draft.data);\n      const parent = treeHelper.getNode(parentId);\n      if (!parent)\n        return;\n      parent.children ??= [];\n      parent.children.push(data);\n    });\n  }\n  remove(id) {\n    this.dispatch((draft) => {\n      const treeHelper = new TreeHelper(draft.data);\n      const parent = treeHelper.getParent(id);\n      if (!parent)\n        return;\n      const idx = parent.children?.findIndex(searchById(id));\n      if (idx === -1 || isUndefined(idx))\n        return;\n      parent.children?.splice(idx, 1);\n    });\n  }\n  reset() {\n    this.setState(new MenuBarModel());\n  }\n  // ===================== Subscriptions =====================\n  onSelect = (callback) => {\n    this.subscribe(MenuBarEvent.onSelect, callback);\n  };\n  onContextMenu(callback) {\n    this.subscribe(MenuBarEvent.onContextMenu, callback);\n  }\n}\nexport {\n  MenuBarService\n};\n"],"names":["MenuBarService","BaseService","MenuBarModel","id","TreeHelper","item","predict","draft","node","toggleNextIcon","menuData","data","parentId","parent","idx","searchById","isUndefined","callback","MenuBarEvent"],"mappings":"uOAKA,MAAMA,UAAuBC,CAAY,CACvC,MACA,aAAc,CACZ,MAAM,SAAS,EACf,KAAK,MAAQ,IAAIC,CACnB,CACA,IAAIC,EAAI,CAEN,OADmB,IAAIC,EAAW,KAAK,SAAQ,EAAG,IAAI,EACpC,QAAQD,CAAE,CAC9B,CACA,OAAOE,EAAMC,EAAS,CACpB,KAAK,SAAUC,GAAU,CAEvB,MAAMC,EADa,IAAIJ,EAAWG,EAAM,IAAI,EACpB,QAAQ,OAAOF,GAAS,SAAWA,EAAK,GAAKA,CAAI,EACpEG,GAEL,OAAO,OAAOA,EAAM,OAAOH,GAAS,SAAWA,EAAOC,IAAUE,CAAI,CAAC,CACvE,CAAC,CACH,CACA,cAAcL,EAAI,CAChB,KAAK,OAAOA,EAAKK,IAAU,CAAE,KAAMC,EAAeD,EAAK,IAAI,CAAC,EAAG,CACjE,CACA,SAAYE,GAAa,CACvB,KAAK,SAAUH,GAAU,CACvBA,EAAM,KAAOG,CACf,CAAC,CACH,EACA,IAAIC,EAAMC,EAAU,CAClB,KAAK,SAAUL,GAAU,CAEvB,MAAMM,EADa,IAAIT,EAAWG,EAAM,IAAI,EAClB,QAAQK,CAAQ,EACrCC,IAELA,EAAO,WAAa,CAAA,EACpBA,EAAO,SAAS,KAAKF,CAAI,EAC3B,CAAC,CACH,CACA,OAAOR,EAAI,CACT,KAAK,SAAUI,GAAU,CAEvB,MAAMM,EADa,IAAIT,EAAWG,EAAM,IAAI,EAClB,UAAUJ,CAAE,EACtC,GAAI,CAACU,EACH,OACF,MAAMC,EAAMD,EAAO,UAAU,UAAUE,EAAWZ,CAAE,CAAC,EACjDW,IAAQ,IAAME,EAAYF,CAAG,GAEjCD,EAAO,UAAU,OAAOC,EAAK,CAAC,CAChC,CAAC,CACH,CACA,OAAQ,CACN,KAAK,SAAS,IAAIZ,CAAc,CAClC,CAEA,SAAYe,GAAa,CACvB,KAAK,UAAUC,EAAa,SAAUD,CAAQ,CAChD,EACA,cAAcA,EAAU,CACtB,KAAK,UAAUC,EAAa,cAAeD,CAAQ,CACrD,CACF"}